<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10200.17.0328.0755                               -->
<workbook source-build='10.2.1 (10200.17.0328.0755)' source-platform='win' version='10.2' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <repository-location id='Cricket_IPL_0' path='/workbooks' revision='1.0' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Wins' inline='true' name='federated.0x6f7yq1q24nph1eejmz916y709b' version='10.2'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Winner' name='textscan.0kp2whf0kfpcsw1g5cfdg0wtecwh'>
            <connection class='textscan' directory='A:/Semester 2/DIC/Term Project/TermProjectData' filename='Winner.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.0kp2whf0kfpcsw1g5cfdg0wtecwh' name='Winner.csv' table='[Winner#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='Year' ordinal='0' />
            <column datatype='string' name='team' ordinal='1' />
            <column datatype='integer' name='count(winner)' ordinal='2' />
          </columns>
        </relation>
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[Winner.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>team</remote-name>
            <remote-type>129</remote-type>
            <local-name>[team]</local-name>
            <parent-name>[Winner.csv]</parent-name>
            <remote-alias>team</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>count(winner)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[count(winner)]</local-name>
            <parent-name>[Winner.csv]</parent-name>
            <remote-alias>count(winner)</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Winner.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <column caption='Number of Wins' datatype='integer' name='[count(winner)]' role='measure' type='quantitative' />
      <column caption='Team' datatype='string' name='[team]' role='dimension' type='nominal' />
      <column-instance column='[count(winner)]' derivation='Sum' forecast-column-base='[sum:count(winner):qk]' forecast-column-type='forecast-value' name='[fVal:sum:count(winner):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[team]' derivation='None' name='[none:team:nk]' pivot='key' type='nominal' />
      <column-instance column='[count(winner)]' derivation='Sum' name='[sum:count(winner):qk]' pivot='key' type='quantitative' />
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='C:/Users/Saurabh/Documents/My Tableau Repository/Datasources/Wins.tde' schema='Extract' tablename='Extract' update-time='05/04/2017 07:11:14 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh increment-key='' incremental-updates='false'>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='76' timestamp-start='2017-05-04 19:11:14.161' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>0</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>76.0</statistic>
                <statistic aggregation='Avg' datatype='real'>1.0</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.0</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.0</statistic>
                <statistic aggregation='Var' datatype='real'>0.0</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0</statistic>
                <statistic aggregation='Count' datatype='integer'>76</statistic>
                <statistic aggregation='Median' datatype='integer'>1</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>76.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Year</remote-name>
              <remote-type>2</remote-type>
              <local-name>[Year]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Year</remote-alias>
              <ordinal>1</ordinal>
              <family>Winner.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>9</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>152911.0</statistic>
                <statistic aggregation='Avg' datatype='real'>2011.9868421052631</statistic>
                <statistic aggregation='Min' datatype='integer'>2008</statistic>
                <statistic aggregation='Max' datatype='integer'>2016</statistic>
                <statistic aggregation='Stdev' datatype='real'>2.5376809416085995</statistic>
                <statistic aggregation='StdevP' datatype='real'>2.5209303893009087</statistic>
                <statistic aggregation='Var' datatype='real'>6.4398245614035083</statistic>
                <statistic aggregation='VarP' datatype='real'>6.3550900277008306</statistic>
                <statistic aggregation='Count' datatype='integer'>76</statistic>
                <statistic aggregation='Median' datatype='integer'>2012</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>307655403.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>count(winner)</remote-name>
              <remote-type>16</remote-type>
              <local-name>[count(winner)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>count(winner)</remote-alias>
              <ordinal>2</ordinal>
              <family>Winner.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>12</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>574.0</statistic>
                <statistic aggregation='Avg' datatype='real'>7.5526315789473681</statistic>
                <statistic aggregation='Min' datatype='integer'>2</statistic>
                <statistic aggregation='Max' datatype='integer'>13</statistic>
                <statistic aggregation='Stdev' datatype='real'>2.6852423197524415</statistic>
                <statistic aggregation='StdevP' datatype='real'>2.6675177543043804</statistic>
                <statistic aggregation='Var' datatype='real'>7.2105263157894735</statistic>
                <statistic aggregation='VarP' datatype='real'>7.1156509695290859</statistic>
                <statistic aggregation='Count' datatype='integer'>76</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>4876.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>team</remote-name>
              <remote-type>129</remote-type>
              <local-name>[team]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>team</remote-alias>
              <ordinal>3</ordinal>
              <family>Winner.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>13</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Chennai Super Kings&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Sunrisers Hyderabad&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>76</statistic>
                <statistic aggregation='Median' datatype='string'>&quot;Kolkata Knight Riders&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.501437' measure-ordering='alphabetic' measure-percentage='0.498563' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Forecast Indicator:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Actual&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Estimate&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0x6f7yq1q24nph1eejmz916y709b].[fVal:sum:count(winner):qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0x6f7yq1q24nph1eejmz916y709b]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:team:nk]' palette='superfishel_stone_10_0' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Pune Warriors&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chennai Super Kings&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kings XI Punjab&quot;</bucket>
            </map>
            <map to='#6388b4'>
              <bucket>&quot;Mumbai Indians&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sunrisers Hyderabad&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Rajasthan Royals&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kochi Tuskers Kerala&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Deccan Chargers&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kolkata Knight Riders&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Rising Pune Supergiants&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Delhi Daredevils&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Royal Challengers Bangalore&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Gujarat Lions&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <default-sorts>
        <sort class='manual' column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </sort>
      </default-sorts>
    </datasource>
    <datasource caption='matches+' inline='true' name='federated.11w1e4e0p7t9mc15hk9bj1vrgi6c' version='10.2'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='matches' name='textscan.1krywk20vdpo6n15ghleg1259gv1'>
            <connection class='textscan' directory='A:/Semester 2/DIC/Term Project/TermProjectData' filename='matches.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[deliveries.csv].[match_id]' />
              <expression op='[matches.csv].[id]' />
            </expression>
          </clause>
          <relation connection='textscan.1krywk20vdpo6n15ghleg1259gv1' name='deliveries.csv' table='[deliveries#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='match_id' ordinal='0' />
              <column datatype='integer' name='inning' ordinal='1' />
              <column datatype='string' name='batting_team' ordinal='2' />
              <column datatype='string' name='bowling_team' ordinal='3' />
              <column datatype='integer' name='over' ordinal='4' />
              <column datatype='integer' name='ball' ordinal='5' />
              <column datatype='string' name='batsman' ordinal='6' />
              <column datatype='string' name='non_striker' ordinal='7' />
              <column datatype='string' name='bowler' ordinal='8' />
              <column datatype='integer' name='is_super_over' ordinal='9' />
              <column datatype='integer' name='wide_runs' ordinal='10' />
              <column datatype='integer' name='bye_runs' ordinal='11' />
              <column datatype='integer' name='legbye_runs' ordinal='12' />
              <column datatype='integer' name='noball_runs' ordinal='13' />
              <column datatype='integer' name='penalty_runs' ordinal='14' />
              <column datatype='integer' name='batsman_runs' ordinal='15' />
              <column datatype='integer' name='extra_runs' ordinal='16' />
              <column datatype='integer' name='total_runs' ordinal='17' />
              <column datatype='string' name='player_dismissed' ordinal='18' />
              <column datatype='string' name='dismissal_kind' ordinal='19' />
              <column datatype='string' name='fielder' ordinal='20' />
            </columns>
          </relation>
          <relation connection='textscan.1krywk20vdpo6n15ghleg1259gv1' name='matches.csv' table='[matches#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='id' ordinal='0' />
              <column datatype='integer' name='season' ordinal='1' />
              <column datatype='string' name='city' ordinal='2' />
              <column datatype='string' name='State' ordinal='3' />
              <column datatype='string' name='Country' ordinal='4' />
              <column datatype='date' name='date' ordinal='5' />
              <column datatype='string' name='team1' ordinal='6' />
              <column datatype='string' name='team2' ordinal='7' />
              <column datatype='string' name='toss_winner' ordinal='8' />
              <column datatype='string' name='toss_decision' ordinal='9' />
              <column datatype='string' name='result' ordinal='10' />
              <column datatype='integer' name='dl_applied' ordinal='11' />
              <column datatype='string' name='winner' ordinal='12' />
              <column datatype='integer' name='win_by_runs' ordinal='13' />
              <column datatype='integer' name='win_by_wickets' ordinal='14' />
              <column datatype='string' name='player_of_match' ordinal='15' />
              <column datatype='string' name='venue' ordinal='16' />
              <column datatype='string' name='umpire1' ordinal='17' />
              <column datatype='string' name='umpire2' ordinal='18' />
              <column datatype='string' name='umpire3' ordinal='19' />
            </columns>
          </relation>
        </relation>
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>match_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[match_id]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>match_id</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>inning</remote-name>
            <remote-type>20</remote-type>
            <local-name>[inning]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>inning</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>batting_team</remote-name>
            <remote-type>129</remote-type>
            <local-name>[batting_team]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>batting_team</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>bowling_team</remote-name>
            <remote-type>129</remote-type>
            <local-name>[bowling_team]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>bowling_team</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>over</remote-name>
            <remote-type>20</remote-type>
            <local-name>[over]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>over</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ball</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ball]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>ball</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>batsman</remote-name>
            <remote-type>129</remote-type>
            <local-name>[batsman]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>batsman</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>non_striker</remote-name>
            <remote-type>129</remote-type>
            <local-name>[non_striker]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>non_striker</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>bowler</remote-name>
            <remote-type>129</remote-type>
            <local-name>[bowler]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>bowler</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>is_super_over</remote-name>
            <remote-type>20</remote-type>
            <local-name>[is_super_over]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>is_super_over</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>wide_runs</remote-name>
            <remote-type>20</remote-type>
            <local-name>[wide_runs]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>wide_runs</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>bye_runs</remote-name>
            <remote-type>20</remote-type>
            <local-name>[bye_runs]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>bye_runs</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>legbye_runs</remote-name>
            <remote-type>20</remote-type>
            <local-name>[legbye_runs]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>legbye_runs</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>noball_runs</remote-name>
            <remote-type>20</remote-type>
            <local-name>[noball_runs]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>noball_runs</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>penalty_runs</remote-name>
            <remote-type>20</remote-type>
            <local-name>[penalty_runs]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>penalty_runs</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>batsman_runs</remote-name>
            <remote-type>20</remote-type>
            <local-name>[batsman_runs]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>batsman_runs</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>extra_runs</remote-name>
            <remote-type>20</remote-type>
            <local-name>[extra_runs]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>extra_runs</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_runs</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_runs]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>total_runs</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>player_dismissed</remote-name>
            <remote-type>129</remote-type>
            <local-name>[player_dismissed]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>player_dismissed</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dismissal_kind</remote-name>
            <remote-type>129</remote-type>
            <local-name>[dismissal_kind]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>dismissal_kind</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>fielder</remote-name>
            <remote-type>129</remote-type>
            <local-name>[fielder]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>fielder</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[id]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>id</remote-alias>
            <ordinal>21</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>season</remote-name>
            <remote-type>20</remote-type>
            <local-name>[season]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>season</remote-alias>
            <ordinal>22</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>city</remote-name>
            <remote-type>129</remote-type>
            <local-name>[city]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>city</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>129</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>26</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;date&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>team1</remote-name>
            <remote-type>129</remote-type>
            <local-name>[team1]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>team1</remote-alias>
            <ordinal>27</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>team2</remote-name>
            <remote-type>129</remote-type>
            <local-name>[team2]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>team2</remote-alias>
            <ordinal>28</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>toss_winner</remote-name>
            <remote-type>129</remote-type>
            <local-name>[toss_winner]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>toss_winner</remote-alias>
            <ordinal>29</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>toss_decision</remote-name>
            <remote-type>129</remote-type>
            <local-name>[toss_decision]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>toss_decision</remote-alias>
            <ordinal>30</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>result</remote-name>
            <remote-type>129</remote-type>
            <local-name>[result]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>result</remote-alias>
            <ordinal>31</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dl_applied</remote-name>
            <remote-type>20</remote-type>
            <local-name>[dl_applied]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>dl_applied</remote-alias>
            <ordinal>32</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>winner</remote-name>
            <remote-type>129</remote-type>
            <local-name>[winner]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>winner</remote-alias>
            <ordinal>33</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>win_by_runs</remote-name>
            <remote-type>20</remote-type>
            <local-name>[win_by_runs]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>win_by_runs</remote-alias>
            <ordinal>34</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>win_by_wickets</remote-name>
            <remote-type>20</remote-type>
            <local-name>[win_by_wickets]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>win_by_wickets</remote-alias>
            <ordinal>35</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>player_of_match</remote-name>
            <remote-type>129</remote-type>
            <local-name>[player_of_match]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>player_of_match</remote-alias>
            <ordinal>36</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>venue</remote-name>
            <remote-type>129</remote-type>
            <local-name>[venue]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>venue</remote-alias>
            <ordinal>37</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>umpire1</remote-name>
            <remote-type>129</remote-type>
            <local-name>[umpire1]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>umpire1</remote-alias>
            <ordinal>38</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>umpire2</remote-name>
            <remote-type>129</remote-type>
            <local-name>[umpire2]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>umpire2</remote-alias>
            <ordinal>39</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>umpire3</remote-name>
            <remote-type>129</remote-type>
            <local-name>[umpire3]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>umpire3</remote-alias>
            <ordinal>40</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Batsman Average' datatype='real' name='[Calculation_553379806911827969]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([batsman_runs])/COUNT([player_dismissed])' />
      </column>
      <column caption='Batsman Strikerate' datatype='real' name='[Calculation_553379806912602114]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([batsman_runs])/COUNT([batsman]) * 100' />
      </column>
      <column caption='Bowler Average' datatype='real' name='[Calculation_553379806916235267]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([total_runs])/COUNT([player_dismissed])' />
      </column>
      <column caption='Bowler Strike rate' datatype='real' name='[Calculation_553379806916341764]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNT([bowler])/COUNT([player_dismissed])' />
      </column>
      <column caption='Bowler Economy rate' datatype='real' name='[Calculation_553379806919364613]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([total_runs])/COUNT([bowler]) *6' />
      </column>
      <column caption='Wins' datatype='integer' name='[Calculation_553379807029018638]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED [winner],[season] : COUNT(1)}' />
      </column>
      <column caption='Match' datatype='string' name='[Calculation_825847582369042439]' role='measure' type='nominal'>
        <calculation class='tableau' formula='ATTR([team1]) +&quot; Vs &quot;+ ATTR([team2])' />
      </column>
      <column caption='Fours' datatype='integer' name='[Calculation_825847582521495571]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [batsman_runs]==4 THEN 1 &#13;&#10;END' />
      </column>
      <column caption='Sixes' datatype='integer' name='[Calculation_825847582521765908]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [batsman_runs]==6 then 1 END' />
      </column>
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
        <semantic-values semantic-role='[Country].[Name]'>
          <semantic-value key='&quot;Africa&quot;' value='&quot;South Africa&quot;' />
        </semantic-values>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Ball' datatype='integer' name='[ball]' role='measure' type='quantitative' />
      <column caption='Batsman' datatype='string' name='[batsman]' role='dimension' type='nominal' />
      <column caption='Batsman Runs' datatype='integer' name='[batsman_runs]' role='measure' type='quantitative' />
      <column caption='Batting Team' datatype='string' name='[batting_team]' role='dimension' type='nominal' />
      <column caption='Bowler' datatype='string' name='[bowler]' role='dimension' type='nominal' />
      <column caption='Bowling Team' datatype='string' name='[bowling_team]' role='dimension' type='nominal' />
      <column caption='Bye Runs' datatype='integer' name='[bye_runs]' role='measure' type='quantitative' />
      <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Dismissal Kind' datatype='string' name='[dismissal_kind]' role='dimension' type='nominal' />
      <column caption='Dl Applied' datatype='integer' name='[dl_applied]' role='measure' type='quantitative' />
      <column caption='Extra Runs' datatype='integer' name='[extra_runs]' role='measure' type='quantitative' />
      <column caption='Fielder' datatype='string' name='[fielder]' role='dimension' type='nominal' />
      <column caption='Id' datatype='integer' name='[id]' role='dimension' type='ordinal' />
      <column caption='Inning' datatype='integer' name='[inning]' role='measure' type='quantitative' />
      <column caption='Is Super Over' datatype='integer' name='[is_super_over]' role='measure' type='quantitative' />
      <column caption='Legbye Runs' datatype='integer' name='[legbye_runs]' role='measure' type='quantitative' />
      <column caption='Match Id' datatype='integer' name='[match_id]' role='dimension' type='ordinal' />
      <column caption='Noball Runs' datatype='integer' name='[noball_runs]' role='measure' type='quantitative' />
      <column caption='Non Striker' datatype='string' name='[non_striker]' role='dimension' type='nominal' />
      <column caption='Over' datatype='integer' name='[over]' role='measure' type='quantitative' />
      <column caption='Penalty Runs' datatype='integer' name='[penalty_runs]' role='measure' type='quantitative' />
      <column caption='Player Dismissed' datatype='string' name='[player_dismissed]' role='dimension' type='nominal' />
      <column caption='Player Of Match' datatype='string' name='[player_of_match]' role='dimension' type='nominal' />
      <column caption='Result' datatype='string' name='[result]' role='dimension' type='nominal' />
      <column caption='Season' datatype='integer' name='[season]' role='measure' type='quantitative' />
      <column caption='Team1' datatype='string' name='[team1]' role='dimension' type='nominal' />
      <column caption='Team2' datatype='string' name='[team2]' role='dimension' type='nominal' />
      <column caption='Toss Decision' datatype='string' name='[toss_decision]' role='dimension' type='nominal' />
      <column caption='Toss Winner' datatype='string' name='[toss_winner]' role='dimension' type='nominal' />
      <column caption='Total Runs' datatype='integer' name='[total_runs]' role='measure' type='quantitative' />
      <column caption='Umpire1' datatype='string' name='[umpire1]' role='dimension' type='nominal' />
      <column caption='Umpire2' datatype='string' name='[umpire2]' role='dimension' type='nominal' />
      <column caption='Umpire3' datatype='string' name='[umpire3]' role='dimension' type='nominal' />
      <column caption='Venue' datatype='string' name='[venue]' role='dimension' type='nominal' />
      <column caption='Wide Runs' datatype='integer' name='[wide_runs]' role='measure' type='quantitative' />
      <column caption='Win By Runs' datatype='integer' name='[win_by_runs]' role='measure' type='quantitative' />
      <column caption='Win By Wickets' datatype='integer' name='[win_by_wickets]' role='measure' type='quantitative' />
      <column caption='Winner' datatype='string' name='[winner]' role='dimension' type='nominal' />
      <column-instance column='[batsman_runs]' derivation='Attribute' name='[attr:batsman_runs:qk]' pivot='key' type='quantitative' />
      <column-instance column='[season]' derivation='Attribute' name='[attr:season:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_825847582521495571]' derivation='Count' name='[cnt:Calculation_825847582521495571:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_825847582521765908]' derivation='Count' name='[cnt:Calculation_825847582521765908:qk]' pivot='key' type='quantitative' />
      <column-instance column='[batsman]' derivation='Count' name='[cnt:batsman:qk]' pivot='key' type='quantitative' />
      <column-instance column='[player_dismissed]' derivation='Count' name='[cnt:player_dismissed:qk]' pivot='key' type='quantitative' />
      <column-instance column='[season]' derivation='Count' name='[cnt:season:qk]' pivot='key' type='quantitative' />
      <column-instance column='[batsman_runs]' derivation='CountD' name='[ctd:batsman_runs:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[batsman]' derivation='None' name='[none:batsman:nk]' pivot='key' type='nominal' />
      <column-instance column='[batting_team]' derivation='None' name='[none:batting_team:nk]' pivot='key' type='nominal' />
      <column-instance column='[bowler]' derivation='None' name='[none:bowler:nk]' pivot='key' type='nominal' />
      <column-instance column='[bowling_team]' derivation='None' name='[none:bowling_team:nk]' pivot='key' type='nominal' />
      <column-instance column='[season]' derivation='None' name='[none:season:qk]' pivot='key' type='quantitative' />
      <column-instance column='[team1]' derivation='None' name='[none:team1:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_825847582521765908]' derivation='Sum' name='[sum:Calculation_825847582521765908:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
      <column-instance column='[ball]' derivation='Sum' name='[sum:ball:qk]' pivot='key' type='quantitative' />
      <column-instance column='[batsman_runs]' derivation='Sum' name='[sum:batsman_runs:qk]' pivot='key' type='quantitative' />
      <column-instance column='[bye_runs]' derivation='Sum' name='[sum:bye_runs:qk]' pivot='key' type='quantitative' />
      <column-instance column='[dl_applied]' derivation='Sum' name='[sum:dl_applied:qk]' pivot='key' type='quantitative' />
      <column-instance column='[extra_runs]' derivation='Sum' name='[sum:extra_runs:qk]' pivot='key' type='quantitative' />
      <column-instance column='[inning]' derivation='Sum' name='[sum:inning:qk]' pivot='key' type='quantitative' />
      <column-instance column='[is_super_over]' derivation='Sum' name='[sum:is_super_over:qk]' pivot='key' type='quantitative' />
      <column-instance column='[legbye_runs]' derivation='Sum' name='[sum:legbye_runs:qk]' pivot='key' type='quantitative' />
      <column-instance column='[noball_runs]' derivation='Sum' name='[sum:noball_runs:qk]' pivot='key' type='quantitative' />
      <column-instance column='[over]' derivation='Sum' name='[sum:over:qk]' pivot='key' type='quantitative' />
      <column-instance column='[penalty_runs]' derivation='Sum' name='[sum:penalty_runs:qk]' pivot='key' type='quantitative' />
      <column-instance column='[season]' derivation='Sum' name='[sum:season:qk]' pivot='key' type='quantitative' />
      <column-instance column='[total_runs]' derivation='Sum' name='[sum:total_runs:qk]' pivot='key' type='quantitative' />
      <column-instance column='[wide_runs]' derivation='Sum' name='[sum:wide_runs:qk]' pivot='key' type='quantitative' />
      <column-instance column='[win_by_runs]' derivation='Sum' name='[sum:win_by_runs:qk]' pivot='key' type='quantitative' />
      <column-instance column='[win_by_wickets]' derivation='Sum' name='[sum:win_by_wickets:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_553379806911827969]' derivation='User' name='[usr:Calculation_553379806911827969:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_553379806912602114]' derivation='User' name='[usr:Calculation_553379806912602114:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_553379806916235267]' derivation='User' name='[usr:Calculation_553379806916235267:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_553379806916341764]' derivation='User' name='[usr:Calculation_553379806916341764:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_553379806919364613]' derivation='User' name='[usr:Calculation_553379806919364613:qk]' pivot='key' type='quantitative' />
      <group caption='Action (Batsman)' hidden='true' name='[Action (Batsman)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[batsman]' />
        </groupfilter>
      </group>
      <group caption='Action (Batsman,Batting Team)' hidden='true' name='[Action (Batsman,Batting Team)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[batsman]' />
          <groupfilter function='level-members' level='[batting_team]' />
        </groupfilter>
      </group>
      <group caption='Action (Bowler)' hidden='true' name='[Action (Bowler)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[bowler]' />
        </groupfilter>
      </group>
      <group caption='Action (Bowler,Bowling Team)' hidden='true' name='[Action (Bowler,Bowling Team)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[bowler]' />
          <groupfilter function='level-members' level='[bowling_team]' />
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='Country, State, City'>
          <field>[Country]</field>
          <field>[State]</field>
          <field>[city]</field>
        </drill-path>
      </drill-paths>
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='C:/Users/Saurabh/Documents/My Tableau Repository/Datasources/matches+.tde' schema='Extract' tablename='Extract' update-time='05/04/2017 02:13:50 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Calculation_825847582521495571]' formula='IF [batsman_runs]==4 THEN 1 &#13;&#10;END' />
            <calculation column='[Calculation_825847582521765908]' formula='IF [batsman_runs]==6 then 1 END' />
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh increment-key='' incremental-updates='false'>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='136598' timestamp-start='2017-05-04 14:13:50.274' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Calculation_825847582521495571</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Calculation_825847582521495571]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Calculation_825847582521495571</remote-alias>
              <ordinal>0</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
                <statistic aggregation='Count' datatype='integer'>15421</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>24</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Calculation_825847582521765908</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Calculation_825847582521765908]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Calculation_825847582521765908</remote-alias>
              <ordinal>1</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
                <statistic aggregation='Count' datatype='integer'>5817</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>25</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Country</remote-alias>
              <ordinal>2</ordinal>
              <family>matches.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Africa&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;United Arab Emirates&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>136598</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>3</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
                <statistic aggregation='Count' datatype='integer'>136598</statistic>
                <statistic aggregation='Median' datatype='integer'>1</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>State</remote-name>
              <remote-type>129</remote-type>
              <local-name>[State]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>State</remote-alias>
              <ordinal>4</ordinal>
              <family>matches.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>26</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Abu Dhabi&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Western Cape&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>136598</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>11</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ball</remote-name>
              <remote-type>16</remote-type>
              <local-name>[ball]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>ball</remote-alias>
              <ordinal>5</ordinal>
              <family>deliveries.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>9</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>494092.0</statistic>
                <statistic aggregation='Avg' datatype='real'>3.6171247016793804</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>9</statistic>
                <statistic aggregation='Stdev' datatype='real'>1.8081996228168635</statistic>
                <statistic aggregation='StdevP' datatype='real'>1.808193004114788</statistic>
                <statistic aggregation='Var' datatype='real'>3.2695858759550473</statistic>
                <statistic aggregation='VarP' datatype='real'>3.2695619401296621</statistic>
                <statistic aggregation='Count' datatype='integer'>136598</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>2233808.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>37</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>batsman</remote-name>
              <remote-type>129</remote-type>
              <local-name>[batsman]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>batsman</remote-alias>
              <ordinal>6</ordinal>
              <family>deliveries.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>436</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;A Ashish Reddy&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Z Khan&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>136598</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>21</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>batsman_runs</remote-name>
              <remote-type>16</remote-type>
              <local-name>[batsman_runs]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>batsman_runs</remote-alias>
              <ordinal>7</ordinal>
              <family>deliveries.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>7</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>166009.0</statistic>
                <statistic aggregation='Avg' datatype='real'>1.2153106194819836</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>6</statistic>
                <statistic aggregation='Stdev' datatype='real'>1.5896537749507405</statistic>
                <statistic aggregation='StdevP' datatype='real'>1.5896479562100403</statistic>
                <statistic aggregation='Var' datatype='real'>2.5269991242151391</statistic>
                <statistic aggregation='VarP' datatype='real'>2.526980624682758</statistic>
                <statistic aggregation='Count' datatype='integer'>136598</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>546933.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>34</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>batting_team</remote-name>
              <remote-type>129</remote-type>
              <local-name>[batting_team]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>batting_team</remote-alias>
              <ordinal>8</ordinal>
              <family>deliveries.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>13</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Chennai Super Kings&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Sunrisers Hyderabad&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>136598</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>5</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>bowler</remote-name>
              <remote-type>129</remote-type>
              <local-name>[bowler]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>bowler</remote-alias>
              <ordinal>9</ordinal>
              <family>deliveries.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>334</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;A Ashish Reddy&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Z Khan&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>136598</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>17</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>bowling_team</remote-name>
              <remote-type>129</remote-type>
              <local-name>[bowling_team]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>bowling_team</remote-alias>
              <ordinal>10</ordinal>
              <family>deliveries.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>13</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Chennai Super Kings&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Sunrisers Hyderabad&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>136598</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>6</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>bye_runs</remote-name>
              <remote-type>16</remote-type>
              <local-name>[bye_runs]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>bye_runs</remote-alias>
              <ordinal>11</ordinal>
              <family>deliveries.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>4</statistic>
                <statistic aggregation='Count' datatype='integer'>136598</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>30</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>city</remote-name>
              <remote-type>129</remote-type>
              <local-name>[city]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>city</remote-alias>
              <ordinal>12</ordinal>
              <family>matches.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>31</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Abu Dhabi&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Visakhapatnam&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>136598</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>12</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>date</remote-alias>
              <ordinal>13</ordinal>
              <family>matches.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>407</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='date'>#2008-04-18#</statistic>
                <statistic aggregation='Max' datatype='date'>#2016-05-29#</statistic>
                <statistic aggregation='Count' datatype='integer'>136598</statistic>
                <statistic aggregation='Median' datatype='date'>#2012-05-01#</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;date&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>dismissal_kind</remote-name>
              <remote-type>129</remote-type>
              <local-name>[dismissal_kind]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>dismissal_kind</remote-alias>
              <ordinal>14</ordinal>
              <family>deliveries.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>10</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;bowled&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;stumped&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>6727</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>dl_applied</remote-name>
              <remote-type>16</remote-type>
              <local-name>[dl_applied]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>dl_applied</remote-alias>
              <ordinal>15</ordinal>
              <family>matches.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
                <statistic aggregation='Count' datatype='integer'>136598</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>26</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>extra_runs</remote-name>
              <remote-type>16</remote-type>
              <local-name>[extra_runs]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>extra_runs</remote-alias>
              <ordinal>16</ordinal>
              <family>deliveries.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>7</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>7</statistic>
                <statistic aggregation='Count' datatype='integer'>136598</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>35</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>fielder</remote-name>
              <remote-type>129</remote-type>
              <local-name>[fielder]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>fielder</remote-alias>
              <ordinal>17</ordinal>
              <family>deliveries.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>422</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;A Ashish Reddy&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Z Khan&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>4871</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>19</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>id</remote-name>
              <remote-type>2</remote-type>
              <local-name>[id]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>id</remote-alias>
              <ordinal>18</ordinal>
              <family>matches.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>577</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>577</statistic>
                <statistic aggregation='Count' datatype='integer'>136598</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>22</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>inning</remote-name>
              <remote-type>16</remote-type>
              <local-name>[inning]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>inning</remote-alias>
              <ordinal>19</ordinal>
              <family>deliveries.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>4</statistic>
                <statistic aggregation='Count' datatype='integer'>136598</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>29</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>is_super_over</remote-name>
              <remote-type>16</remote-type>
              <local-name>[is_super_over]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>is_super_over</remote-alias>
              <ordinal>20</ordinal>
              <family>deliveries.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
                <statistic aggregation='Count' datatype='integer'>136598</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>27</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>legbye_runs</remote-name>
              <remote-type>16</remote-type>
              <local-name>[legbye_runs]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>legbye_runs</remote-alias>
              <ordinal>21</ordinal>
              <family>deliveries.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>5</statistic>
                <statistic aggregation='Count' datatype='integer'>136598</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>32</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>match_id</remote-name>
              <remote-type>2</remote-type>
              <local-name>[match_id]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>match_id</remote-alias>
              <ordinal>22</ordinal>
              <family>deliveries.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>577</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>577</statistic>
                <statistic aggregation='Count' datatype='integer'>136598</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>23</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>noball_runs</remote-name>
              <remote-type>16</remote-type>
              <local-name>[noball_runs]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>noball_runs</remote-alias>
              <ordinal>23</ordinal>
              <family>deliveries.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>5</statistic>
                <statistic aggregation='Count' datatype='integer'>136598</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>31</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>non_striker</remote-name>
              <remote-type>129</remote-type>
              <local-name>[non_striker]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>non_striker</remote-alias>
              <ordinal>24</ordinal>
              <family>deliveries.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>431</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;A Ashish Reddy&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Z Khan&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>136598</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>20</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>over</remote-name>
              <remote-type>16</remote-type>
              <local-name>[over]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>over</remote-alias>
              <ordinal>25</ordinal>
              <family>deliveries.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>20</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>20</statistic>
                <statistic aggregation='Count' datatype='integer'>136598</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>40</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>penalty_runs</remote-name>
              <remote-type>16</remote-type>
              <local-name>[penalty_runs]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>penalty_runs</remote-alias>
              <ordinal>26</ordinal>
              <family>deliveries.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>5</statistic>
                <statistic aggregation='Count' datatype='integer'>136598</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>28</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>player_dismissed</remote-name>
              <remote-type>129</remote-type>
              <local-name>[player_dismissed]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>player_dismissed</remote-alias>
              <ordinal>27</ordinal>
              <family>deliveries.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>413</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;A Ashish Reddy&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Z Khan&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>6727</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>18</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>player_of_match</remote-name>
              <remote-type>129</remote-type>
              <local-name>[player_of_match]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>player_of_match</remote-alias>
              <ordinal>28</ordinal>
              <family>matches.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>188</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;A Chandila&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Z Khan&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>136277</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>16</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>result</remote-name>
              <remote-type>129</remote-type>
              <local-name>[result]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>result</remote-alias>
              <ordinal>29</ordinal>
              <family>matches.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;no result&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;tie&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>136598</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>season</remote-name>
              <remote-type>2</remote-type>
              <local-name>[season]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>season</remote-alias>
              <ordinal>30</ordinal>
              <family>matches.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>9</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>2008</statistic>
                <statistic aggregation='Max' datatype='integer'>2016</statistic>
                <statistic aggregation='Count' datatype='integer'>136598</statistic>
                <statistic aggregation='Median' datatype='integer'>2012</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>38</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>team1</remote-name>
              <remote-type>129</remote-type>
              <local-name>[team1]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>team1</remote-alias>
              <ordinal>31</ordinal>
              <family>matches.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>13</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Chennai Super Kings&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Sunrisers Hyderabad&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>136598</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>7</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>team2</remote-name>
              <remote-type>129</remote-type>
              <local-name>[team2]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>team2</remote-alias>
              <ordinal>32</ordinal>
              <family>matches.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>13</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Chennai Super Kings&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Sunrisers Hyderabad&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>136598</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>8</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>toss_decision</remote-name>
              <remote-type>129</remote-type>
              <local-name>[toss_decision]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>toss_decision</remote-alias>
              <ordinal>33</ordinal>
              <family>matches.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;bat&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;field&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>136598</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>toss_winner</remote-name>
              <remote-type>129</remote-type>
              <local-name>[toss_winner]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>toss_winner</remote-alias>
              <ordinal>34</ordinal>
              <family>matches.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>13</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Chennai Super Kings&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Sunrisers Hyderabad&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>136598</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>9</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_runs</remote-name>
              <remote-type>16</remote-type>
              <local-name>[total_runs]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_runs</remote-alias>
              <ordinal>35</ordinal>
              <family>deliveries.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>8</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>175528.0</statistic>
                <statistic aggregation='Avg' datatype='real'>1.2849968520768971</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>7</statistic>
                <statistic aggregation='Stdev' datatype='real'>1.579013518792959</statistic>
                <statistic aggregation='StdevP' datatype='real'>1.5790077389996653</statistic>
                <statistic aggregation='Var' datatype='real'>2.4932836925309223</statistic>
                <statistic aggregation='VarP' datatype='real'>2.4932654398208349</statistic>
                <statistic aggregation='Count' datatype='integer'>136598</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>566128.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>36</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>umpire1</remote-name>
              <remote-type>129</remote-type>
              <local-name>[umpire1]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>umpire1</remote-alias>
              <ordinal>36</ordinal>
              <family>matches.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>43</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;A Nand Kishore&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;VA Kulkarni&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>136598</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>14</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>umpire2</remote-name>
              <remote-type>129</remote-type>
              <local-name>[umpire2]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>umpire2</remote-alias>
              <ordinal>37</ordinal>
              <family>matches.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>45</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;A Nand Kishore&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;VK Sharma&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>136598</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>15</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>umpire3</remote-name>
              <remote-type>129</remote-type>
              <local-name>[umpire3]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>umpire3</remote-alias>
              <ordinal>38</ordinal>
              <family>matches.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Count' datatype='integer'>0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>venue</remote-name>
              <remote-type>129</remote-type>
              <local-name>[venue]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>venue</remote-alias>
              <ordinal>39</ordinal>
              <family>matches.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>35</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Barabati Stadium&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Wankhede Stadium&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>136598</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>13</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>wide_runs</remote-name>
              <remote-type>16</remote-type>
              <local-name>[wide_runs]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>wide_runs</remote-alias>
              <ordinal>40</ordinal>
              <family>deliveries.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>5</statistic>
                <statistic aggregation='Count' datatype='integer'>136598</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>33</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>win_by_runs</remote-name>
              <remote-type>2</remote-type>
              <local-name>[win_by_runs]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>win_by_runs</remote-alias>
              <ordinal>41</ordinal>
              <family>matches.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>83</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>144</statistic>
                <statistic aggregation='Count' datatype='integer'>136598</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>41</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>win_by_wickets</remote-name>
              <remote-type>16</remote-type>
              <local-name>[win_by_wickets]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>win_by_wickets</remote-alias>
              <ordinal>42</ordinal>
              <family>matches.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>11</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>10</statistic>
                <statistic aggregation='Count' datatype='integer'>136598</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>39</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>winner</remote-name>
              <remote-type>129</remote-type>
              <local-name>[winner]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>winner</remote-alias>
              <ordinal>43</ordinal>
              <family>matches.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>14</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Chennai Super Kings&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Sunrisers Hyderabad&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>136277</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>10</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.5' show-structure='true' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='shape' field='[:Measure Names]' type='shape'>
            <map to='asterisk'>
              <bucket>&quot;[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[sum:is_super_over:qk]&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[usr:Calculation_553379806916235267:qk]&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[cnt:player_dismissed:qk]&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[sum:ball:qk]&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[sum:Calculation_825847582502653960:qk]&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[sum:legbye_runs:qk]&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[usr:Calculation_553379806919364613:qk]&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[sum:bye_runs:qk]&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[sum:Number of Records:qk]&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[sum:over:qk]&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[usr:Calculation_825847582365990916:qk]&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[sum:batsman_runs:qk]&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[sum:extra_runs:qk]&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[sum:Calculation_825847582367592453:qk]&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[sum:penalty_runs:qk]&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[sum:dl_applied:qk]&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[usr:Calculation_553379806911827969:qk]&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[sum:inning:qk]&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[usr:Calculation_553379806912602114:qk]&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[sum:noball_runs:qk]&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[usr:Calculation_553379806916341764:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:team1:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Mumbai Indians&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%many-values%</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Gujarat Lions&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Royal Challengers Bangalore&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Pune Warriors&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kings XI Punjab&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chennai Super Kings&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kochi Tuskers Kerala&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sunrisers Hyderabad&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Rajasthan Royals&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kolkata Knight Riders&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Deccan Chargers&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Rising Pune Supergiants&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Delhi Daredevils&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Forecast Indicator:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Actual&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Estimate&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:bowler:nk]' palette='traffic_light_10_0' type='palette'>
            <map to='#499894'>
              <bucket>&quot;AB Agarkar&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;AJ Finch&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;B Laughlin&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;BJ Hodge&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;GJ Maxwell&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Harbhajan Singh&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;JE Taylor&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;JP Faulkner&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;MJ Clarke&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;MM Sharma&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;P Suyal&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;R Rampaul&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;S Badree&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;SK Warne&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;SM Boland&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Y Gnaneswara Rao&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Y Venugopal Rao&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;YA Abdulla&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;A Ashish Reddy&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;AC Gilchrist&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;AR Patel&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;C Ganapathy&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;DL Vettori&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;FY Fazal&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;JA Morkel&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;K Goel&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;LA Carseldine&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;M Morkel&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;PJ Sangwan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;R Shukla&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;RR Bose&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;S Sreesanth&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Shoaib Akhtar&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Umar Gul&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;V Shankar&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;A Nehra&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;AS Raut&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;B Brainder Sran&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;BA Bhatt&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;DJ Muthuswami&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;DT Christian&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;JH Kallis&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;K Upadhyay&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;MF Maharoof&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;MG Neser&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;R Ashwin&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;RA Shaikh&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;RS Gavaskar&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sachin Baby&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Shakib Al Hasan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;T Henderson&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;VRV Singh&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;AA Chavan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;AD Mascarenhas&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;CJ Jordan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;CK Kapugedera&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;GS Sandhu&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;IC Pandey&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;JJ van der Wath&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Karanveer Singh&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;M Ntini&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;MS Gony&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;PC Valthaty&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;RE van der Merwe&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;S Kaushik&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;SM Harwood&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;SP Narine&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;TP Sudhindra&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Z Khan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;AB Dinda&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;AL Menaria&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;BW Hilfenhaus&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;CJ Anderson&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;DNT Zoysa&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Harmeet Singh&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;JEC Franklin&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;JR Hopes&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;M Manhas&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;MN Samuels&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;R Sathish&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;R Sharma&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;S Dhawan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;SB Joshi&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;TL Suman&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;YK Pathan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;A Mithun&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;A Singh&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;B Chipli&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;BB Sran&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;DJ Thornely&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;DW Steyn&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;JJ Bumrah&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;KAJ Roach&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;LRPL Taylor&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;MG Johnson&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;P Parameswaran&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;R Bhatia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;RV Gomez&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Shoaib Malik&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;SJ Srivastava&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;T Shamsi&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;VY Mahesh&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ankit Sharma&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;AP Dole&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;BMAJ Mendis&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;DB Ravi Teja&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;DJ Hussey&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;J Syed Mohammad&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;KP Pietersen&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;L Ablish&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;LR Shukla&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;NL McCullum&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;P Negi&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;S Aravind&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;S Rana&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Shivam Sharma&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;SS Sarkar&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;TA Boult&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;A Chandila&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;AS Rajpoot&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;AUK Pathan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Azhar Mahmood&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;DJ Harris&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;DP Nannes&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;J Yadav&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;JD Ryder&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;LJ Wright&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;M Muralitharan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;P Amarnath&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;PP Chawla&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;S Randiv&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;S Vidyut&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sandeep Sharma&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sunny Gupta&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;UT Yadav&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;AM Rahane&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;AN Ahmed&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;D du Preez&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;DE Bollinger&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;F du Plessis&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;J Botha&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;KJ Abbott&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;KW Richardson&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mashrafe Mortaza&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;ND Doshi&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;P Awana&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;RJ Peterson&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;RR Powar&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;SMSM Senanayake&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;SW Tait&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;V Kohli&quot;</bucket>
            </map>
            <map to='#b60a1c'>
              <bucket>&quot;SL Malinga&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;A Symonds&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;AF Milne&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;B Geeves&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;BE Hendricks&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;GB Hogg&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;GH Vihari&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Joginder Sharma&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;KS Williamson&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;M Ashwin&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;MJ McClenaghan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;P Prasanth&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;R Dhawan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;RW Price&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sandeep Sharma (1)&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;SK Raina&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;VS Yeligati&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;WD Parnell&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;AA Jhunjhunwala&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;AD Mathews&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;BCJ Cutting&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;CK Langeveldt&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Gurkeerat Singh&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;IK Pathan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;JM Kemp&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;KK Cooper&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;M Vijay&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mustafizur Rahman&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;PD Collingwood&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;RG More&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;RG Sharma&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;SD Chitnis&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;SR Watson&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Y Nagar&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;AA Kazi&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;AD Russell&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;CL White&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;CRD Fernando&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;HH Pandya&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Imran Tahir&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;JO Holder&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;KP Appanna&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;MA Khote&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;NLTC Perera&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;PJ Cummins&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;RJ Harris&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;S Ladda&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;SE Bond&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;SPD Smith&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;ST Jayasuriya&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;AM Salvi&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Anand Rajan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;BJ Rohrer&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;DAJ Bracewell&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;DJ Bravo&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;J Suchith&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;KMDN Kulasekara&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;L Balaji&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;MB Parmar&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;NJ Rimmington&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;P Kumar&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;RN ten Doeschate&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;RS Bopara&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Shami Ahmed&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;SS Mundhe&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;T Thushara&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Abdur Razzak&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Anureet Singh&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;D Kalyankrishna&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;DJG Sammy&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;FH Edwards&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;J Theron&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;JW Hastings&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;M Kartik&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mohammad Hafeez&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Pankaj Singh&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;PM Sarvesh Kumar&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;RR Bhatkal&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;S Nadeem&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Shoaib Ahmed&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;TG Southee&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;V Sehwag&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;A Uniyal&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;AB McDonald&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;CH Gayle&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;CJ McKay&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;GR Napier&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;HV Patel&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;KA Pollard&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;KC Cariappa&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;MK Tiwary&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mohammed Shami&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Parvez Rasool&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;R Vinay Kumar&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;S Gopal&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;SB Styris&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;SM Pollock&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;TM Dilshan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;YS Chahal&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;A Nel&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;A Zampa&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bipul Sharma&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;C Nanda&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;DL Chahar&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;GD McGrath&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;JDS Neesham&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;JP Duminy&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;M de Lange&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;MM Patel&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;P Sahu&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;R McLaren&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;S Tyagi&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;SB Bangar&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;SK Trivedi&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;WA Mota&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;WPUJC Vaas&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;A Flintoff&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;A Kumble&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;B Kumar&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;C Munro&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;DJ Hooda&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;DR Smith&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;JD Unadkat&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;K Santokie&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;LMP Simmons&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;MA Starc&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;PP Ojha&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;R Tewatia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;RR Raje&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;SA Abbott&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;SB Jakati&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;V Pratap Singh&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;VS Malik&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;AA Noffke&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;AG Murtaza&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;CR Brathwaite&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;D Salunkhe&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;D Wiese&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Iqbal Abdulla&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;KH Pandya&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kuldeep Yadav&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;KV Sharma&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;N Rana&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;NM Coulter-Nile&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;RP Singh&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;S Narwal&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Shahid Afridi&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;SR Tendulkar&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;STR Binny&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;AC Thomas&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;AM Nayar&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;BAW Mendis&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;CH Morris&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;DP Vijaykumar&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;I Malhotra&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;I Sharma&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kamran Khan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mohammad Asif&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;MP Stoinis&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;MR Marsh&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;RA Jadeja&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;S Kaul&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;SB Wagh&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;SN Thakur&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sohail Tanvir&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Yuvraj Singh&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;A Mishra&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;AC Voges&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;B Akhil&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;B Lee&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;DS Kulkarni&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Gagandeep Singh&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jaskaran Singh&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;JDP Oram&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;LPC Silva&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;MC Henriques&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;PV Tambe&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;R Ninan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;S Sriram&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;SA Yadav&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;SC Ganguly&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Swapnil Singh&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;VR Aaron&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:batsman:nk]' palette='color_blind_10_0' type='palette'>
            <map to='#1170aa'>
              <bucket>&quot;A Ashish Reddy&quot;</bucket>
            </map>
            <map to='#1170aa'>
              <bucket>&quot;AD Mathews&quot;</bucket>
            </map>
            <map to='#1170aa'>
              <bucket>&quot;Azhar Mahmood&quot;</bucket>
            </map>
            <map to='#1170aa'>
              <bucket>&quot;CH Gayle&quot;</bucket>
            </map>
            <map to='#1170aa'>
              <bucket>&quot;DH Yagnik&quot;</bucket>
            </map>
            <map to='#1170aa'>
              <bucket>&quot;DW Steyn&quot;</bucket>
            </map>
            <map to='#1170aa'>
              <bucket>&quot;Harbhajan Singh&quot;</bucket>
            </map>
            <map to='#1170aa'>
              <bucket>&quot;JEC Franklin&quot;</bucket>
            </map>
            <map to='#1170aa'>
              <bucket>&quot;KH Pandya&quot;</bucket>
            </map>
            <map to='#1170aa'>
              <bucket>&quot;LMP Simmons&quot;</bucket>
            </map>
            <map to='#1170aa'>
              <bucket>&quot;Mandeep Singh&quot;</bucket>
            </map>
            <map to='#1170aa'>
              <bucket>&quot;MK Tiwary&quot;</bucket>
            </map>
            <map to='#1170aa'>
              <bucket>&quot;N Saini&quot;</bucket>
            </map>
            <map to='#1170aa'>
              <bucket>&quot;PC Valthaty&quot;</bucket>
            </map>
            <map to='#1170aa'>
              <bucket>&quot;R Vinay Kumar&quot;</bucket>
            </map>
            <map to='#1170aa'>
              <bucket>&quot;S Anirudha&quot;</bucket>
            </map>
            <map to='#1170aa'>
              <bucket>&quot;SC Ganguly&quot;</bucket>
            </map>
            <map to='#1170aa'>
              <bucket>&quot;SPD Smith&quot;</bucket>
            </map>
            <map to='#1170aa'>
              <bucket>&quot;UBT Chand&quot;</bucket>
            </map>
            <map to='#1170aa'>
              <bucket>&quot;V Kohli&quot;</bucket>
            </map>
            <map to='#1170aa'>
              <bucket>&quot;Yuvraj Singh&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;A Nehra&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;AS Yadav&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;CRD Fernando&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Iqbal Abdulla&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;JJ van der Wath&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;M Ashwin&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;MDKJ Perera&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;S Gopal&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;SB Bangar&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;SM Harwood&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;UT Yadav&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;YA Abdulla&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;AB Dinda&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ankit Sharma&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;CJ Ferguson&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Kamran Khan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;L Ronchi&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;MM Patel&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;PJ Sangwan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;RT Ponting&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Shoaib Ahmed&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;TM Head&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;WA Mota&quot;</bucket>
            </map>
            <map to='#57606c'>
              <bucket>&quot;AA Jhunjhunwala&quot;</bucket>
            </map>
            <map to='#57606c'>
              <bucket>&quot;AL Menaria&quot;</bucket>
            </map>
            <map to='#57606c'>
              <bucket>&quot;B Lee&quot;</bucket>
            </map>
            <map to='#57606c'>
              <bucket>&quot;CL White&quot;</bucket>
            </map>
            <map to='#57606c'>
              <bucket>&quot;DJ Hooda&quot;</bucket>
            </map>
            <map to='#57606c'>
              <bucket>&quot;FY Fazal&quot;</bucket>
            </map>
            <map to='#57606c'>
              <bucket>&quot;HM Amla&quot;</bucket>
            </map>
            <map to='#57606c'>
              <bucket>&quot;JP Faulkner&quot;</bucket>
            </map>
            <map to='#57606c'>
              <bucket>&quot;KL Rahul&quot;</bucket>
            </map>
            <map to='#57606c'>
              <bucket>&quot;M Kaif&quot;</bucket>
            </map>
            <map to='#57606c'>
              <bucket>&quot;MD Mishra&quot;</bucket>
            </map>
            <map to='#57606c'>
              <bucket>&quot;MN van Wyk&quot;</bucket>
            </map>
            <map to='#57606c'>
              <bucket>&quot;NV Ojha&quot;</bucket>
            </map>
            <map to='#57606c'>
              <bucket>&quot;Q de Kock&quot;</bucket>
            </map>
            <map to='#57606c'>
              <bucket>&quot;RG Sharma&quot;</bucket>
            </map>
            <map to='#57606c'>
              <bucket>&quot;S Sohal&quot;</bucket>
            </map>
            <map to='#57606c'>
              <bucket>&quot;SK Raina&quot;</bucket>
            </map>
            <map to='#57606c'>
              <bucket>&quot;SS Iyer&quot;</bucket>
            </map>
            <map to='#57606c'>
              <bucket>&quot;V Sehwag&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;A Kumble&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;BE Hendricks&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;CK Langeveldt&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;DJ Jacobs&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;FH Edwards&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;I Sharma&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;JE Taylor&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mashrafe Mortaza&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mohammad Ashraful&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;NS Naik&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;PR Shah&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;RG More&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;S Aravind&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;UA Birla&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;X Thalaivan Sargunam&quot;</bucket>
            </map>
            <map to='#5fa2ce'>
              <bucket>&quot;AB Agarkar&quot;</bucket>
            </map>
            <map to='#5fa2ce'>
              <bucket>&quot;AM Nayar&quot;</bucket>
            </map>
            <map to='#5fa2ce'>
              <bucket>&quot;BB McCullum&quot;</bucket>
            </map>
            <map to='#5fa2ce'>
              <bucket>&quot;CM Gautam&quot;</bucket>
            </map>
            <map to='#5fa2ce'>
              <bucket>&quot;DJ Hussey&quot;</bucket>
            </map>
            <map to='#5fa2ce'>
              <bucket>&quot;G Gambhir&quot;</bucket>
            </map>
            <map to='#5fa2ce'>
              <bucket>&quot;IK Pathan&quot;</bucket>
            </map>
            <map to='#5fa2ce'>
              <bucket>&quot;JR Hopes&quot;</bucket>
            </map>
            <map to='#5fa2ce'>
              <bucket>&quot;KM Jadhav&quot;</bucket>
            </map>
            <map to='#5fa2ce'>
              <bucket>&quot;M Kartik&quot;</bucket>
            </map>
            <map to='#5fa2ce'>
              <bucket>&quot;MEK Hussey&quot;</bucket>
            </map>
            <map to='#5fa2ce'>
              <bucket>&quot;MP Stoinis&quot;</bucket>
            </map>
            <map to='#5fa2ce'>
              <bucket>&quot;OA Shah&quot;</bucket>
            </map>
            <map to='#5fa2ce'>
              <bucket>&quot;R Ashwin&quot;</bucket>
            </map>
            <map to='#5fa2ce'>
              <bucket>&quot;RJ Harris&quot;</bucket>
            </map>
            <map to='#5fa2ce'>
              <bucket>&quot;S Vidyut&quot;</bucket>
            </map>
            <map to='#5fa2ce'>
              <bucket>&quot;SK Warne&quot;</bucket>
            </map>
            <map to='#5fa2ce'>
              <bucket>&quot;SS Tiwary&quot;</bucket>
            </map>
            <map to='#5fa2ce'>
              <bucket>&quot;VVS Laxman&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;A Zampa&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;AG Paunikar&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;B Akhil&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;C Munro&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;KMDN Kulasekara&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;M Klinger&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;MS Gony&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;P Sahu&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;S Nadeem&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;SB Wagh&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;T Henderson&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;VH Zol&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;YS Chahal&quot;</bucket>
            </map>
            <map to='#7b848f'>
              <bucket>&quot;AB McDonald&quot;</bucket>
            </map>
            <map to='#7b848f'>
              <bucket>&quot;AP Tare&quot;</bucket>
            </map>
            <map to='#7b848f'>
              <bucket>&quot;Bipul Sharma&quot;</bucket>
            </map>
            <map to='#7b848f'>
              <bucket>&quot;DA Miller&quot;</bucket>
            </map>
            <map to='#7b848f'>
              <bucket>&quot;DL Vettori&quot;</bucket>
            </map>
            <map to='#7b848f'>
              <bucket>&quot;GH Vihari&quot;</bucket>
            </map>
            <map to='#7b848f'>
              <bucket>&quot;JA Morkel&quot;</bucket>
            </map>
            <map to='#7b848f'>
              <bucket>&quot;KA Pollard&quot;</bucket>
            </map>
            <map to='#7b848f'>
              <bucket>&quot;KS Williamson&quot;</bucket>
            </map>
            <map to='#7b848f'>
              <bucket>&quot;M Morkel&quot;</bucket>
            </map>
            <map to='#7b848f'>
              <bucket>&quot;MG Johnson&quot;</bucket>
            </map>
            <map to='#7b848f'>
              <bucket>&quot;MS Bisla&quot;</bucket>
            </map>
            <map to='#7b848f'>
              <bucket>&quot;P Kumar&quot;</bucket>
            </map>
            <map to='#7b848f'>
              <bucket>&quot;R Dhawan&quot;</bucket>
            </map>
            <map to='#7b848f'>
              <bucket>&quot;RN ten Doeschate&quot;</bucket>
            </map>
            <map to='#7b848f'>
              <bucket>&quot;SA Yadav&quot;</bucket>
            </map>
            <map to='#7b848f'>
              <bucket>&quot;SM Pollock&quot;</bucket>
            </map>
            <map to='#7b848f'>
              <bucket>&quot;STR Binny&quot;</bucket>
            </map>
            <map to='#7b848f'>
              <bucket>&quot;WP Saha&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;A Singh&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;AD Nath&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;BMAJ Mendis&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;D du Preez&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;DNT Zoysa&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;GD McGrath&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;IR Jaggi&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;JM Kemp&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;M de Lange&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;S Kaul&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;SB Jakati&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;SW Billings&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Yashpal Singh&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;AC Thomas&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;DJ Muthuswami&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;IC Pandey&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;LPC Silva&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mohammad Asif&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;PSP Handscomb&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;SK Trivedi&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Y Gnaneswara Rao&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;AB Barath&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;AN Ghosh&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;BA Bhatt&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;DE Bollinger&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;DT Patil&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Harpreet Singh&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Jaskaran Singh&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;KAJ Roach&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;L Ablish&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;NJ Maddinson&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;R Shukla&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;RS Gavaskar&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;S Sriram&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;VY Mahesh&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;A Chandila&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Anureet Singh&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;CJ Jordan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;ER Dwivedi&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;JD Unadkat&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Karanveer Singh&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;LA Carseldine&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;MA Khote&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;MM Sharma&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;NL McCullum&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;PM Sarvesh Kumar&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;RV Gomez&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;SA Abbott&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Shoaib Akhtar&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;TM Srivastava&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;WD Parnell&quot;</bucket>
            </map>
            <map to='#a3acb9'>
              <bucket>&quot;A Symonds&quot;</bucket>
            </map>
            <map to='#a3acb9'>
              <bucket>&quot;AJ Finch&quot;</bucket>
            </map>
            <map to='#a3acb9'>
              <bucket>&quot;B Kumar&quot;</bucket>
            </map>
            <map to='#a3acb9'>
              <bucket>&quot;CJ Anderson&quot;</bucket>
            </map>
            <map to='#a3acb9'>
              <bucket>&quot;DJ Harris&quot;</bucket>
            </map>
            <map to='#a3acb9'>
              <bucket>&quot;F du Plessis&quot;</bucket>
            </map>
            <map to='#a3acb9'>
              <bucket>&quot;HH Pandya&quot;</bucket>
            </map>
            <map to='#a3acb9'>
              <bucket>&quot;JP Duminy&quot;</bucket>
            </map>
            <map to='#a3acb9'>
              <bucket>&quot;KK Nair&quot;</bucket>
            </map>
            <map to='#a3acb9'>
              <bucket>&quot;LRPL Taylor&quot;</bucket>
            </map>
            <map to='#a3acb9'>
              <bucket>&quot;MC Juneja&quot;</bucket>
            </map>
            <map to='#a3acb9'>
              <bucket>&quot;MN Samuels&quot;</bucket>
            </map>
            <map to='#a3acb9'>
              <bucket>&quot;NLTC Perera&quot;</bucket>
            </map>
            <map to='#a3acb9'>
              <bucket>&quot;PP Chawla&quot;</bucket>
            </map>
            <map to='#a3acb9'>
              <bucket>&quot;RE van der Merwe&quot;</bucket>
            </map>
            <map to='#a3acb9'>
              <bucket>&quot;S Dhawan&quot;</bucket>
            </map>
            <map to='#a3acb9'>
              <bucket>&quot;Shakib Al Hasan&quot;</bucket>
            </map>
            <map to='#a3acb9'>
              <bucket>&quot;SR Watson&quot;</bucket>
            </map>
            <map to='#a3acb9'>
              <bucket>&quot;Z Khan&quot;</bucket>
            </map>
            <map to='#a3cce9'>
              <bucket>&quot;AC Blizzard&quot;</bucket>
            </map>
            <map to='#a3cce9'>
              <bucket>&quot;AR Patel&quot;</bucket>
            </map>
            <map to='#a3cce9'>
              <bucket>&quot;BJ Hodge&quot;</bucket>
            </map>
            <map to='#a3cce9'>
              <bucket>&quot;DA Warner&quot;</bucket>
            </map>
            <map to='#a3cce9'>
              <bucket>&quot;DPMD Jayawardene&quot;</bucket>
            </map>
            <map to='#a3cce9'>
              <bucket>&quot;GJ Bailey&quot;</bucket>
            </map>
            <map to='#a3cce9'>
              <bucket>&quot;JC Buttler&quot;</bucket>
            </map>
            <map to='#a3cce9'>
              <bucket>&quot;Kamran Akmal&quot;</bucket>
            </map>
            <map to='#a3cce9'>
              <bucket>&quot;KV Sharma&quot;</bucket>
            </map>
            <map to='#a3cce9'>
              <bucket>&quot;M Vijay&quot;</bucket>
            </map>
            <map to='#a3cce9'>
              <bucket>&quot;Misbah-ul-Haq&quot;</bucket>
            </map>
            <map to='#a3cce9'>
              <bucket>&quot;MS Dhoni&quot;</bucket>
            </map>
            <map to='#a3cce9'>
              <bucket>&quot;P Negi&quot;</bucket>
            </map>
            <map to='#a3cce9'>
              <bucket>&quot;R Dravid&quot;</bucket>
            </map>
            <map to='#a3cce9'>
              <bucket>&quot;RR Pant&quot;</bucket>
            </map>
            <map to='#a3cce9'>
              <bucket>&quot;Sachin Baby&quot;</bucket>
            </map>
            <map to='#a3cce9'>
              <bucket>&quot;SN Khan&quot;</bucket>
            </map>
            <map to='#a3cce9'>
              <bucket>&quot;SV Samson&quot;</bucket>
            </map>
            <map to='#a3cce9'>
              <bucket>&quot;Y Nagar&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;AA Noffke&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;DS Lehmann&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;J Yadav&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;K Upadhyay&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;M Ntini&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;MJ McClenaghan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Parvez Rasool&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;RR Sarwan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;TD Paine&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;VS Yeligati&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;A Mithun&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;AS Rajpoot&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;BJ Haddin&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;DJ Thornely&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mohammad Hafeez&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;PV Tambe&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;S Chanderpaul&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sandeep Sharma&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sunny Gupta&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Umar Gul&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;AA Bilakhia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;C Nanda&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;DR Martyn&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;GR Napier&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;J Suchith&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;KP Appanna&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;MJ Clarke&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;MS Wade&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;RR Powar&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;S Narwal&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;SN Thakur&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;T Kohli&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;VR Aaron&quot;</bucket>
            </map>
            <map to='#c85200'>
              <bucket>&quot;AB de Villiers&quot;</bucket>
            </map>
            <map to='#c85200'>
              <bucket>&quot;AM Rahane&quot;</bucket>
            </map>
            <map to='#c85200'>
              <bucket>&quot;BB Samantray&quot;</bucket>
            </map>
            <map to='#c85200'>
              <bucket>&quot;D Wiese&quot;</bucket>
            </map>
            <map to='#c85200'>
              <bucket>&quot;DJG Sammy&quot;</bucket>
            </map>
            <map to='#c85200'>
              <bucket>&quot;GC Smith&quot;</bucket>
            </map>
            <map to='#c85200'>
              <bucket>&quot;J Botha&quot;</bucket>
            </map>
            <map to='#c85200'>
              <bucket>&quot;K Goel&quot;</bucket>
            </map>
            <map to='#c85200'>
              <bucket>&quot;KP Pietersen&quot;</bucket>
            </map>
            <map to='#c85200'>
              <bucket>&quot;M Manhas&quot;</bucket>
            </map>
            <map to='#c85200'>
              <bucket>&quot;MF Maharoof&quot;</bucket>
            </map>
            <map to='#c85200'>
              <bucket>&quot;MR Marsh&quot;</bucket>
            </map>
            <map to='#c85200'>
              <bucket>&quot;P Dogra&quot;</bucket>
            </map>
            <map to='#c85200'>
              <bucket>&quot;R Bhatia&quot;</bucket>
            </map>
            <map to='#c85200'>
              <bucket>&quot;RJ Quiney&quot;</bucket>
            </map>
            <map to='#c85200'>
              <bucket>&quot;SA Asnodkar&quot;</bucket>
            </map>
            <map to='#c85200'>
              <bucket>&quot;SM Katich&quot;</bucket>
            </map>
            <map to='#c85200'>
              <bucket>&quot;ST Jayasuriya&quot;</bucket>
            </map>
            <map to='#c85200'>
              <bucket>&quot;W Jaffer&quot;</bucket>
            </map>
            <map to='#c8d0d9'>
              <bucket>&quot;AC Voges&quot;</bucket>
            </map>
            <map to='#c8d0d9'>
              <bucket>&quot;AT Rayudu&quot;</bucket>
            </map>
            <map to='#c8d0d9'>
              <bucket>&quot;CA Pujara&quot;</bucket>
            </map>
            <map to='#c8d0d9'>
              <bucket>&quot;DB Ravi Teja&quot;</bucket>
            </map>
            <map to='#c8d0d9'>
              <bucket>&quot;DT Christian&quot;</bucket>
            </map>
            <map to='#c8d0d9'>
              <bucket>&quot;Gurkeerat Singh&quot;</bucket>
            </map>
            <map to='#c8d0d9'>
              <bucket>&quot;JDP Oram&quot;</bucket>
            </map>
            <map to='#c8d0d9'>
              <bucket>&quot;KD Karthik&quot;</bucket>
            </map>
            <map to='#c8d0d9'>
              <bucket>&quot;LJ Wright&quot;</bucket>
            </map>
            <map to='#c8d0d9'>
              <bucket>&quot;MA Agarwal&quot;</bucket>
            </map>
            <map to='#c8d0d9'>
              <bucket>&quot;MK Pandey&quot;</bucket>
            </map>
            <map to='#c8d0d9'>
              <bucket>&quot;N Rana&quot;</bucket>
            </map>
            <map to='#c8d0d9'>
              <bucket>&quot;PA Reddy&quot;</bucket>
            </map>
            <map to='#c8d0d9'>
              <bucket>&quot;R Sathish&quot;</bucket>
            </map>
            <map to='#c8d0d9'>
              <bucket>&quot;RV Uthappa&quot;</bucket>
            </map>
            <map to='#c8d0d9'>
              <bucket>&quot;SB Styris&quot;</bucket>
            </map>
            <map to='#c8d0d9'>
              <bucket>&quot;SP Goswami&quot;</bucket>
            </map>
            <map to='#c8d0d9'>
              <bucket>&quot;TM Dilshan&quot;</bucket>
            </map>
            <map to='#c8d0d9'>
              <bucket>&quot;YK Pathan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;AA Chavan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;CA Ingram&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;J Syed Mohammad&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;MJ Guptill&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;R Ninan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;RR Raje&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;S Rana&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;SD Chitnis&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sohail Tanvir&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;T Taibu&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;VRV Singh&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;AN Ahmed&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;B Sumanth&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Harmeet Singh&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;KW Richardson&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;M Rawat&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;ND Doshi&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;R Sharma&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;S Sreesanth&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Shahid Afridi&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;SP Narine&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;TG Southee&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Anirudh Singh&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;BAW Mendis&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;L Balaji&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;NJ Rimmington&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;PJ Cummins&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;R Tewatia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;RS Sodhi&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;S Tyagi&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Shivam Sharma&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;AUK Pathan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;BR Dunk&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;D Kalyankrishna&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;DP Nannes&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ishan Kishan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;JO Holder&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;R Bishnoi&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;RP Singh&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;S Kaushik&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;SB Joshi&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;SW Tait&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;V Pratap Singh&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;A Mukund&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;AD Mascarenhas&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;CR Brathwaite&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;GB Hogg&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Imran Tahir&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;JJ Bumrah&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;KJ Abbott&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mohammed Shami&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;P Awana&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;RJ Peterson&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sandeep Sharma (1)&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;SL Malinga&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sunny Singh&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;A Chopra&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Abdur Razzak&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;AP Dole&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;BB Sran&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;CJ McKay&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;F Behardien&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;HV Patel&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;KB Arun Karthik&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;MA Starc&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;RE Levi&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Shoaib Malik&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;SS Shaikh&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;TR Birt&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;B Laughlin&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;CA Lynn&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;DAJ Bracewell&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;DS Kulkarni&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;H Das&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;J Theron&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;M Muralitharan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Pankaj Singh&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;R Rampaul&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;RR Rossouw&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;S Randiv&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;SE Bond&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;T Thushara&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;VS Malik&quot;</bucket>
            </map>
            <map to='#fc7d0b'>
              <bucket>&quot;A Mishra&quot;</bucket>
            </map>
            <map to='#fc7d0b'>
              <bucket>&quot;AD Russell&quot;</bucket>
            </map>
            <map to='#fc7d0b'>
              <bucket>&quot;B Chipli&quot;</bucket>
            </map>
            <map to='#fc7d0b'>
              <bucket>&quot;CH Morris&quot;</bucket>
            </map>
            <map to='#fc7d0b'>
              <bucket>&quot;DJ Bravo&quot;</bucket>
            </map>
            <map to='#fc7d0b'>
              <bucket>&quot;EJG Morgan&quot;</bucket>
            </map>
            <map to='#fc7d0b'>
              <bucket>&quot;HH Gibbs&quot;</bucket>
            </map>
            <map to='#fc7d0b'>
              <bucket>&quot;JH Kallis&quot;</bucket>
            </map>
            <map to='#fc7d0b'>
              <bucket>&quot;KK Cooper&quot;</bucket>
            </map>
            <map to='#fc7d0b'>
              <bucket>&quot;LR Shukla&quot;</bucket>
            </map>
            <map to='#fc7d0b'>
              <bucket>&quot;MC Henriques&quot;</bucket>
            </map>
            <map to='#fc7d0b'>
              <bucket>&quot;ML Hayden&quot;</bucket>
            </map>
            <map to='#fc7d0b'>
              <bucket>&quot;NK Patel&quot;</bucket>
            </map>
            <map to='#fc7d0b'>
              <bucket>&quot;PD Collingwood&quot;</bucket>
            </map>
            <map to='#fc7d0b'>
              <bucket>&quot;RA Jadeja&quot;</bucket>
            </map>
            <map to='#fc7d0b'>
              <bucket>&quot;S Badrinath&quot;</bucket>
            </map>
            <map to='#fc7d0b'>
              <bucket>&quot;SE Marsh&quot;</bucket>
            </map>
            <map to='#fc7d0b'>
              <bucket>&quot;SR Tendulkar&quot;</bucket>
            </map>
            <map to='#fc7d0b'>
              <bucket>&quot;UT Khawaja&quot;</bucket>
            </map>
            <map to='#fc7d0b'>
              <bucket>&quot;YV Takawale&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;A Uniyal&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;AG Murtaza&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;C Madan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;D Salunkhe&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;DP Vijaykumar&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;J Arunkumar&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Joginder Sharma&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;P Parameswaran&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;RR Bhatkal&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;S Ladda&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;SMSM Senanayake&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Swapnil Singh&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Younis Khan&quot;</bucket>
            </map>
            <map to='#ffbc79'>
              <bucket>&quot;AC Gilchrist&quot;</bucket>
            </map>
            <map to='#ffbc79'>
              <bucket>&quot;AS Raut&quot;</bucket>
            </map>
            <map to='#ffbc79'>
              <bucket>&quot;BJ Rohrer&quot;</bucket>
            </map>
            <map to='#ffbc79'>
              <bucket>&quot;DB Das&quot;</bucket>
            </map>
            <map to='#ffbc79'>
              <bucket>&quot;DR Smith&quot;</bucket>
            </map>
            <map to='#ffbc79'>
              <bucket>&quot;GJ Maxwell&quot;</bucket>
            </map>
            <map to='#ffbc79'>
              <bucket>&quot;JD Ryder&quot;</bucket>
            </map>
            <map to='#ffbc79'>
              <bucket>&quot;KC Sangakkara&quot;</bucket>
            </map>
            <map to='#ffbc79'>
              <bucket>&quot;LA Pomersbach&quot;</bucket>
            </map>
            <map to='#ffbc79'>
              <bucket>&quot;M Vohra&quot;</bucket>
            </map>
            <map to='#ffbc79'>
              <bucket>&quot;MJ Lumb&quot;</bucket>
            </map>
            <map to='#ffbc79'>
              <bucket>&quot;MV Boucher&quot;</bucket>
            </map>
            <map to='#ffbc79'>
              <bucket>&quot;PA Patel&quot;</bucket>
            </map>
            <map to='#ffbc79'>
              <bucket>&quot;R McLaren&quot;</bucket>
            </map>
            <map to='#ffbc79'>
              <bucket>&quot;RS Bopara&quot;</bucket>
            </map>
            <map to='#ffbc79'>
              <bucket>&quot;Salman Butt&quot;</bucket>
            </map>
            <map to='#ffbc79'>
              <bucket>&quot;SP Fleming&quot;</bucket>
            </map>
            <map to='#ffbc79'>
              <bucket>&quot;TL Suman&quot;</bucket>
            </map>
            <map to='#ffbc79'>
              <bucket>&quot;Y Venugopal Rao&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;A Flintoff&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;AP Majumdar&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;BCJ Cutting&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;CK Kapugedera&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;I Malhotra&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;JDS Neesham&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;KC Cariappa&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;NM Coulter-Nile&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;PP Ojha&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;SJ Srivastava&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;U Kaul&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;WPUJC Vaas&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:bowling_team:nk]' palette='tableau10_10_0' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Chennai Super Kings&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Rising Pune Supergiants&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kings XI Punjab&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Gujarat Lions&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;Pune Warriors&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kolkata Knight Riders&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Rajasthan Royals&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Delhi Daredevils&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sunrisers Hyderabad&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Kochi Tuskers Kerala&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Deccan Chargers&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Royal Challengers Bangalore&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Mumbai Indians&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:batting_team:nk]' palette='tableau10_10_0' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Chennai Super Kings&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Rising Pune Supergiants&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kings XI Punjab&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Gujarat Lions&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;Pune Warriors&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kolkata Knight Riders&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Rajasthan Royals&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Delhi Daredevils&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sunrisers Hyderabad&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Kochi Tuskers Kerala&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Deccan Chargers&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Royal Challengers Bangalore&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Mumbai Indians&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#24693d'>
              <bucket>&quot;[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[cnt:Calculation_825847582521765908:qk]&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[sum:dl_applied:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[sum:bye_runs:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[sum:win_by_runs:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[sum:wide_runs:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[sum:penalty_runs:qk]&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[sum:is_super_over:qk]&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[sum:extra_runs:qk]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[usr:Calculation_825847582365990916:qk]&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[sum:total_runs:qk]&quot;</bucket>
            </map>
            <map to='#9f3632'>
              <bucket>&quot;[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[cnt:Calculation_825847582521495571:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[sum:ball:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[sum:win_by_wickets:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[attr:season:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[cnt:season:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[none:season:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[sum:season:qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[sum:Calculation_825847582367592453:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[sum:Number of Records:qk]&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[sum:over:qk]&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[sum:Calculation_825847582521765908:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[sum:noball_runs:qk]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[sum:Calculation_825847582502653960:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[cnt:batsman:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[sum:legbye_runs:qk]&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[sum:Calculation_825847582518718482:qk]&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[sum:inning:qk]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[attr:batsman_runs:qk]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[ctd:batsman_runs:qk]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[sum:batsman_runs:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <default-sorts>
        <sort class='manual' column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </sort>
      </default-sorts>
      <field-sort-info field-sort-order-type='alphabetical-order' />
    </datasource>
    <datasource caption='Statistics' inline='true' name='federated.1yjjyhj1kgk5hy1btlmtr1yfmxdl' version='10.2'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Statistics' name='textscan.1xu7pq808g1io916zzpwd1euobzw'>
            <connection class='textscan' directory='A:/Semester 2/DIC/Term Project/TermProjectData' filename='Statistics.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.1xu7pq808g1io916zzpwd1euobzw' name='Statistics.csv' table='[Statistics#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='Player' ordinal='0' />
            <column datatype='real' name='Runs' ordinal='1' />
            <column datatype='integer' name='Wickets' ordinal='2' />
          </columns>
        </relation>
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Player</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Player]</local-name>
            <parent-name>[Statistics.csv]</parent-name>
            <remote-alias>Player</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Runs</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Runs]</local-name>
            <parent-name>[Statistics.csv]</parent-name>
            <remote-alias>Runs</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Wickets</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Wickets]</local-name>
            <parent-name>[Statistics.csv]</parent-name>
            <remote-alias>Wickets</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Statistics.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='C:/Users/Saurabh/Documents/My Tableau Repository/Datasources/Statistics.tde' schema='Extract' tablename='Extract' update-time='05/04/2017 04:41:38 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh increment-key='' incremental-updates='false'>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='459' timestamp-start='2017-05-04 16:41:38.396' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>0</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>459.0</statistic>
                <statistic aggregation='Avg' datatype='real'>1.0</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.0</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.0</statistic>
                <statistic aggregation='Var' datatype='real'>0.0</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0</statistic>
                <statistic aggregation='Count' datatype='integer'>459</statistic>
                <statistic aggregation='Median' datatype='integer'>1</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>459.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Player</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Player]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Player</remote-alias>
              <ordinal>1</ordinal>
              <family>Statistics.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>459</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;A Ashish Reddy&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Z Khan&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>459</statistic>
                <statistic aggregation='Median' datatype='string'>&quot;M Rawat&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Runs</remote-name>
              <remote-type>4</remote-type>
              <local-name>[Runs]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Runs</remote-alias>
              <ordinal>2</ordinal>
              <family>Statistics.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>248</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>136598.0</statistic>
                <statistic aggregation='Avg' datatype='real'>313.29816513761466</statistic>
                <statistic aggregation='Min' datatype='real'>1.0</statistic>
                <statistic aggregation='Max' datatype='real'>3237.0</statistic>
                <statistic aggregation='Stdev' datatype='real'>580.47139234415238</statistic>
                <statistic aggregation='StdevP' datatype='real'>579.80533200735249</statistic>
                <statistic aggregation='Var' datatype='real'>336947.03732995887</statistic>
                <statistic aggregation='VarP' datatype='real'>336174.22302415624</statistic>
                <statistic aggregation='Count' datatype='integer'>436</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>189367864.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Wickets</remote-name>
              <remote-type>2</remote-type>
              <local-name>[Wickets]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Wickets</remote-alias>
              <ordinal>3</ordinal>
              <family>Statistics.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>78</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>6727.0</statistic>
                <statistic aggregation='Avg' datatype='real'>23.116838487972508</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>159</statistic>
                <statistic aggregation='Stdev' datatype='real'>29.962852143797413</statistic>
                <statistic aggregation='StdevP' datatype='real'>29.911325274811269</statistic>
                <statistic aggregation='Var' datatype='real'>897.77250859106528</statistic>
                <statistic aggregation='VarP' datatype='real'>894.68737969556332</statistic>
                <statistic aggregation='Count' datatype='integer'>291</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>415861.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.462644' measure-ordering='alphabetic' measure-percentage='0.537356' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Player Analysis Dashboard' type='sheet' worksheet='Top Run getter' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Player Analysis Dashboard' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action2]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Player Analysis Dashboard' type='sheet' worksheet='Top Wicket taker' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Player Analysis Dashboard' />
      </command>
    </action>
    <action caption='Filter 3 (generated)' name='[Action3]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Prediction Dashboard' type='sheet' worksheet='Win Prediction' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Prediction Dashboard' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Batsman Prediction'>
      <table>
        <view>
          <datasources>
            <datasource caption='matches+' name='federated.11w1e4e0p7t9mc15hk9bj1vrgi6c' />
          </datasources>
          <datasource-dependencies datasource='federated.11w1e4e0p7t9mc15hk9bj1vrgi6c'>
            <column caption='Batsman' datatype='string' name='[batsman]' role='dimension' type='nominal' />
            <column caption='Batsman Runs' datatype='integer' name='[batsman_runs]' role='measure' type='quantitative' />
            <column caption='Bowler' datatype='string' name='[bowler]' role='dimension' type='nominal' />
            <column-instance column='[batsman_runs]' derivation='Sum' forecast-column-base='[sum:batsman_runs:qk]' forecast-column-type='forecast-value' name='[fVal:sum:batsman_runs:qk]' pivot='key' type='quantitative' />
            <column-instance column='[batsman]' derivation='None' name='[none:batsman:nk]' pivot='key' type='nominal' />
            <column-instance column='[bowler]' derivation='None' name='[none:bowler:nk]' pivot='key' type='nominal' />
            <column-instance column='[season]' derivation='None' name='[none:season:qk]' pivot='key' type='quantitative' />
            <column caption='Season' datatype='integer' name='[season]' role='measure' type='quantitative' />
            <column-instance column='[batsman_runs]' derivation='Sum' name='[sum:batsman_runs:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[none:batsman:nk]'>
            <groupfilter function='member' level='[none:batsman:nk]' member='&quot;V Kohli&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[none:bowler:nk]'>
            <groupfilter function='level-members' level='[none:bowler:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[none:batsman:nk]</column>
            <column>[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[none:bowler:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[fVal:sum:batsman_runs:qk]' scope='rows' value='No of Runs' />
            <format attr='subtitle' class='0' field='[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[fVal:sum:batsman_runs:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[fVal:sum:batsman_runs:qk]' scope='rows' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[none:batsman:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='all' />
                <format attr='size' value='2' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[fVal:sum:batsman_runs:qk]</rows>
        <cols>[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[none:season:qk]</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='10.000000' enabled='true' fill-type='fill-zero' ignore-last='0' model-type='auto-season' range-type='auto' show-prediction-bands='true' />
      </table>
    </worksheet>
    <worksheet name='Bowler Prediction'>
      <table>
        <view>
          <datasources>
            <datasource caption='matches+' name='federated.11w1e4e0p7t9mc15hk9bj1vrgi6c' />
          </datasources>
          <datasource-dependencies datasource='federated.11w1e4e0p7t9mc15hk9bj1vrgi6c'>
            <column caption='Batsman' datatype='string' name='[batsman]' role='dimension' type='nominal' />
            <column caption='Bowler' datatype='string' name='[bowler]' role='dimension' type='nominal' />
            <column-instance column='[player_dismissed]' derivation='Count' name='[cnt:player_dismissed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[player_dismissed]' derivation='Count' forecast-column-base='[cnt:player_dismissed:qk]' forecast-column-type='forecast-value' name='[fVal:cnt:player_dismissed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[batsman]' derivation='None' name='[none:batsman:nk]' pivot='key' type='nominal' />
            <column-instance column='[bowler]' derivation='None' name='[none:bowler:nk]' pivot='key' type='nominal' />
            <column-instance column='[season]' derivation='None' name='[none:season:qk]' pivot='key' type='quantitative' />
            <column caption='Player Dismissed' datatype='string' name='[player_dismissed]' role='dimension' type='nominal' />
            <column caption='Season' datatype='integer' name='[season]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[none:batsman:nk]'>
            <groupfilter function='level-members' level='[none:batsman:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[none:bowler:nk]'>
            <groupfilter function='member' level='[none:bowler:nk]' member='&quot;SL Malinga&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[none:bowler:nk]</column>
            <column>[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[none:batsman:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[fVal:cnt:player_dismissed:qk]' scope='rows' value='No of Wickets' />
            <format attr='subtitle' class='0' field='[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[fVal:cnt:player_dismissed:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[fVal:cnt:player_dismissed:qk]' scope='rows' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[none:bowler:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-markers-mode' value='all' />
                <format attr='size' value='2' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[fVal:cnt:player_dismissed:qk]</rows>
        <cols>[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[none:season:qk]</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='10.000000' enabled='true' fill-type='fill-zero' ignore-last='0' model-type='auto-season' range-type='auto' show-prediction-bands='true' />
      </table>
    </worksheet>
    <worksheet name='Classification of Batsman'>
      <table>
        <view>
          <datasources>
            <datasource caption='matches+' name='federated.11w1e4e0p7t9mc15hk9bj1vrgi6c' />
          </datasources>
          <datasource-dependencies datasource='federated.11w1e4e0p7t9mc15hk9bj1vrgi6c'>
            <column caption='Batsman Average' datatype='real' name='[Calculation_553379806911827969]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([batsman_runs])/COUNT([player_dismissed])' />
            </column>
            <column caption='Batsman Strikerate' datatype='real' name='[Calculation_553379806912602114]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([batsman_runs])/COUNT([batsman]) * 100' />
            </column>
            <column caption='Batsman' datatype='string' name='[batsman]' role='dimension' type='nominal' />
            <column caption='Batsman Runs' datatype='integer' name='[batsman_runs]' role='measure' type='quantitative' />
            <column-instance column='[batsman]' derivation='None' name='[none:batsman:nk]' pivot='key' type='nominal' />
            <column caption='Player Dismissed' datatype='string' name='[player_dismissed]' role='dimension' type='nominal' />
            <column-instance column='[batsman_runs]' derivation='Sum' name='[sum:batsman_runs:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_553379806911827969]' derivation='User' name='[usr:Calculation_553379806911827969:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_553379806912602114]' derivation='User' name='[usr:Calculation_553379806912602114:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[sum:batsman_runs:qk]' included-values='in-range'>
            <min>200</min>
          </filter>
          <filter class='quantitative' column='[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[usr:Calculation_553379806912602114:qk]' included-values='in-range'>
            <min>80.0</min>
            <max>207.50000000000003</max>
          </filter>
          <slices>
            <column>[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[sum:batsman_runs:qk]</column>
            <column>[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[usr:Calculation_553379806912602114:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[usr:Calculation_553379806912602114:qk]' field-type='quantitative' max='189.64019685861564' min='71.252111952770022' range-type='fixed' scope='rows' type='space' />
            <format attr='subtitle' class='0' field='[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[usr:Calculation_553379806912602114:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[usr:Calculation_553379806912602114:qk]' scope='rows' value='true' />
            <encoding attr='space' class='0' field='[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[usr:Calculation_553379806911827969:qk]' field-type='quantitative' max='50.249537750385201' min='-3.4484976887519259' range-type='fixed' scope='cols' type='space' />
          </style-rule>
          <style-rule element='caption'>
            <format attr='background-color' value='#00000000' />
            <format attr='border-style' value='solid' />
            <format attr='border-color' value='#000000' />
            <format attr='border-width' value='1' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
            <format attr='fill-above' id='refline2' value='#00000000' />
            <format attr='fill-below' id='refline2' value='#00000000' />
            <format attr='fill-above' id='refline3' value='#00000000' />
            <format attr='fill-below' id='refline3' value='#00000000' />
          </style-rule>
          <style-rule element='title'>
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='1' />
            <format attr='border-color' value='#000000' />
          </style-rule>
          <style-rule element='annotation'>
            <format attr='border-style' id='annotation_5' value='solid' />
            <format attr='border-color' id='annotation_5' value='#000000' />
            <format attr='rounding' id='annotation_5' value='medium' />
            <format attr='border-style' id='annotation_6' value='solid' />
            <format attr='border-color' id='annotation_6' value='#000000' />
            <format attr='rounding' id='annotation_6' value='medium' />
            <format attr='border-style' id='annotation_7' value='solid' />
            <format attr='border-color' id='annotation_7' value='#000000' />
            <format attr='rounding' id='annotation_7' value='medium' />
            <format attr='border-style' id='annotation_8' value='solid' />
            <format attr='border-color' id='annotation_8' value='#000000' />
            <format attr='rounding' id='annotation_8' value='medium' />
          </style-rule>
        </style>
        <panes>
          <pane id='4'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <tooltip column='[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[sum:batsman_runs:qk]' />
              <text column='[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[none:batsman:nk]' />
              <lod column='[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[none:batsman:nk]' />
            </encodings>
            <reference-line axis-column='[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[usr:Calculation_553379806911827969:qk]' enable-instant-analytics='true' formula='average' id='refline2' label-type='automatic' probability='95' scope='per-pane' value-column='[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[usr:Calculation_553379806911827969:qk]' z-order='1' />
            <reference-line axis-column='[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[usr:Calculation_553379806912602114:qk]' enable-instant-analytics='true' formula='constant' id='refline3' label-type='automatic' scope='per-pane' value='130.0' value-column='[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[usr:Calculation_553379806912602114:qk]' z-order='2' />
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Batsman:&#9;</run>
                <run bold='true'>&lt;[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[none:batsman:nk]&gt;</run>
                <run fontcolor='#787878'>&#10;Runs:&#9;</run>
                <run bold='true'>&lt;[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[sum:batsman_runs:qk]&gt;</run>
                <run fontcolor='#787878'>&#10;Average:&#9;</run>
                <run bold='true'>&lt;[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[usr:Calculation_553379806911827969:qk]&gt;</run>
                <run fontcolor='#787878'>&#10;Strikerate:&#9;</run>
                <run bold='true'>&lt;[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[usr:Calculation_553379806912602114:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='size' value='0.71364641189575195' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#000000' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='654' />
                <format attr='maxwidth' value='654' />
                <format attr='minheight' value='406' />
                <format attr='maxheight' value='406' />
                <format attr='aspect' value='0' />
                <format attr='minwidth' value='654' />
                <format attr='maxwidth' value='654' />
                <format attr='minheight' value='406' />
                <format attr='maxheight' value='406' />
                <format attr='aspect' value='0' />
                <format attr='minwidth' value='654' />
                <format attr='maxwidth' value='654' />
                <format attr='minheight' value='406' />
                <format attr='maxheight' value='406' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[usr:Calculation_553379806912602114:qk]</rows>
        <cols>[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[usr:Calculation_553379806911827969:qk]</cols>
        <annotations>
          <annotation class='area' id='5' text-pinx='0.5' text-piny='0.5' text-width-delta='-18'>
            <formatted-text>
              <run>High Strike Rate&#10;Low Average</run>
            </formatted-text>
            <top-left>
              <visual-coordinate class='axis'>
                <x-coord axis-value='-3.2021764252696454'>
                  <node-reference>
                    <axis>[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[usr:Calculation_553379806911827969:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='177.68474986073466'>
                  <node-reference>
                    <axis>[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[usr:Calculation_553379806912602114:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </top-left>
            <bottom-right>
              <visual-coordinate class='axis'>
                <x-coord axis-value='6.5685670261941436'>
                  <node-reference>
                    <axis>[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[usr:Calculation_553379806911827969:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='162.52174391220274'>
                  <node-reference>
                    <axis>[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[usr:Calculation_553379806912602114:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </bottom-right>
            <text x='0.5' y='0.5' />
          </annotation>
          <annotation class='area' id='6' text-pinx='0.5' text-piny='0.5' text-width-delta='-18'>
            <formatted-text>
              <run>High Strike Rate&#10;High Average</run>
            </formatted-text>
            <top-left>
              <visual-coordinate class='axis'>
                <x-coord axis-value='40.314580123266559'>
                  <node-reference>
                    <axis>[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[usr:Calculation_553379806911827969:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='175.93517225128869'>
                  <node-reference>
                    <axis>[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[usr:Calculation_553379806912602114:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </top-left>
            <bottom-right>
              <visual-coordinate class='axis'>
                <x-coord axis-value='50.167430662557777'>
                  <node-reference>
                    <axis>[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[usr:Calculation_553379806911827969:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='160.77216630275672'>
                  <node-reference>
                    <axis>[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[usr:Calculation_553379806912602114:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </bottom-right>
            <text x='0.5' y='0.5' />
          </annotation>
          <annotation class='area' id='7' text-pinx='0.5' text-piny='0.5' text-width-delta='-18'>
            <formatted-text>
              <run>Low Strike Rate&#10;High Average</run>
            </formatted-text>
            <top-left>
              <visual-coordinate class='axis'>
                <x-coord axis-value='40.314580123266559'>
                  <node-reference>
                    <axis>[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[usr:Calculation_553379806911827969:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='95.45460221677294'>
                  <node-reference>
                    <axis>[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[usr:Calculation_553379806912602114:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </top-left>
            <bottom-right>
              <visual-coordinate class='axis'>
                <x-coord axis-value='50.167430662557777'>
                  <node-reference>
                    <axis>[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[usr:Calculation_553379806911827969:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='80.291596268240994'>
                  <node-reference>
                    <axis>[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[usr:Calculation_553379806912602114:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </bottom-right>
            <text x='0.5' y='0.5' />
          </annotation>
          <annotation class='area' id='8' text-pinx='0.5' text-piny='0.5' text-width-delta='-18'>
            <formatted-text>
              <run>Low Strike Rate&#10;Low Average</run>
            </formatted-text>
            <top-left>
              <visual-coordinate class='axis'>
                <x-coord axis-value='-2.5453197226502313'>
                  <node-reference>
                    <axis>[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[usr:Calculation_553379806911827969:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='93.12183207084496'>
                  <node-reference>
                    <axis>[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[usr:Calculation_553379806912602114:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </top-left>
            <bottom-right>
              <visual-coordinate class='axis'>
                <x-coord axis-value='6.8148882896764249'>
                  <node-reference>
                    <axis>[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[usr:Calculation_553379806911827969:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='79.416807463517998'>
                  <node-reference>
                    <axis>[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[usr:Calculation_553379806912602114:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </bottom-right>
            <text x='0.5' y='0.5' />
          </annotation>
        </annotations>
      </table>
    </worksheet>
    <worksheet name='Classification of Bowlers'>
      <table>
        <view>
          <datasources>
            <datasource caption='matches+' name='federated.11w1e4e0p7t9mc15hk9bj1vrgi6c' />
          </datasources>
          <datasource-dependencies datasource='federated.11w1e4e0p7t9mc15hk9bj1vrgi6c'>
            <column caption='Bowler Economy rate' datatype='real' name='[Calculation_553379806919364613]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([total_runs])/COUNT([bowler]) *6' />
            </column>
            <column caption='Batsman' datatype='string' name='[batsman]' role='dimension' type='nominal' />
            <column caption='Bowler' datatype='string' name='[bowler]' role='dimension' type='nominal' />
            <column-instance column='[player_dismissed]' derivation='Count' name='[cnt:player_dismissed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[bowler]' derivation='None' name='[none:bowler:nk]' pivot='key' type='nominal' />
            <column caption='Player Dismissed' datatype='string' name='[player_dismissed]' role='dimension' type='nominal' />
            <column-instance column='[total_runs]' derivation='Sum' name='[sum:total_runs:qk]' pivot='key' type='quantitative' />
            <column caption='Total Runs' datatype='integer' name='[total_runs]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_553379806919364613]' derivation='User' name='[usr:Calculation_553379806919364613:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[Action (Batsman)]'>
            <groupfilter function='level-members' level='[batsman]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[cnt:player_dismissed:qk]' included-values='in-range'>
            <min>10</min>
            <max>159</max>
          </filter>
          <filter class='quantitative' column='[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[sum:total_runs:qk]' included-values='in-range'>
            <min>100</min>
            <max>3188</max>
          </filter>
          <filter class='quantitative' column='[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[usr:Calculation_553379806919364613:qk]' included-values='in-range'>
            <min>6.0</min>
            <max>23.0</max>
          </filter>
          <slices>
            <column>[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[cnt:player_dismissed:qk]</column>
            <column>[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[sum:total_runs:qk]</column>
            <column>[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[usr:Calculation_553379806919364613:qk]</column>
            <column>[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[Action (Batsman)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[usr:Calculation_553379806919364613:qk]' field-type='quantitative' max='10.879807692307693' min='4.5192307692307683' range-type='fixed' scope='rows' type='space' />
            <format attr='subtitle' class='0' field='[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[usr:Calculation_553379806919364613:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[usr:Calculation_553379806919364613:qk]' scope='rows' value='true' />
            <format attr='height' field='[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[cnt:player_dismissed:qk]' value='33' />
            <format attr='title' class='0' field='[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[cnt:player_dismissed:qk]' scope='cols' value='Wickets' />
            <format attr='subtitle' class='0' field='[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[cnt:player_dismissed:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[cnt:player_dismissed:qk]' scope='cols' value='true' />
            <encoding attr='space' class='0' field='[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[cnt:player_dismissed:qk]' field-type='quantitative' max='213' min='-26' range-type='fixed' scope='cols' type='space' />
          </style-rule>
          <style-rule element='caption'>
            <format attr='border-style' value='solid' />
            <format attr='border-color' value='#000000' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
            <format attr='fill-above' id='refline2' value='#00000000' />
            <format attr='fill-below' id='refline2' value='#00000000' />
            <format attr='fill-above' id='refline3' value='#00000000' />
            <format attr='fill-below' id='refline3' value='#00000000' />
          </style-rule>
          <style-rule element='title'>
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='1' />
            <format attr='border-color' value='#000000' />
          </style-rule>
          <style-rule element='annotation'>
            <format attr='border-style' id='annotation_1' value='solid' />
            <format attr='border-color' id='annotation_1' value='#000000' />
            <format attr='rounding' id='annotation_1' value='medium' />
            <format attr='border-style' id='annotation_2' value='solid' />
            <format attr='border-color' id='annotation_2' value='#000000' />
            <format attr='rounding' id='annotation_2' value='medium' />
            <format attr='border-style' id='annotation_3' value='solid' />
            <format attr='border-color' id='annotation_3' value='#000000' />
            <format attr='rounding' id='annotation_3' value='medium' />
            <format attr='border-style' id='annotation_4' value='solid' />
            <format attr='border-color' id='annotation_4' value='#000000' />
            <format attr='rounding' id='annotation_4' value='medium' />
          </style-rule>
        </style>
        <panes>
          <pane id='6'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[none:bowler:nk]' />
              <tooltip column='[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[cnt:player_dismissed:qk]' />
              <lod column='[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[none:bowler:nk]' />
            </encodings>
            <reference-line axis-column='[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[usr:Calculation_553379806919364613:qk]' enable-instant-analytics='true' formula='constant' id='refline2' label-type='automatic' scope='per-pane' value='7.5' value-column='[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[usr:Calculation_553379806919364613:qk]' z-order='1' />
            <reference-line axis-column='[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[cnt:player_dismissed:qk]' enable-instant-analytics='true' formula='constant' id='refline3' label-type='automatic' scope='per-pane' value='100' value-column='[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[cnt:player_dismissed:qk]' z-order='2' />
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Bowler:&#9;</run>
                <run bold='true'>&lt;[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[none:bowler:nk]&gt;</run>
                <run fontcolor='#787878'>&#10;Number of Wickets:&#9;</run>
                <run bold='true'>&lt;[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[cnt:player_dismissed:qk]&gt;</run>
                <run fontcolor='#787878'>&#10;Economy rate:&#9;</run>
                <run bold='true'>&lt;[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[usr:Calculation_553379806919364613:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.73563534021377563' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#000000' />
                <format attr='mark-color' value='#ff9da7' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='599' />
                <format attr='maxwidth' value='599' />
                <format attr='minheight' value='414' />
                <format attr='maxheight' value='414' />
                <format attr='aspect' value='0' />
                <format attr='minwidth' value='551' />
                <format attr='maxwidth' value='551' />
                <format attr='minheight' value='406' />
                <format attr='maxheight' value='406' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[usr:Calculation_553379806919364613:qk]</rows>
        <cols>[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[cnt:player_dismissed:qk]</cols>
        <annotations>
          <annotation class='area' id='1' text-pinx='0.5' text-piny='0.5' text-width-delta='-18'>
            <formatted-text>
              <run>Uneconomical&#10;Striker Bowler</run>
            </formatted-text>
            <top-left>
              <visual-coordinate class='axis'>
                <x-coord axis-value='117.61678004535148'>
                  <node-reference>
                    <axis>[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[cnt:player_dismissed:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='9.9993459702588581'>
                  <node-reference>
                    <axis>[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[usr:Calculation_553379806919364613:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </top-left>
            <bottom-right>
              <visual-coordinate class='axis'>
                <x-coord axis-value='170.18594104308389'>
                  <node-reference>
                    <axis>[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[cnt:player_dismissed:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='9.1492449972461909'>
                  <node-reference>
                    <axis>[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[usr:Calculation_553379806919364613:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </bottom-right>
            <text x='0.5' y='0.5' />
          </annotation>
          <annotation class='area' id='2' text-pinx='0.5' text-piny='0.5' text-width-delta='-18'>
            <formatted-text>
              <run>Uneconomical&#10;Part time Bowler</run>
            </formatted-text>
            <top-left>
              <visual-coordinate class='axis'>
                <x-coord axis-value='-1.495339547270305'>
                  <node-reference>
                    <axis>[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[cnt:player_dismissed:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='10.619433198380568'>
                  <node-reference>
                    <axis>[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[usr:Calculation_553379806919364613:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </top-left>
            <bottom-right>
              <visual-coordinate class='axis'>
                <x-coord axis-value='55.151797603195732'>
                  <node-reference>
                    <axis>[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[cnt:player_dismissed:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='9.7081224696356294'>
                  <node-reference>
                    <axis>[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[usr:Calculation_553379806919364613:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </bottom-right>
            <text x='0.5' y='0.5' />
          </annotation>
          <annotation class='area' id='3' text-pinx='0.5' text-piny='0.5' text-width-delta='-18'>
            <formatted-text>
              <run>Economical&#10;Striker Bowler</run>
            </formatted-text>
            <top-left>
              <visual-coordinate class='axis'>
                <x-coord axis-value='134.41723356009072'>
                  <node-reference>
                    <axis>[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[cnt:player_dismissed:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='5.9461859739306036'>
                  <node-reference>
                    <axis>[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[usr:Calculation_553379806919364613:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </top-left>
            <bottom-right>
              <visual-coordinate class='axis'>
                <x-coord axis-value='185.63151927437642'>
                  <node-reference>
                    <axis>[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[cnt:player_dismissed:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='5.0657242518817691'>
                  <node-reference>
                    <axis>[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[usr:Calculation_553379806919364613:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </bottom-right>
            <text x='0.5' y='0.5' />
          </annotation>
          <annotation class='area' id='4' text-pinx='0.5' text-piny='0.5' text-width-delta='-18'>
            <formatted-text>
              <run>Economical&#10;Part time Bowler</run>
            </formatted-text>
            <top-left>
              <visual-coordinate class='axis'>
                <x-coord axis-value='25.756235827664398'>
                  <node-reference>
                    <axis>[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[cnt:player_dismissed:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='5.991727097484854'>
                  <node-reference>
                    <axis>[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[usr:Calculation_553379806919364613:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </top-left>
            <bottom-right>
              <visual-coordinate class='axis'>
                <x-coord axis-value='73.718820861678012'>
                  <node-reference>
                    <axis>[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[cnt:player_dismissed:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='5.24788874609877'>
                  <node-reference>
                    <axis>[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[usr:Calculation_553379806919364613:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </bottom-right>
            <text x='0.5' y='0.5' />
          </annotation>
        </annotations>
      </table>
    </worksheet>
    <worksheet name='Extras by team'>
      <table>
        <view>
          <datasources>
            <datasource caption='matches+' name='federated.11w1e4e0p7t9mc15hk9bj1vrgi6c' />
          </datasources>
          <datasource-dependencies datasource='federated.11w1e4e0p7t9mc15hk9bj1vrgi6c'>
            <column caption='Bowling Team' datatype='string' name='[bowling_team]' role='dimension' type='nominal' />
            <column caption='Bye Runs' datatype='integer' name='[bye_runs]' role='measure' type='quantitative' />
            <column caption='Legbye Runs' datatype='integer' name='[legbye_runs]' role='measure' type='quantitative' />
            <column caption='Noball Runs' datatype='integer' name='[noball_runs]' role='measure' type='quantitative' />
            <column-instance column='[bowling_team]' derivation='None' name='[none:bowling_team:nk]' pivot='key' type='nominal' />
            <column-instance column='[bye_runs]' derivation='Sum' name='[sum:bye_runs:qk]' pivot='key' type='quantitative' />
            <column-instance column='[legbye_runs]' derivation='Sum' name='[sum:legbye_runs:qk]' pivot='key' type='quantitative' />
            <column-instance column='[noball_runs]' derivation='Sum' name='[sum:noball_runs:qk]' pivot='key' type='quantitative' />
            <column-instance column='[wide_runs]' derivation='Sum' name='[sum:wide_runs:qk]' pivot='key' type='quantitative' />
            <column caption='Wide Runs' datatype='integer' name='[wide_runs]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[sum:bye_runs:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[sum:legbye_runs:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[sum:noball_runs:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[sum:wide_runs:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[:Measure Names]' />
              <text column='[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-markers-mode' value='all' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[Multiple Values]</rows>
        <cols>[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[none:bowling_team:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Four-Sixes Classification'>
      <table>
        <view>
          <datasources>
            <datasource caption='matches+' name='federated.11w1e4e0p7t9mc15hk9bj1vrgi6c' />
          </datasources>
          <datasource-dependencies datasource='federated.11w1e4e0p7t9mc15hk9bj1vrgi6c'>
            <column caption='Fours' datatype='integer' name='[Calculation_825847582521495571]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [batsman_runs]==4 THEN 1 &#13;&#10;END' />
            </column>
            <column caption='Sixes' datatype='integer' name='[Calculation_825847582521765908]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [batsman_runs]==6 then 1 END' />
            </column>
            <column caption='Batsman' datatype='string' name='[batsman]' role='dimension' type='nominal' />
            <column caption='Batsman Runs' datatype='integer' name='[batsman_runs]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_825847582521495571]' derivation='Count' name='[cnt:Calculation_825847582521495571:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_825847582521765908]' derivation='Count' name='[cnt:Calculation_825847582521765908:qk]' pivot='key' type='quantitative' />
            <column-instance column='[batsman]' derivation='None' name='[none:batsman:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[Action (Batsman)]'>
            <groupfilter function='level-members' level='[batsman]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[cnt:Calculation_825847582521495571:qk]' included-values='in-range'>
            <min>10</min>
            <max>422</max>
          </filter>
          <filter class='quantitative' column='[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[cnt:Calculation_825847582521765908:qk]' included-values='in-range'>
            <min>5</min>
            <max>252</max>
          </filter>
          <slices>
            <column>[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[cnt:Calculation_825847582521495571:qk]</column>
            <column>[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[cnt:Calculation_825847582521765908:qk]</column>
            <column>[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[Action (Batsman)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[cnt:Calculation_825847582521495571:qk]' value='53' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height-header' value='10' />
          </style-rule>
          <style-rule element='caption'>
            <format attr='border-style' value='solid' />
            <format attr='border-color' value='#000000' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
          </style-rule>
          <style-rule element='title'>
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='1' />
            <format attr='border-color' value='#000000' />
          </style-rule>
          <style-rule element='annotation'>
            <format attr='border-style' id='annotation_0' value='solid' />
            <format attr='border-color' id='annotation_0' value='#000000' />
            <format attr='border-style' id='annotation_1' value='solid' />
            <format attr='border-color' id='annotation_1' value='#000000' />
            <format attr='rounding' id='annotation_1' value='medium' />
            <format attr='rounding' id='annotation_0' value='medium' />
            <format attr='border-style' id='annotation_2' value='solid' />
            <format attr='border-color' id='annotation_2' value='#000000' />
            <format attr='rounding' id='annotation_2' value='medium' />
            <format attr='border-style' id='annotation_3' value='solid' />
            <format attr='rounding' id='annotation_3' value='medium' />
            <format attr='border-color' id='annotation_3' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane id='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[none:batsman:nk]' />
              <lod column='[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[none:batsman:nk]' />
            </encodings>
            <reference-line axis-column='[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[cnt:Calculation_825847582521495571:qk]' enable-instant-analytics='true' formula='constant' id='refline0' label-type='automatic' scope='per-pane' value='200' value-column='[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[cnt:Calculation_825847582521495571:qk]' z-order='1' />
            <reference-line axis-column='[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[cnt:Calculation_825847582521765908:qk]' enable-instant-analytics='true' formula='constant' id='refline1' label-type='automatic' scope='per-pane' value='120' value-column='[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[cnt:Calculation_825847582521765908:qk]' z-order='2' />
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Batsman:&#9;</run>
                <run bold='true'>&lt;[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[none:batsman:nk]&gt;</run>
                <run fontcolor='#787878'>&#10;Fours:&#9;</run>
                <run bold='true'>&lt;[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[cnt:Calculation_825847582521495571:qk]&gt;</run>
                <run fontcolor='#787878'>&#10;Sixes:&#9;</run>
                <run bold='true'>&lt;[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[cnt:Calculation_825847582521765908:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.73563534021377563' />
                <format attr='mark-labels-range-scope' value='cell' />
                <format attr='mark-labels-range-field' value='[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[none:batsman:nk]' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#000000' />
                <format attr='mark-color' value='#f28e2b' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='658' />
                <format attr='maxwidth' value='658' />
                <format attr='minheight' value='406' />
                <format attr='maxheight' value='406' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[cnt:Calculation_825847582521765908:qk]</rows>
        <cols>[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[cnt:Calculation_825847582521495571:qk]</cols>
        <annotations>
          <annotation class='area' id='0' text-pinx='0.5' text-piny='0.5' text-width-delta='-18'>
            <formatted-text>
              <run>More Fours&#10;More Sixes</run>
            </formatted-text>
            <top-left>
              <visual-coordinate class='axis'>
                <x-coord axis-value='371.44072948328267'>
                  <node-reference>
                    <axis>[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[cnt:Calculation_825847582521495571:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='268.0'>
                  <node-reference>
                    <axis>[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[cnt:Calculation_825847582521765908:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </top-left>
            <bottom-right>
              <visual-coordinate class='axis'>
                <x-coord axis-value='445.322188449848'>
                  <node-reference>
                    <axis>[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[cnt:Calculation_825847582521495571:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='234.33497536945814'>
                  <node-reference>
                    <axis>[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[cnt:Calculation_825847582521765908:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </bottom-right>
            <text x='0.5' y='0.5' />
          </annotation>
          <annotation class='area' id='1' text-pinx='0.5' text-piny='0.5' text-width-delta='-18'>
            <formatted-text>
              <run>Less Fours&#10;More Sixes</run>
            </formatted-text>
            <top-left>
              <visual-coordinate class='axis'>
                <x-coord axis-value='14.234042553191488'>
                  <node-reference>
                    <axis>[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[cnt:Calculation_825847582521495571:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='266.67980295566502'>
                  <node-reference>
                    <axis>[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[cnt:Calculation_825847582521765908:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </top-left>
            <bottom-right>
              <visual-coordinate class='axis'>
                <x-coord axis-value='79.303951367781167'>
                  <node-reference>
                    <axis>[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[cnt:Calculation_825847582521495571:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='233.67487684729062'>
                  <node-reference>
                    <axis>[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[cnt:Calculation_825847582521765908:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </bottom-right>
            <text x='0.5' y='0.5' />
          </annotation>
          <annotation class='area' id='2' text-pinx='0.5' text-piny='0.5' text-width-delta='-18'>
            <formatted-text>
              <run>Less Fours&#10;Less Sixes</run>
            </formatted-text>
            <top-left>
              <visual-coordinate class='axis'>
                <x-coord axis-value='8.1337386018237083'>
                  <node-reference>
                    <axis>[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[cnt:Calculation_825847582521495571:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='112.87684729064038'>
                  <node-reference>
                    <axis>[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[cnt:Calculation_825847582521765908:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </top-left>
            <bottom-right>
              <visual-coordinate class='axis'>
                <x-coord axis-value='74.559270516717319'>
                  <node-reference>
                    <axis>[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[cnt:Calculation_825847582521495571:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='78.551724137931046'>
                  <node-reference>
                    <axis>[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[cnt:Calculation_825847582521765908:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </bottom-right>
            <text x='0.5' y='0.5' />
          </annotation>
          <annotation class='area' id='3' text-pinx='0.5' text-piny='0.5' text-width-delta='-18'>
            <formatted-text>
              <run>More Fours&#10;Less Sixes</run>
            </formatted-text>
            <top-left>
              <visual-coordinate class='axis'>
                <x-coord axis-value='372.79635258358667'>
                  <node-reference>
                    <axis>[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[cnt:Calculation_825847582521495571:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='112.87684729064038'>
                  <node-reference>
                    <axis>[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[cnt:Calculation_825847582521765908:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </top-left>
            <bottom-right>
              <visual-coordinate class='axis'>
                <x-coord axis-value='445.322188449848'>
                  <node-reference>
                    <axis>[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[cnt:Calculation_825847582521495571:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='78.551724137931046'>
                  <node-reference>
                    <axis>[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[cnt:Calculation_825847582521765908:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </bottom-right>
            <text x='0.5' y='0.5' />
          </annotation>
        </annotations>
      </table>
    </worksheet>
    <worksheet name='Fours and Sixes'>
      <table>
        <view>
          <datasources>
            <datasource caption='matches+' name='federated.11w1e4e0p7t9mc15hk9bj1vrgi6c' />
          </datasources>
          <datasource-dependencies datasource='federated.11w1e4e0p7t9mc15hk9bj1vrgi6c'>
            <column caption='Match' datatype='string' name='[Calculation_825847582369042439]' role='measure' type='nominal'>
              <calculation class='tableau' formula='ATTR([team1]) +&quot; Vs &quot;+ ATTR([team2])' />
            </column>
            <column caption='Fours' datatype='integer' name='[Calculation_825847582521495571]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [batsman_runs]==4 THEN 1 &#13;&#10;END' />
            </column>
            <column caption='Sixes' datatype='integer' name='[Calculation_825847582521765908]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [batsman_runs]==6 then 1 END' />
            </column>
            <column caption='Batsman' datatype='string' name='[batsman]' role='dimension' type='nominal' />
            <column caption='Batsman Runs' datatype='integer' name='[batsman_runs]' role='measure' type='quantitative' />
            <column caption='Batting Team' datatype='string' name='[batting_team]' role='dimension' type='nominal' />
            <column caption='Bowler' datatype='string' name='[bowler]' role='dimension' type='nominal' />
            <column caption='Bowling Team' datatype='string' name='[bowling_team]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_825847582521495571]' derivation='Count' name='[cnt:Calculation_825847582521495571:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_825847582521765908]' derivation='Count' name='[cnt:Calculation_825847582521765908:qk]' pivot='key' type='quantitative' />
            <column caption='Match Id' datatype='integer' name='[match_id]' role='dimension' type='ordinal' />
            <column-instance column='[batting_team]' derivation='None' name='[none:batting_team:nk]' pivot='key' type='nominal' />
            <column-instance column='[bowling_team]' derivation='None' name='[none:bowling_team:nk]' pivot='key' type='nominal' />
            <column-instance column='[match_id]' derivation='None' name='[none:match_id:ok]' pivot='key' type='ordinal' />
            <column-instance column='[season]' derivation='None' name='[none:season:qk]' pivot='key' type='quantitative' />
            <column-instance column='[venue]' derivation='None' name='[none:venue:nk]' pivot='key' type='nominal' />
            <column caption='Season' datatype='integer' name='[season]' role='measure' type='quantitative' />
            <column caption='Team1' datatype='string' name='[team1]' role='dimension' type='nominal' />
            <column caption='Team2' datatype='string' name='[team2]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_825847582369042439]' derivation='User' name='[usr:Calculation_825847582369042439:nk]' pivot='key' type='nominal' />
            <column caption='Venue' datatype='string' name='[venue]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[cnt:Calculation_825847582521495571:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[cnt:Calculation_825847582521765908:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[Action (Batsman,Batting Team)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[batsman]' />
              <groupfilter function='level-members' level='[batting_team]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[Action (Bowler,Bowling Team)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[bowler]' />
              <groupfilter function='level-members' level='[bowling_team]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[none:batting_team:nk]' filter-group='5'>
            <groupfilter function='level-members' level='[none:batting_team:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[none:bowling_team:nk]' filter-group='4'>
            <groupfilter function='level-members' level='[none:bowling_team:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[none:match_id:ok]' filter-group='7'>
            <groupfilter function='level-members' level='[none:match_id:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[none:season:qk]' filter-group='13' included-values='all' />
          <filter class='categorical' column='[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[none:venue:nk]' filter-group='3'>
            <groupfilter function='level-members' level='[none:venue:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[:Measure Names]</column>
            <column>[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[Action (Batsman,Batting Team)]</column>
            <column>[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[Action (Bowler,Bowling Team)]</column>
            <column>[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[none:venue:nk]</column>
            <column>[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[none:bowling_team:nk]</column>
            <column>[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[none:batting_team:nk]</column>
            <column>[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[none:match_id:ok]</column>
            <column>[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[none:season:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[Multiple Values]' scope='rows' value='Fours/Sxes' />
            <format attr='subtitle' class='0' field='[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[Multiple Values]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[Multiple Values]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='caption'>
            <format attr='border-style' value='solid' />
            <format attr='border-color' value='#000000' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
          <style-rule element='title'>
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='1' />
            <format attr='border-color' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane id='5'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[:Measure Names]' />
              <tooltip column='[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[usr:Calculation_825847582369042439:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#e15759' />
                <format attr='mark-markers-mode' value='all' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[Multiple Values]</rows>
        <cols>[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[none:match_id:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='Match Distribution across Venues'>
      <table>
        <view>
          <datasources>
            <datasource caption='matches+' name='federated.11w1e4e0p7t9mc15hk9bj1vrgi6c' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.11w1e4e0p7t9mc15hk9bj1vrgi6c'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Africa&quot;' value='&quot;South Africa&quot;' />
              </semantic-values>
            </column>
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[venue]' derivation='Attribute' name='[attr:venue:nk]' pivot='key' type='nominal' />
            <column-instance column='[match_id]' derivation='CountD' name='[ctd:match_id:qk]' pivot='key' type='quantitative' />
            <column caption='Match Id' datatype='integer' name='[match_id]' role='dimension' type='ordinal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column caption='Venue' datatype='string' name='[venue]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[Longitude (generated)]' field-type='quantitative' max='-26865841.635105278' min='-34874881.661022276' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[Latitude (generated)]' field-type='quantitative' max='4716835.8122420069' min='140241.51171800238' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[none:State:nk]' />
              <size column='[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[ctd:match_id:qk]' />
              <tooltip column='[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[attr:venue:nk]' />
              <lod column='[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[none:State:nk]' />
              <lod column='[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[none:Country:nk]' />
              <geometry column='[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[Geometry (generated)]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Country:&#9;</run>
                <run bold='true'>&lt;[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[none:Country:nk]&gt;</run>
                <run fontcolor='#787878'>&#10;State:&#9;</run>
                <run bold='true'>&lt;[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[none:State:nk]&gt;</run>
                <run fontcolor='#787878'>&#10;Venue:&#9;</run>
                <run bold='true'>&lt;[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[attr:venue:nk]&gt;</run>
                <run fontcolor='#787878'>&#10;Number of Matches:&#9;</run>
                <run bold='true'>&lt;[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[ctd:match_id:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='mark-labels-show' value='true' />
                <format attr='size' value='1.9010497331619263' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#000000' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[Latitude (generated)]</rows>
        <cols>[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='Player Classification'>
      <table>
        <view>
          <datasources>
            <datasource caption='Statistics' name='federated.1yjjyhj1kgk5hy1btlmtr1yfmxdl' />
          </datasources>
          <datasource-dependencies datasource='federated.1yjjyhj1kgk5hy1btlmtr1yfmxdl'>
            <column datatype='string' name='[Player]' role='dimension' type='nominal' />
            <column datatype='real' name='[Runs]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Wickets]' role='measure' type='quantitative' />
            <column-instance column='[Player]' derivation='None' name='[none:Player:nk]' pivot='key' type='nominal' />
            <column-instance column='[Runs]' derivation='Sum' name='[sum:Runs:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Wickets]' derivation='Sum' name='[sum:Wickets:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1yjjyhj1kgk5hy1btlmtr1yfmxdl].[sum:Runs:qk]' included-values='in-range'>
            <min>100.0</min>
            <max>3237.0</max>
          </filter>
          <filter class='quantitative' column='[federated.1yjjyhj1kgk5hy1btlmtr1yfmxdl].[sum:Wickets:qk]' included-values='in-range'>
            <min>1</min>
            <max>159</max>
          </filter>
          <slices>
            <column>[federated.1yjjyhj1kgk5hy1btlmtr1yfmxdl].[sum:Runs:qk]</column>
            <column>[federated.1yjjyhj1kgk5hy1btlmtr1yfmxdl].[sum:Wickets:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='caption'>
            <format attr='border-style' value='solid' />
            <format attr='border-color' value='#000000' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
          </style-rule>
          <style-rule element='title'>
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='1' />
            <format attr='border-color' value='#000000' />
          </style-rule>
          <style-rule element='annotation'>
            <format attr='border-style' id='annotation_0' value='solid' />
            <format attr='border-color' id='annotation_0' value='#000000' />
            <format attr='rounding' id='annotation_0' value='medium' />
            <format attr='border-style' id='annotation_1' value='solid' />
            <format attr='border-color' id='annotation_1' value='#000000' />
            <format attr='rounding' id='annotation_1' value='medium' />
            <format attr='border-style' id='annotation_2' value='solid' />
            <format attr='rounding' id='annotation_2' value='medium' />
            <format attr='border-color' id='annotation_2' value='#000000' />
            <format attr='border-style' id='annotation_3' value='solid' />
            <format attr='border-color' id='annotation_3' value='#000000' />
            <format attr='rounding' id='annotation_3' value='medium' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.1yjjyhj1kgk5hy1btlmtr1yfmxdl].[none:Player:nk]' />
              <lod column='[federated.1yjjyhj1kgk5hy1btlmtr1yfmxdl].[none:Player:nk]' />
            </encodings>
            <reference-line axis-column='[federated.1yjjyhj1kgk5hy1btlmtr1yfmxdl].[sum:Wickets:qk]' enable-instant-analytics='true' formula='constant' id='refline0' label-type='automatic' scope='per-pane' value='60' value-column='[federated.1yjjyhj1kgk5hy1btlmtr1yfmxdl].[sum:Wickets:qk]' z-order='1' />
            <reference-line axis-column='[federated.1yjjyhj1kgk5hy1btlmtr1yfmxdl].[sum:Runs:qk]' enable-instant-analytics='true' formula='constant' id='refline1' label-type='automatic' scope='per-pane' value='1000.0' value-column='[federated.1yjjyhj1kgk5hy1btlmtr1yfmxdl].[sum:Runs:qk]' z-order='2' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='0.73563534021377563' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#000000' />
                <format attr='mark-color' value='#59a14f' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='544' />
                <format attr='maxwidth' value='544' />
                <format attr='minheight' value='406' />
                <format attr='maxheight' value='406' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1yjjyhj1kgk5hy1btlmtr1yfmxdl].[sum:Runs:qk]</rows>
        <cols>[federated.1yjjyhj1kgk5hy1btlmtr1yfmxdl].[sum:Wickets:qk]</cols>
        <annotations>
          <annotation class='area' id='0' text-pinx='0.5' text-piny='0.5' text-width-delta='-18'>
            <formatted-text>
              <run>All Rounder</run>
            </formatted-text>
            <top-left>
              <visual-coordinate class='axis'>
                <x-coord axis-value='116.97426470588236'>
                  <node-reference>
                    <axis>[federated.1yjjyhj1kgk5hy1btlmtr1yfmxdl].[sum:Wickets:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='2805.5345386533668'>
                  <node-reference>
                    <axis>[federated.1yjjyhj1kgk5hy1btlmtr1yfmxdl].[sum:Runs:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </top-left>
            <bottom-right>
              <visual-coordinate class='axis'>
                <x-coord axis-value='151.98529411764707'>
                  <node-reference>
                    <axis>[federated.1yjjyhj1kgk5hy1btlmtr1yfmxdl].[sum:Wickets:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='2551.2564837905238'>
                  <node-reference>
                    <axis>[federated.1yjjyhj1kgk5hy1btlmtr1yfmxdl].[sum:Runs:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </bottom-right>
            <text x='0.5' y='0.5' />
          </annotation>
          <annotation class='area' id='1' text-pinx='0.5' text-piny='0.5' text-width-delta='-18'>
            <formatted-text>
              <run>Bowler</run>
            </formatted-text>
            <top-left>
              <visual-coordinate class='axis'>
                <x-coord axis-value='121.22794117647058'>
                  <node-reference>
                    <axis>[federated.1yjjyhj1kgk5hy1btlmtr1yfmxdl].[sum:Wickets:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='932.35286783042397'>
                  <node-reference>
                    <axis>[federated.1yjjyhj1kgk5hy1btlmtr1yfmxdl].[sum:Runs:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </top-left>
            <bottom-right>
              <visual-coordinate class='axis'>
                <x-coord axis-value='152.96691176470588'>
                  <node-reference>
                    <axis>[federated.1yjjyhj1kgk5hy1btlmtr1yfmxdl].[sum:Wickets:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='661.12294264339153'>
                  <node-reference>
                    <axis>[federated.1yjjyhj1kgk5hy1btlmtr1yfmxdl].[sum:Runs:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </bottom-right>
            <text x='0.5' y='0.5' />
          </annotation>
          <annotation class='area' id='2' text-pinx='0.5' text-piny='0.5' text-width-delta='-18'>
            <formatted-text>
              <run>Batsman</run>
            </formatted-text>
            <top-left>
              <visual-coordinate class='axis'>
                <x-coord axis-value='12.268382352941178'>
                  <node-reference>
                    <axis>[federated.1yjjyhj1kgk5hy1btlmtr1yfmxdl].[sum:Wickets:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='2737.7270573566084'>
                  <node-reference>
                    <axis>[federated.1yjjyhj1kgk5hy1btlmtr1yfmxdl].[sum:Runs:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </top-left>
            <bottom-right>
              <visual-coordinate class='axis'>
                <x-coord axis-value='42.044117647058819'>
                  <node-reference>
                    <axis>[federated.1yjjyhj1kgk5hy1btlmtr1yfmxdl].[sum:Wickets:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='2474.9730673316708'>
                  <node-reference>
                    <axis>[federated.1yjjyhj1kgk5hy1btlmtr1yfmxdl].[sum:Runs:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </bottom-right>
            <text x='0.5' y='0.5' />
          </annotation>
          <annotation class='area' id='3' text-pinx='0.5' text-piny='0.5' text-width-delta='-18'>
            <formatted-text>
              <run>Fielder</run>
            </formatted-text>
            <top-left>
              <visual-coordinate class='axis'>
                <x-coord axis-value='30.591911764705877'>
                  <node-reference>
                    <axis>[federated.1yjjyhj1kgk5hy1btlmtr1yfmxdl].[sum:Wickets:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='932.35286783042397'>
                  <node-reference>
                    <axis>[federated.1yjjyhj1kgk5hy1btlmtr1yfmxdl].[sum:Runs:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </top-left>
            <bottom-right>
              <visual-coordinate class='axis'>
                <x-coord axis-value='54.805147058823529'>
                  <node-reference>
                    <axis>[federated.1yjjyhj1kgk5hy1btlmtr1yfmxdl].[sum:Wickets:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='644.17107231920204'>
                  <node-reference>
                    <axis>[federated.1yjjyhj1kgk5hy1btlmtr1yfmxdl].[sum:Runs:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </bottom-right>
            <text x='0.5' y='0.5' />
          </annotation>
        </annotations>
      </table>
    </worksheet>
    <worksheet name='Runs per match'>
      <layout-options>
        <title>
          <formatted-text>
            <run> Runs per match</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='matches+' name='federated.11w1e4e0p7t9mc15hk9bj1vrgi6c' />
          </datasources>
          <datasource-dependencies datasource='federated.11w1e4e0p7t9mc15hk9bj1vrgi6c'>
            <column caption='Match' datatype='string' name='[Calculation_825847582369042439]' role='measure' type='nominal'>
              <calculation class='tableau' formula='ATTR([team1]) +&quot; Vs &quot;+ ATTR([team2])' />
            </column>
            <column caption='Batsman' datatype='string' name='[batsman]' role='dimension' type='nominal' />
            <column caption='Batting Team' datatype='string' name='[batting_team]' role='dimension' type='nominal' />
            <column caption='Bowler' datatype='string' name='[bowler]' role='dimension' type='nominal' />
            <column caption='Bowling Team' datatype='string' name='[bowling_team]' role='dimension' type='nominal' />
            <column caption='Match Id' datatype='integer' name='[match_id]' role='dimension' type='ordinal' />
            <column-instance column='[batsman]' derivation='None' name='[none:batsman:nk]' pivot='key' type='nominal' />
            <column-instance column='[batting_team]' derivation='None' name='[none:batting_team:nk]' pivot='key' type='nominal' />
            <column-instance column='[bowling_team]' derivation='None' name='[none:bowling_team:nk]' pivot='key' type='nominal' />
            <column-instance column='[match_id]' derivation='None' name='[none:match_id:ok]' pivot='key' type='ordinal' />
            <column-instance column='[season]' derivation='None' name='[none:season:qk]' pivot='key' type='quantitative' />
            <column-instance column='[venue]' derivation='None' name='[none:venue:nk]' pivot='key' type='nominal' />
            <column caption='Season' datatype='integer' name='[season]' role='measure' type='quantitative' />
            <column-instance column='[total_runs]' derivation='Sum' name='[sum:total_runs:qk]' pivot='key' type='quantitative' />
            <column caption='Team1' datatype='string' name='[team1]' role='dimension' type='nominal' />
            <column caption='Team2' datatype='string' name='[team2]' role='dimension' type='nominal' />
            <column caption='Total Runs' datatype='integer' name='[total_runs]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_825847582369042439]' derivation='User' name='[usr:Calculation_825847582369042439:nk]' pivot='key' type='nominal' />
            <column caption='Venue' datatype='string' name='[venue]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[Action (Batsman,Batting Team)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[batsman]' />
              <groupfilter function='level-members' level='[batting_team]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[Action (Bowler,Bowling Team)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[bowler]' />
              <groupfilter function='level-members' level='[bowling_team]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[none:batsman:nk]'>
            <groupfilter function='level-members' level='[none:batsman:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[none:batting_team:nk]' filter-group='5'>
            <groupfilter function='level-members' level='[none:batting_team:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[none:bowling_team:nk]' filter-group='4'>
            <groupfilter function='level-members' level='[none:bowling_team:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[none:match_id:ok]' filter-group='7'>
            <groupfilter function='level-members' level='[none:match_id:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[none:season:qk]' filter-group='13' included-values='all' />
          <filter class='categorical' column='[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[none:venue:nk]' filter-group='3'>
            <groupfilter function='level-members' level='[none:venue:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[Action (Batsman,Batting Team)]</column>
            <column>[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[Action (Bowler,Bowling Team)]</column>
            <column>[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[none:match_id:ok]</column>
            <column>[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[none:venue:nk]</column>
            <column>[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[none:bowling_team:nk]</column>
            <column>[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[none:batting_team:nk]</column>
            <column>[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[none:season:qk]</column>
            <column>[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[none:batsman:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='caption'>
            <format attr='border-style' value='solid' />
            <format attr='border-color' value='#000000' />
          </style-rule>
          <style-rule element='title'>
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='1' />
            <format attr='border-color' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane id='4'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <tooltip column='[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[usr:Calculation_825847582369042439:nk]' />
              <color column='[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[none:batting_team:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#000000' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[sum:total_runs:qk]</rows>
        <cols>[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[none:match_id:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='Top Run getter'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Top Run Getter</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='matches+' name='federated.11w1e4e0p7t9mc15hk9bj1vrgi6c' />
          </datasources>
          <datasource-dependencies datasource='federated.11w1e4e0p7t9mc15hk9bj1vrgi6c'>
            <column caption='Batsman' datatype='string' name='[batsman]' role='dimension' type='nominal' />
            <column caption='Batsman Runs' datatype='integer' name='[batsman_runs]' role='measure' type='quantitative' />
            <column caption='Batting Team' datatype='string' name='[batting_team]' role='dimension' type='nominal' />
            <column caption='Bowler' datatype='string' name='[bowler]' role='dimension' type='nominal' />
            <column caption='Bowling Team' datatype='string' name='[bowling_team]' role='dimension' type='nominal' />
            <column caption='Match Id' datatype='integer' name='[match_id]' role='dimension' type='ordinal' />
            <column-instance column='[batsman]' derivation='None' name='[none:batsman:nk]' pivot='key' type='nominal' />
            <column-instance column='[batting_team]' derivation='None' name='[none:batting_team:nk]' pivot='key' type='nominal' />
            <column-instance column='[bowler]' derivation='None' name='[none:bowler:nk]' pivot='key' type='nominal' />
            <column-instance column='[bowling_team]' derivation='None' name='[none:bowling_team:nk]' pivot='key' type='nominal' />
            <column-instance column='[match_id]' derivation='None' name='[none:match_id:ok]' pivot='key' type='ordinal' />
            <column-instance column='[season]' derivation='None' name='[none:season:qk]' pivot='key' type='quantitative' />
            <column-instance column='[venue]' derivation='None' name='[none:venue:nk]' pivot='key' type='nominal' />
            <column caption='Season' datatype='integer' name='[season]' role='measure' type='quantitative' />
            <column-instance column='[batsman_runs]' derivation='Sum' name='[sum:batsman_runs:qk]' pivot='key' type='quantitative' />
            <column caption='Venue' datatype='string' name='[venue]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[Action (Bowler,Bowling Team)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[bowler]' />
              <groupfilter function='level-members' level='[bowling_team]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[none:batting_team:nk]' filter-group='5'>
            <groupfilter function='level-members' level='[none:batting_team:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[none:bowler:nk]'>
            <groupfilter function='level-members' level='[none:bowler:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[none:bowling_team:nk]' filter-group='4'>
            <groupfilter function='level-members' level='[none:bowling_team:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[none:match_id:ok]' filter-group='7'>
            <groupfilter function='level-members' level='[none:match_id:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[none:season:qk]' filter-group='13' included-values='all' />
          <filter class='categorical' column='[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[none:venue:nk]' filter-group='3'>
            <groupfilter function='level-members' level='[none:venue:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[Action (Bowler,Bowling Team)]</column>
            <column>[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[none:venue:nk]</column>
            <column>[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[none:bowling_team:nk]</column>
            <column>[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[none:batting_team:nk]</column>
            <column>[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[none:match_id:ok]</column>
            <column>[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[none:season:qk]</column>
            <column>[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[none:bowler:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[sum:batsman_runs:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='caption'>
            <format attr='border-style' value='solid' />
            <format attr='border-color' value='#000000' />
          </style-rule>
          <style-rule element='title'>
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='1' />
            <format attr='border-color' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[none:batting_team:nk]' />
              <size column='[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[sum:batsman_runs:qk]' />
              <text column='[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[none:batsman:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#000000' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='Top Wicket taker'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Top Wicket Taker</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='matches+' name='federated.11w1e4e0p7t9mc15hk9bj1vrgi6c' />
          </datasources>
          <datasource-dependencies datasource='federated.11w1e4e0p7t9mc15hk9bj1vrgi6c'>
            <column caption='Batsman' datatype='string' name='[batsman]' role='dimension' type='nominal' />
            <column caption='Batting Team' datatype='string' name='[batting_team]' role='dimension' type='nominal' />
            <column caption='Bowler' datatype='string' name='[bowler]' role='dimension' type='nominal' />
            <column caption='Bowling Team' datatype='string' name='[bowling_team]' role='dimension' type='nominal' />
            <column-instance column='[player_dismissed]' derivation='Count' name='[cnt:player_dismissed:qk]' pivot='key' type='quantitative' />
            <column caption='Dismissal Kind' datatype='string' name='[dismissal_kind]' role='dimension' type='nominal' />
            <column caption='Match Id' datatype='integer' name='[match_id]' role='dimension' type='ordinal' />
            <column-instance column='[batting_team]' derivation='None' name='[none:batting_team:nk]' pivot='key' type='nominal' />
            <column-instance column='[bowler]' derivation='None' name='[none:bowler:nk]' pivot='key' type='nominal' />
            <column-instance column='[bowling_team]' derivation='None' name='[none:bowling_team:nk]' pivot='key' type='nominal' />
            <column-instance column='[dismissal_kind]' derivation='None' name='[none:dismissal_kind:nk]' pivot='key' type='nominal' />
            <column-instance column='[match_id]' derivation='None' name='[none:match_id:ok]' pivot='key' type='ordinal' />
            <column-instance column='[player_dismissed]' derivation='None' name='[none:player_dismissed:nk]' pivot='key' type='nominal' />
            <column-instance column='[season]' derivation='None' name='[none:season:qk]' pivot='key' type='quantitative' />
            <column-instance column='[venue]' derivation='None' name='[none:venue:nk]' pivot='key' type='nominal' />
            <column caption='Player Dismissed' datatype='string' name='[player_dismissed]' role='dimension' type='nominal' />
            <column caption='Season' datatype='integer' name='[season]' role='measure' type='quantitative' />
            <column caption='Venue' datatype='string' name='[venue]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[Action (Batsman,Batting Team)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[batsman]' />
              <groupfilter function='level-members' level='[batting_team]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[none:batting_team:nk]' filter-group='5'>
            <groupfilter function='level-members' level='[none:batting_team:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <sort class='computed' column='[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[none:bowler:nk]' direction='DESC' using='[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[cnt:player_dismissed:qk]' />
          <filter class='categorical' column='[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[none:bowling_team:nk]'>
            <groupfilter function='level-members' level='[none:bowling_team:nk]' />
          </filter>
          <filter class='categorical' column='[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[none:dismissal_kind:nk]'>
            <groupfilter function='level-members' level='[none:dismissal_kind:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[none:match_id:ok]' filter-group='7'>
            <groupfilter function='level-members' level='[none:match_id:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[none:player_dismissed:nk]'>
            <groupfilter function='level-members' level='[none:player_dismissed:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[none:season:qk]' filter-group='13' included-values='all' />
          <filter class='categorical' column='[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[none:venue:nk]' filter-group='3'>
            <groupfilter function='level-members' level='[none:venue:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[none:player_dismissed:nk]</column>
            <column>[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[none:batting_team:nk]</column>
            <column>[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[Action (Batsman,Batting Team)]</column>
            <column>[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[none:venue:nk]</column>
            <column>[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[none:bowling_team:nk]</column>
            <column>[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[none:dismissal_kind:nk]</column>
            <column>[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[none:match_id:ok]</column>
            <column>[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[none:season:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[cnt:player_dismissed:qk]' scope='cols' value='Number of Wickets' />
            <format attr='subtitle' class='0' field='[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[cnt:player_dismissed:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[cnt:player_dismissed:qk]' scope='cols' value='true' />
          </style-rule>
          <style-rule element='caption'>
            <format attr='border-style' value='solid' />
            <format attr='border-color' value='#000000' />
          </style-rule>
          <style-rule element='title'>
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='1' />
            <format attr='border-color' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[none:bowling_team:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.7471270561218262' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#000000' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[none:bowler:nk]</rows>
        <cols>[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[cnt:player_dismissed:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Win Prediction'>
      <table>
        <view>
          <datasources>
            <datasource caption='Wins' name='federated.0x6f7yq1q24nph1eejmz916y709b' />
          </datasources>
          <datasource-dependencies datasource='federated.0x6f7yq1q24nph1eejmz916y709b'>
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column caption='Number of Wins' datatype='integer' name='[count(winner)]' role='measure' type='quantitative' />
            <column-instance column='[count(winner)]' derivation='Sum' forecast-column-base='[sum:count(winner):qk]' forecast-column-type='forecast-value' name='[fVal:sum:count(winner):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[team]' derivation='None' name='[none:team:nk]' pivot='key' type='nominal' />
            <column-instance column='[count(winner)]' derivation='Sum' name='[sum:count(winner):qk]' pivot='key' type='quantitative' />
            <column caption='Team' datatype='string' name='[team]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0x6f7yq1q24nph1eejmz916y709b].[none:team:nk]'>
            <groupfilter function='member' level='[none:team:nk]' member='&quot;Mumbai Indians&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0x6f7yq1q24nph1eejmz916y709b].[none:team:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0x6f7yq1q24nph1eejmz916y709b].[fVal:sum:count(winner):qk]' scope='rows' value='Number of Wins' />
            <format attr='subtitle' class='0' field='[federated.0x6f7yq1q24nph1eejmz916y709b].[fVal:sum:count(winner):qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0x6f7yq1q24nph1eejmz916y709b].[fVal:sum:count(winner):qk]' scope='rows' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0x6f7yq1q24nph1eejmz916y709b].[none:team:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='all' />
                <format attr='size' value='2' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0x6f7yq1q24nph1eejmz916y709b].[fVal:sum:count(winner):qk]</rows>
        <cols>[federated.0x6f7yq1q24nph1eejmz916y709b].[none:Year:qk]</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='10.000000' enabled='true' fill-type='fill-zero' ignore-last='0' model-type='auto-season' range-type='auto' show-prediction-bands='true' />
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Classification Dashboard'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='3' type='layout-basic' w='98793' x='0' y='0'>
              <zone h='50000' id='1' name='Classification of Batsman' w='49397' x='0' y='0' />
              <zone h='50000' id='7' name='Classification of Bowlers' w='49396' x='49397' y='0' />
              <zone h='50000' id='9' name='Player Classification' w='49397' x='0' y='50000' />
              <zone h='50000' id='10' name='Four-Sixes Classification' w='49396' x='49397' y='50000' />
            </zone>
            <zone fixed-size='20' h='100000' id='4' is-fixed='true' param='vert' type='layout-flow' w='1207' x='98793' y='0'>
              <zone h='3253' id='6' name='Classification of Batsman' pane-specification-id='4' param='[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[none:batsman:nk]' type='color' w='1207' x='98793' y='0' />
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Cricket Story' type='storyboard'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='1' param='vert' removable='false' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='6273' id='3' type='title' w='100000' x='0' y='0' />
            <zone h='12661' id='4' is-fixed='true' paired-zone-id='5' removable='false' type='flipboard-nav' w='100000' x='0' y='6273' />
            <zone h='80601' id='5' paired-zone-id='4' removable='false' type='flipboard' w='100000' x='0' y='18934'>
              <flipboard active-id='1' nav-type='caption' show-nav-arrows='true'>
                <story-points>
                  <story-point caption='Player Analysis&#9;' captured-sheet='Player Analysis Dashboard' id='1'>
                    <currentDeltas>
                      <worksheet name='Fours and Sixes'>
                        <filter class='categorical' column='[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[Action (Batsman,Batting Team)]'>
                          <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
                            <groupfilter function='level-members' level='[batsman]' />
                            <groupfilter function='level-members' level='[batting_team]' />
                          </groupfilter>
                        </filter>
                      </worksheet>
                      <worksheet name='Runs per match'>
                        <filter class='categorical' column='[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[Action (Batsman,Batting Team)]'>
                          <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
                            <groupfilter function='level-members' level='[batsman]' />
                            <groupfilter function='level-members' level='[batting_team]' />
                          </groupfilter>
                        </filter>
                      </worksheet>
                      <worksheet name='Top Run getter'>
                        <selection-collection />
                      </worksheet>
                      <worksheet name='Top Wicket taker'>
                        <filter class='categorical' column='[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[Action (Batsman,Batting Team)]'>
                          <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
                            <groupfilter function='level-members' level='[batsman]' />
                            <groupfilter function='level-members' level='[batting_team]' />
                          </groupfilter>
                        </filter>
                      </worksheet>
                    </currentDeltas>
                    <capturedDeltas />
                  </story-point>
                  <story-point caption='Classification' captured-sheet='Classification Dashboard' id='2' />
                  <story-point caption='Prediction' captured-sheet='Prediction Dashboard' id='3' />
                </story-points>
              </flipboard>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Player Analysis Dashboard'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Player Analysis</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource caption='matches+' name='federated.11w1e4e0p7t9mc15hk9bj1vrgi6c' />
      </datasources>
      <datasource-dependencies datasource='federated.11w1e4e0p7t9mc15hk9bj1vrgi6c'>
        <column caption='Batting Team' datatype='string' name='[batting_team]' role='dimension' type='nominal' />
        <column caption='Bowling Team' datatype='string' name='[bowling_team]' role='dimension' type='nominal' />
        <column-instance column='[batting_team]' derivation='None' name='[none:batting_team:nk]' pivot='key' type='nominal' />
        <column-instance column='[bowling_team]' derivation='None' name='[none:bowling_team:nk]' pivot='key' type='nominal' />
        <column-instance column='[season]' derivation='None' name='[none:season:qk]' pivot='key' type='quantitative' />
        <column-instance column='[venue]' derivation='None' name='[none:venue:nk]' pivot='key' type='nominal' />
        <column caption='Season' datatype='integer' name='[season]' role='measure' type='quantitative' />
        <column caption='Venue' datatype='string' name='[venue]' role='dimension' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='22' param='vert' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='6273' id='21' type='title' w='100000' x='0' y='0' />
            <zone h='93727' id='5' param='horz' type='layout-flow' w='100000' x='0' y='6273'>
              <zone h='93727' id='3' type='layout-basic' w='90344' x='0' y='6273'>
                <zone h='46870' id='1' name='Top Run getter' w='45174' x='0' y='6273' />
                <zone h='46870' id='9' name='Top Wicket taker' w='45170' x='45174' y='6273' />
                <zone h='46857' id='15' name='Runs per match' w='45174' x='0' y='53143' />
                <zone h='46857' id='20' name='Fours and Sixes' w='45170' x='45174' y='53143' />
              </zone>
              <zone fixed-size='160' h='93727' id='4' is-fixed='true' param='vert' type='layout-flow' w='9656' x='90344' y='6273'>
                <zone h='25473' id='6' name='Top Run getter' param='[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[none:venue:nk]' type='filter' w='9656' x='90344' y='6273' />
                <zone h='25473' id='10' name='Top Wicket taker' param='[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[none:bowling_team:nk]' type='filter' w='9656' x='90344' y='31746' />
                <zone h='25473' id='14' name='Top Wicket taker' param='[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[none:batting_team:nk]' type='filter' w='9656' x='90344' y='57219' />
                <zone h='8479' id='23' name='Top Run getter' param='[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[none:season:qk]' type='filter' w='9656' x='90344' y='82692' />
                <zone h='8829' id='24' name='Fours and Sixes' pane-specification-id='5' param='[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[:Measure Names]' type='color' w='9656' x='90344' y='91171' />
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Prediction Dashboard'>
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource caption='Wins' name='federated.0x6f7yq1q24nph1eejmz916y709b' />
        <datasource caption='matches+' name='federated.11w1e4e0p7t9mc15hk9bj1vrgi6c' />
      </datasources>
      <datasource-dependencies datasource='federated.0x6f7yq1q24nph1eejmz916y709b'>
        <column-instance column='[team]' derivation='None' name='[none:team:nk]' pivot='key' type='nominal' />
        <column caption='Team' datatype='string' name='[team]' role='dimension' type='nominal' />
      </datasource-dependencies>
      <datasource-dependencies datasource='federated.11w1e4e0p7t9mc15hk9bj1vrgi6c'>
        <column caption='Batsman' datatype='string' name='[batsman]' role='dimension' type='nominal' />
        <column caption='Bowler' datatype='string' name='[bowler]' role='dimension' type='nominal' />
        <column-instance column='[batsman]' derivation='None' name='[none:batsman:nk]' pivot='key' type='nominal' />
        <column-instance column='[bowler]' derivation='None' name='[none:bowler:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='3' type='layout-basic' w='90344' x='0' y='0'>
              <zone h='38750' id='1' name='Batsman Prediction' w='90344' x='0' y='0' />
              <zone h='32125' id='7' name='Bowler Prediction' w='90344' x='0' y='38750' />
              <zone h='29125' id='10' name='Win Prediction' w='90344' x='0' y='70875' />
            </zone>
            <zone fixed-size='160' h='100000' id='4' is-fixed='true' param='vert' type='layout-flow' w='9656' x='90344' y='0'>
              <zone h='33488' id='6' name='Batsman Prediction' param='[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[none:batsman:nk]' type='filter' w='9656' x='90344' y='0' />
              <zone h='33023' id='8' name='Bowler Prediction' param='[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[none:bowler:nk]' type='filter' w='9656' x='90344' y='33488' />
              <zone h='33489' id='11' name='Win Prediction' param='[federated.0x6f7yq1q24nph1eejmz916y709b].[none:team:nk]' type='filter' w='9656' x='90344' y='66511' />
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='69'>
    <window class='worksheet' maximized='true' name='Top Run getter'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[none:bowler:nk]' type='filter' />
            <card param='[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[none:bowling_team:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[:Measure Names]</field>
            <field>[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[Team1 &amp; Team2 (Combined)]</field>
            <field>[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[ctd:match_id:qk]</field>
            <field>[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[none:batting_team:nk]</field>
            <field>[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[none:bowler:nk]</field>
            <field>[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[none:bowling_team:nk]</field>
            <field>[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[none:match_id:ok]</field>
            <field>[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[none:season:qk]</field>
            <field>[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[none:team1:nk]</field>
            <field>[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[none:team2:nk]</field>
            <field>[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[none:toss_winner:nk]</field>
            <field>[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[none:venue:nk]</field>
            <field>[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[none:winner:nk]</field>
            <field>[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[sum:batsman_runs:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Top Wicket taker'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[none:dismissal_kind:nk]' type='filter' />
            <card param='[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[none:player_dismissed:nk]' type='filter' values='relevant' />
            <card param='[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[none:batting_team:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[none:batting_team:nk]</field>
            <field>[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[none:bowler:nk]</field>
            <field>[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[none:bowling_team:nk]</field>
            <field>[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[none:dismissal_kind:nk]</field>
            <field>[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[none:player_dismissed:nk]</field>
            <field>[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[none:player_of_match:nk]</field>
            <field>[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[none:venue:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Runs per match'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[none:match_id:ok]' type='filter' />
            <card param='[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[none:batsman:nk]' type='filter' />
            <card pane-specification-id='4' param='[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[none:batting_team:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-height' />
        <highlight>
          <color-one-way>
            <field>[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[none:Calculation_825847582505897994:nk]</field>
            <field>[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[none:Calculation_825847582513360908:nk]</field>
            <field>[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[none:Calculation_825847582513491981:qk]</field>
            <field>[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[none:Calculation_825847582513524750:qk]</field>
            <field>[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[none:Calculation_825847582513553423:qk]</field>
            <field>[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[none:Match or Batsman (copy):nk]</field>
            <field>[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[none:batsman:nk]</field>
            <field>[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[none:batting_team:nk]</field>
            <field>[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[none:match_id:ok]</field>
            <field>[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[sum:Calculation_825847582502653960:qk]</field>
            <field>[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[usr:Calculation_825847582369042439:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Fours and Sixes'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='5' param='[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-height' />
        <highlight>
          <color-one-way>
            <field>[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[:Measure Names]</field>
            <field>[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[none:Calculation_825847582521495571:nk]</field>
            <field>[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[none:match_id:ok]</field>
            <field>[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[usr:Calculation_825847582369042439:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Extras by team'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[:Measure Names]</field>
            <field>[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[none:bowling_team:nk]</field>
            <field>[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[none:dismissal_kind:nk]</field>
            <field>[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[none:venue:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Match Distribution across Venues'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[none:State:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[none:Country:nk]</field>
            <field>[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[none:State:nk]</field>
            <field>[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[none:city:nk]</field>
            <field>[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[none:match_id:ok]</field>
            <field>[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[none:team1:nk]</field>
            <field>[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[none:venue:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Classification of Batsman'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[none:batsman:nk]</field>
            <field>[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[none:batting_team:nk]</field>
            <field>[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[none:team1:nk]</field>
            <field>[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[none:team2:nk]</field>
            <field>[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[none:winner:nk]</field>
            <field>[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[sum:batsman_runs:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Classification of Bowlers'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[none:bowler:nk]</field>
            <field>[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[none:player_dismissed:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Four-Sixes Classification'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[none:Calculation_553379806899965952:nk]</field>
            <field>[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[none:Calculation_825847582521495571:ok]</field>
            <field>[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[none:batsman:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Player Classification'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[:Measure Names]</field>
            <field>[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[none:bowler:nk]</field>
            <field>[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[none:player_dismissed:nk]</field>
            <field>[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[none:team1:nk]</field>
            <field>[federated.1yjjyhj1kgk5hy1btlmtr1yfmxdl].[none:Player:nk]</field>
            <field>[federated.1yjjyhj1kgk5hy1btlmtr1yfmxdl].[none:Runs:nk]</field>
            <field>[federated.1yjjyhj1kgk5hy1btlmtr1yfmxdl].[none:Wickets:nk]</field>
            <field>[federated.1yjjyhj1kgk5hy1btlmtr1yfmxdl].[usr:Calculation_553379806932258824:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Batsman Prediction'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[none:batsman:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[none:batsman:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[none:batsman:nk]</field>
            <field>[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[none:batting_team:nk]</field>
            <field>[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[none:team1:nk]</field>
            <field>[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[none:team2:nk]</field>
            <field>[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Bowler Prediction'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[none:bowler:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[none:bowler:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[ctd:winner:ok]</field>
            <field>[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[none:batting_team:nk]</field>
            <field>[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[none:bowler:nk]</field>
            <field>[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[none:player_dismissed:nk]</field>
            <field>[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[none:season:qk]</field>
            <field>[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[none:team1:nk]</field>
            <field>[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[none:winner:nk]</field>
            <field>[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Win Prediction'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0x6f7yq1q24nph1eejmz916y709b].[none:team:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0x6f7yq1q24nph1eejmz916y709b].[none:team:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0x6f7yq1q24nph1eejmz916y709b].[fVal:sum:count(winner):qk]</field>
            <field>[federated.0x6f7yq1q24nph1eejmz916y709b].[none:Forecast Indicator:nk]</field>
            <field>[federated.0x6f7yq1q24nph1eejmz916y709b].[none:PuneWarriors:qk]</field>
            <field>[federated.0x6f7yq1q24nph1eejmz916y709b].[none:Year:qk]</field>
            <field>[federated.0x6f7yq1q24nph1eejmz916y709b].[none:team:nk]</field>
            <field>[federated.0x6f7yq1q24nph1eejmz916y709b].[sum:DelhiDaredevils:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' name='Player Analysis Dashboard'>
      <viewpoints>
        <viewpoint name='Fours and Sixes'>
          <highlight>
            <color-one-way>
              <field>[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[:Measure Names]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Runs per match' />
        <viewpoint name='Top Run getter'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Top Wicket taker' />
      </viewpoints>
      <active id='20' />
    </window>
    <window class='dashboard' name='Classification Dashboard'>
      <viewpoints>
        <viewpoint name='Classification of Batsman'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.11w1e4e0p7t9mc15hk9bj1vrgi6c].[none:batsman:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Classification of Bowlers'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Four-Sixes Classification'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Player Classification'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='7' />
    </window>
    <window class='dashboard' name='Prediction Dashboard'>
      <viewpoints>
        <viewpoint name='Batsman Prediction'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Bowler Prediction'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Win Prediction'>
          <zoom type='entire-view' />
          <highlight field='[federated.0x6f7yq1q24nph1eejmz916y709b].[none:team:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='8' />
    </window>
    <window class='dashboard' name='Cricket Story'>
      <viewpoints />
      <active id='-1' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Batsman Prediction' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='Bowler Prediction' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Classification Dashboard' width='192'>
      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
      8DkAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Classification of Batsman' width='192'>
      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
      M/zNmwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Classification of Bowlers' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Cricket Story' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nO29d3Bc2X2g+917O6MD0MiZBEESzHHycIaj6JHjKoxWTrJXtmTvel+9t3+8
      euXaV1tb9arW6y2r1utnv7VUsqWxV6ORNAozkidLHHKGORMECRIgcuqc4w3vjwYaaHQ3AhEI
      EverYvU956aDy/u755fOOYKmaRo6OpsU8UE3QEfnQaILgM6mRhcAnU1NkQBompb/N28P/Xf7
      UOfVKtkko+PeBW+iaRpFV5t3n9L31NFZWwoEQE5F+Zuv/yV//41v8q3vvlZ08OC9gSIByETG
      +cm/nFrwJn/9V39Fdk5ZyST4n//j63zzm9/gb//m7xj1x7jw1quc6h65379DR+e+MMwtvP3a
      P3H0M7/H07uaAFASHl57+wpSfJydT32S0akJDMDwnWv89O2TWBx1fOnXj+aOTcf451df53d+
      5yV+/tp3GfdF2bb/KTqrBa53d/Otb3yDp4+/yIEdrcR8QyTNzfwff/xFBEEgmwzzTx+cJlYx
      gm/0CL/2/GH++Z9eISUrHHnuV3hiZz2vvH6CSjFORW0Tw5MRfucLv8bg9Y8YUxt49uC2dX9w
      Oo8GBT1Ab7+PfV1N+bKmpPnlO+/y9Ge+wN5tzQwND6OpMv/8/Tf46p/+GX/05ZeQAE1TeOXl
      b/P0J36FiVtnSTq287Wv/Ql3z71HXech9u/dy1e++lUO7GgFwNmwg+3uNH/xX/8bb504h2Rx
      8vHnn+bTv/VFPvvix3jrx9/j8Cc/x5/+ydf44Gc/IJWVOX3yF+x44hM8d+xZfP3XCCWzfPDR
      RXZsa1nXB6bzaFHQA9RWmZn0JXDU2vJ1O/cfpdFth2ktXlMVBJMVk0FAmD7m5qWPaGxr46X6
      Km71erl89jbR0W6s1Y0UKf8AgsivvfRlfk1T+PG3/18+dDdgmbM7EIpx1O1CkAw4zQJpGVo7
      97KtuQaATz1/mPd+eYoIDmod5lV8HDqbjYIe4Nc//3le/tuv89GZs7zx1vulT5BMdFQb+dHP
      3uWdN98jDew9+hx/+Nnn+P++9QqdBx7DIijs2bcPt9OBKEKd3cC7759kZNIPQNw3zD+8/D3O
      nb/AiC9OQ42TxrZWzn7wPtdu9vLs04/z6ivf5Zfv/JyErQnnvHe86+jznP3pt9lz9Nm8EOro
      3BfaPNKJqHbtyhVt0hfUVDmljY55pveo2tDQUG5LVbV7d3q0gZEJTckktLEJr6ZpmjY6dE+L
      p2UtEQlqV69e1XyhqKZpmiZnUlr39WtaIBLP3yfgGdeuXL2qBWfqVFUbvndX6x8a0zRN03yT
      o9rNW3c0WVE1Tclqw6MT+XNVVdH+7q+/rsXS8vzm6+gsC0HTHj7f489/+DK2loO88OT+B90U
      nYech1IAdHRWCz0SrLOp0QVAZ1OjC4DOpkYXAJ1NjS4AOpsaw+KH6Ogsn7GxsQ2X3etyuYra
      pAuAzpqQSqU2nABUVFQUtUlXgXQ2NboA6Kwtcorz58/jC8WIRCJLOsU/NU5KLu49MokwSXn+
      5WPEUnLRsYuhaRp+75SuAumsMQkfmnsL/Xd6MEgmqp1mIrKBGqcNURLRsmnG/DFa61wE4zJd
      27cyMnwPwZ/GKsbxRbPs3dbEzd5B2mtgUm1l97ZapobuMe6NsKuzhbgc58bQMAcPH8FqXNo3
      PRaYQjE69B5AZ+3p7b5GXWMbAMFQiP6ePoIBPxMePz03rxMJRxgd87C9cwuaHOPO4BSjIwNk
      kXDZrYSCQdKBAYYDGSorrZz55QkEiwNR0gh4xgnEsoiiRiKZWXKb5KyM2WzWewCdNcbs5BPP
      P0NTlQ2rUSDom6Ctw0l7vZnbfiu7du1hPJRiS1M9oiCQCMV48bc+S9w/hWQ0gCagpWM4atuo
      b27B4XIyarFS57IxNS7gqm3CohpJhUTMpqW/zpV1jYyNjurJcDprQ39//4JeoKmpSWrrci/9
      csgmo4QzAjUu+7LbVF1drbtBdTYG9fUN93We0eqgxrp67dBtAJ1NjS4AOpsaXQB0NjW6AOhs
      anQB0NnU6AKgs6nRBUBnU6MLgM6mRg+E6awJNpttw40HMBqNRW3SUyF0NjW6CqSzqdEFQGdT
      owuAzqZGFwCdTY0uADqbGl0AdDY1ugDobGp0AdDZ1OgCoLOpKSkA/slhTp48yYenzxKOpQC4
      fOnSqt5Yyaa4cvUGy4lDX790qWDB7XJcvniWZEa577bpbB5KCsDNCydIGiqpdFj41v/8OxKy
      xu3btwBQVYV4PE46kwVNI5OZnoslv62RSadIptJogKrIyIpKOp1CUWff9qGbF/ngg5MMBxIA
      yHIWRclde+Y4OZuZLufWp7976zaKppLJZOfcM4umqSRm2gTsO3AEi1EsqNfzPXRKUSYZTmDL
      th3srDczcecKvria33Ph1PvcGfEQCgT4/O//MW+++h2+9JWvYcgEePX1D3nhyBbe+MUFzJLM
      rsc+wVaLl5+eHYRshs9/8YtUOyyAxvW+cb78pV/lg4tXaP/0M3z01g+5PByjpkJCsDfxu795
      nNd+8AOyKiRVM1/5vZdyDdBk/vEfXuYrX/sKsfFeftEdwJ4cZiKSBYOZl77wed594zWef/EL
      XHzvNUaCaVTRxJde+jxWk7TmD1Tn4aK0DaCpvPbdf+Dvv/ENxrNuWl0zL45GU0sLajZNJuKl
      d2CSF57czYeXeum+cIYDTz7LiQ8+YsfO7XRs287Fc6cBUEyVfPWPvjz98oOcipBUTRitboLj
      fagaIJn53Bd/l9/78u8jJkNokpG2pnpSyST3bnWTnNFoRBMHtlXTM+jj/IVrPPXkYURRIKto
      7D9wCIthdp4ZURDIyCoHDhzEssQp83Q2F6V7AEHkc7/9b9hZbymo1hSZt3/xEb/7B3+I7/Zp
      7mQ1tux9kl++/Ao+s4mXnqvmhiBSXVuHRRLY0rkbEoPs2L69YEHru9cu4AkE+Onrb+CfHGXA
      Gy1qgqfvCmNpJ//mj/6Yn7zycoEKc+SZ5/nuj97BJEk0uCzU/9oXSCWi/Mtr38NRMzvfzPOf
      +RxPJmO89ePvYatuZFeTcyXPSucRpKQAGIxGJLFwxi6j0YggSjhNGi9/+9uQCtL1XBuCZGJH
      rYkRsRVJgI9/7Dm+99N3sdrMtO04yJFmCYNh7tdX4/awnz/54z/ELAlEPfd47/I16oxGZm5p
      NJpw1jYz+sb3+MexW3invHx6pg2A0ebGnpmi8sCLCMAv3vwx/aN+MqpEncvCHaMRQYCT7/yU
      O0NeMgq8ULWKsynpPDKseDxAJp3izR+/yuMv/msaXebVateCpJIxXvv+D/nNL/0edl2v11kB
      K1aMB+/coGn3U+v28gPcunqJQ89+Qn/5dVaMPiJMZ1Oju0Z0NjUFRrCiKHznO9+ho6PjQbVH
      R2dNOH78OG+99RYWS6Fns8gLtH37do4dO7ZuDdPRWWtOnDgBgMVi4fjx4wX7dBVIZ1NT1AOM
      D9/j5FteJjJODu3byY6trQtfQcnwve//gM7tO4gmFY4fe5LF1vzQNI3rl8+RUQ2omsqBw49j
      mdOSZGSKiZBIR1stA3duUr91Dzbjffx1OjpzkNMxLl26xLWrVzlw6DC79+4vFoCmtg52NZrR
      Yg3s2NqKb3yIvpEpKpxu9mxv5oMPzmCrsNDQtoP2phrQNIw2J0ePPsapt35GKCMzfPs2B/bv
      5ebNHjoaKzl3awSbKNPcuZfmWhcxzz38WTsfe3Lv9F01hvpuM+kP09DWSWz0OhfvJlGfOsCF
      Dz+g0Z9i3+4uQhMD+EJRWrftJhMaJyPLTIQVnn/y4Do/Sp2HEYPZzpEjRxgaHOTI4UOoSmYR
      FUhTOXv5Bk888Tix8Tv4EimSioHHn3iS65fO5Q/zTY7y0YcfkjQ5cRlU+voHABgcHCQd9UNF
      HQf37+Zmz00AglNTVNXVE/CM8/prr+IJRrjcM0hXVxeXzn5ES2sbnTt207m1nS3t7Rw4dASX
      MU33vUm6unZy7vQpxu/dpnc8xjOPH1i7J6bzSHP3yunFbQBhWqExigKyCqIozezIU9PQgrtC
      xGhzIpBLQtM0LT8NncEw09HkyjUtrXhGh3DXNdFaV0VWVoiEQ3g8Xg4ffQxBlNDIZaCKooim
      qmiKTDgUwuP1c+ToUUSTjWeefAyDuLxF1nR0ZpBlubQAmCvc1LisIIjs37WNc+fOo1W2UmcT
      mBju59zZM+w7/HjuYEGkqbGRXYeeot6cZGAySkudi6vXrmGyOjDaXFQ7rYiSkfqaagBs7ha2
      uCXOnb9AQqigylXJ4T0dBEJh4okkdncrWnycwbEpdu7ZS/flc8QFB/s6mwiGwiSSady19RgN
      +suvs3yampoA6Dr8dGEkWFEUTp8+XdYNKmcinDxzi489/8T6tFRHZxU4ceIEx48fz//OZVlu
      UIPJqb/8Oo8UBV4gQRCIRCL5wIGOzqNAQ0NujEhlZWXRu60nw+lsakoOiHnrlb/DEBtdtZuk
      ZY20rOG0lNe4fDGFGntxenOp+vl1Q2xhKr3yAS/pRASzbeFRY5lkFKPFjiCUN8DLXUdJxznk
      MiD6/UtuUyCVxm0pnWpebl+p+qXUxd1uUkYDJpNpye0DCIfDuFyuFR+bzGRoztyl3KMt946U
      25dVNPb+6r+ltbV8MLekAAgD7/OEtbfsScvFH5OZisrsbrSUPeZUX5wnOiuWVD+/7tXrh/E0
      fmbF7fQNTVHTXr3gMf4RL1VNLkSp/FiEctcJj02yzzLJ4XBkyW0645lib139svaVql9K3Y/M
      JhqOP4O7YnlDR0cG+tnaVLqNyzn252fO8Nmtvyz7cSn3jpTbF0kpTHm/sKAA6LlAOpuaBQXA
      G5PRNA1vTEbJKoQzGpMROb8/mFDyx4XiMmq5C+nobFAWXCRv2JPG3GTmXlDB6dR4Z0TmULOF
      M30xrBVGxjxJ7A4ToqrR6DJQWaGvuafzcLFgD7Cv0cQPL0fZ3ZQziqJpFU1RwGAgEpNpqDJj
      n47GToTlhS6lo7MhWfCTbbQYeKzdikMSUKwGfnOvmXg8S4WoYKs24TLmXv6sqntSdR5OFhQA
      QRDY15zz3EgmA9VAtdlEm3t5bjIdnY2K7gXS2dSsm9V6eSSJP148ZbmqaWga3PVm8nVZRcMo
      5dSr21PpknVzy2n50fU/DcViZff1hEJFdf5UGllTOeOZyperLWamkknOeKbyZYCBaJSUrGAx
      5GIavtpaGoqu+GizbgJwuNVaMhA2Ec4SS6sc32HP153qi3NsOqgx8zu/bm75x9cf3Y6s3W7n
      qTKBMKBo3xnPVEHdQuUmmw2jKNJkyz3HCfPmU211v+UcNFUhFSv+qs4lm4qRjocRxPJCl03F
      Sl4nm4pD+WC4DnCqP1E0plzTIJCQySgap/ri+XpvTKbWnnuFJyJZfnknRjSlUmXL9WiJjMpi
      E/zoAjAHTVVzL+kCVFQ14BvqprJxW0F9aKI/X2evbiabihfUAciZFMPxGOlp9WQpJOT1dS/3
      3O7F6SyfCqEoCqIgFHwAhkdGkLMyBmPh6zS/Ts7KjE9OlN0fi8c5ttdWlAohqxrnBxM83VGc
      EnNsTvpDPK3SO5XmcFsuLyySUljsSZcUgCF/BmWRF2E5RFIKW6s3fvcqGow4apoXPS4dDxcd
      t5Q6NR2lzZLl8AIqzXzOLENYVoPdXTupdrvL7h8YGqK6yo3T6cjXHdi7h2vdNzmwd0/BsfPr
      rnXf5Ndf/JWy+0cnPavxJyyLkgLQXm3iaWvppKP7wR+TebMnWtIIDsQVdjeubGJdJZvGN9Sz
      omsAxENT1LTvXvF1VpOFjOC74ciC9oHO4mwII/iDu3EmIzKhpIKsaFSYRf7xTIDO2pxg9HnT
      NFcaOdUXp8+bprPWzI2xVP4asmCkpm1jvbirxUJGcFZVi3qI4ViMeFamwmggJStMJHNrsCVl
      BQ2NWDbL++NjCAgomkownaHVnvvY6V6geWiaRiCuYLeIiKKApmqYDCKKouFPKFTbJaS5+pqm
      kVHAtMzB6kfarGyvMzMWypLKqmyrNRfpd6W2N4MXaCGMolgkHFsdDpKywlaHg/FEgg6ng3a7
      g9F4HE3TaLXbGY7FkASB5oqKAq+Q7gWax82RBFlJojKkELNbCfmSHNtm4+SdGA1VRowGgTsT
      KbbUmDCbJbIpmdsBmSariGQxsKVSt7F1NjYLvqGBtMaznRbCvgSnBhMgKxwDRIOIkspyJ60R
      TCoExtM4JLCZJVRZ5fRQmtpKky4AOhueBd/Q/fUmfnknxrYqAy9stxKPZUAQqLMJTMag0SUQ
      TYlUOYwE/CkObLExFswiahqVrsJLl4sEB+IKyazKZEQmmFCIp1XGwzK9U+n8esF93gwZWcNk
      ELgxlltvuHcqna9brUiwnEkuyZhezFW6miw3EhxMp9lVWbWWTXqkWFAAKp0mPu6coxdW5IzS
      Xc02dk1XdTWAqqrclcBhFOmqM9NVV+zVWSwSvH36nBnd/1hnBSOBDIoGx3fYC2yC5koj2+vM
      3PNlONZZsWo2gMFkXZIXaCUep+XGAWotlmVFgieTCc5MeZhMJlBUjWAmTXcwiNNo4l40wg6X
      izvhMB0OJx9MTtBos/Hd/j62Ohz4amsJLBIHmJycwun0YLPZCurT6TQ/f/tdWpqbZv/WkVGy
      2SxGY25m4/6Bgfy+0bFxamuqefPd92isr0cQRWLxeMlAmKpp9HszJDNagX051xGSkTU0cu9T
      MKFgMgjrFwgTRZGd9eu3RtjDTFuFfc3jAAerq9nqyPnpxxNxsqpGu92OQRTyAvNUXX3eAJ75
      nTCbaFgkDuB02IviADPM9+tbzGbaW1sKFqWYu//A3j1099xi184dSJLE6KSHY1uLA2EAz28v
      DnxB6VSZme37DoStN5eGk/mhlnOl2hOV0TT45Z0YzZVG/vFMgGRGI6vkvghZJacirXcyXDLi
      K+oFFDnD4JX3sbsbAYgFJrA6q/EN9RALTGB3N5IMjELb6nlaVE1jMpEoqPOmUtiN+lzyS2Xd
      IsHBhFLWBphxg84wI8kzKtBIMJtPgJvZb5Rmt9fbDWp11pRUlXxDPQX187fDBhGYXNa9FrIB
      7oTD+US2GVKKQl8kwuS0/9+fSqNoKuOJOL3hMIqm0ReJ5H9VTeN2OJxrvx4HyLEWkeBy06LM
      DYRB6R4glFTIyDnD12QQ8tuSCIqqPdLp0Itlg86oOjNYDRI1FktJFailIvd/2lZhRxIEWisq
      MIoioiDkVaClcPP27SIbACASiS71z9owbAgVaLEeYEu1iVN9cfY1W/I9wb5mC00uA1aTiCGa
      3RCpENl0PN+OVCzI2K2zoGlomspYzxnUdHTVVaCJEiqQY54K5E0lMYki3mSKWuvK01H3dHWV
      tAHeO/EB17pv5sv3BgdJplJ5nX5weBhFUZAkKW8Q3xsYZHh0lKaGhrJG8AwjweyK2z6fDSEA
      C3FxKMlIMMuNsVT+i98zkRskMxKUMBmEVUuFWKkb1GiuyAuQpioExu6iqSo17bvxDfVgdFUx
      HO9b1WzQtFKoVmYUhavzVCC32UxaUcioClf8fqpMZu5Fc5NzbXM46Y2EuReNEu/oWJIX6KnH
      SxvJtTU1RQlxc8tGo4HOjg5M0wI6s08UBfZ0dTHm8ZU1ggHeuBEpSIeeqy3MbHuiMqoGr10J
      YzeLGycdeilxAChWgWaodUi0VplorjQgzVsUw5xYXzfoyI2TJQUl7BnKb2uaSjadAFUlGfGT
      SUTQDBJt7uV5gd4eHS36ys8QyWR5pr7wS2wxSFTPU4HGEwnMkoRJlGixVdBosyEIIE2rPjPP
      c8JiWZIXqBzJZBKvb3bax3A4XFAOhZY+I14pKq1SWS/QzPaMB+hUX5wDLZaN4wVaahwASqtA
      P7oaJqNoXBhKMhmWsZoE/HEFm1Ek7VhfG6CcEQwU9ADjt8+haRr+kdu46rcwcfMkTHuJloqi
      qUVf+RlkbWl/d0ZRp3uA3PHpaUPZYTTyv/r6SCky4WwW+xKN4HI2QDAUJpudVVNkWSksKzI3
      bvYQjcXQNI0TH35EMBii0uXig49OE4uvX4Bxhg2hAi3mBh0JZpkMyyiqlv9a2UwitybT1DvW
      /0+QM0mSkeIJbtOJSL5eU1XSiQiapmG2OQhPDSJnksu+V5XZzBZHsb4NuaDa/DhBMJ0mragF
      KtA+t5t2ux1JFLji96Oh5Z6lIOSepyKQURSSytIG35SzAQCaGmdFyOv3F5RDkTCdHR3c6r2T
      H0NQ43aza+cOum/dJpHOLssGCCaUvEp0YyyFrGrc9aTxRGWmIvLDMyJsISP43GDhSzMRzqVN
      V9slEhmVQEJBqVzX5qKpKmqJl0VTlXy9NufrbLa5iHhHSIR9sOh/ydIplQ06mUzks0EhpwJd
      8HoZT8TxplI02ypotFm5M+36tBuMxGWZjKoiZ1dmZHp9vgIjeG7kF2BoeIRKp4tQOIzH6yMU
      DiOKIl6fn1A4TCab5diOpdsA8bTKb+yftVcOt1pxWSTiGZU6h+H+VaBIUmE0tXoWdzCh4IvL
      OC3F1/TEZBJpFasxp8d7YzKj05I+EZFpqTLSUmnEG5NpdBmRhCyKmpuj1BfPfQG6XBnkiG/F
      7UwnwiSXcB1VlUvODi2IYr5eUwUs9io0VSUZ9eMduEFotAd4fMXtXC4Hq2tot9sZiccYjyfI
      qipzpzLri4QZisZwxOOLDolcqREsyzICudQJNMhmsvTc7p2eHWThCdbm2wCvX58ViNFQlnqn
      AU9UJpHNfXzGQ1nKz+Gdo6QADIe3Eone30ijZCaDLxal1V08Pbh3pPQ5vZMT7ExM68YinB6Z
      U9/QyHA0Vz8ShV5vrg7gs9O3eDflZSD1rSW3MToRw9FYbMyl1ATB6AlEY7FRPfccqRrCqZNL
      rwe2NEDK24l/axfvh5euCqXadvP+tFCFYmEq7a6ifXPrFVVDRePe9JhdXzREZYWTPlFEnk4u
      9MppnJ0qVrMFEHhWU3lSVfGIaXZ3bVnUCF5qHCCRSBb0CEPDIzQ3NRIMh7H7c1/9rCwjikJO
      GLTci0wZJSiaKrSFrEaBLdNDbaciMkZRIJrOHbOrwcL1sRSHyv4lOUoKwJH2Do5X1S5yamlC
      iTiDPi8H27Ys+ZwTt3s43lVsVJaqL1V3/vzP2fZ0+5LvN3XLR/2umqJ6/0AQV6MDg6X4sZQ7
      Zzn1gTth0hGVZnHxccd55sjieDBCh7O5aF9B/TzZHQ9FqHO1FuybinkwCSK1FYXt84ZuLalJ
      S40DhCNhnnr8aL5sNBpIJlMF5wgAGgRDISqclWQVEITSPYE/rhSoQCPBLJ3TqnMoqTAayuKN
      KrgrJE72xcnK2v0JgI7O/TBfBSrXA8xFEASC4TAjY+N0WG1srTaWtQFGp1NiZggmlLy6nJFn
      hcZdIfHu7RjuisUUIF0AdObh8weQ5dJuVwB/IIiqaiRTqaJ9wVCIKY83X05n0nRsme2ZY7EY
      DXV1JJMpGupqiccT3OnrJxAM0n9vAKPFysjW8ranJyozHCicQbDdbczva3cbOTeYYDSUxReT
      6R5P8dVF/l5dAHTy2GxWktduwgLLPzkAmVFmhuJ4Uylqp9OdG4GQ91z+2JlytrqawYiXCrOB
      OzdzbuLe7txvR2MVHY1VHN3dQUaB/xUsnG8JIBJP4aywgBPuBHN1oVgSv7GO90PTBrsL3g9B
      uj6MucJF86egSVWw28sH7kAXAJ05JBJJfj0Sod5abOCW44zHs+jULJejUTypANuqFl5/rXd4
      km1txaG4Xp+fbbWF9d1TXsZtu3A7thfU+wI91DTkbMRsOkFsgWxa0GeH1tnk6AKgs6nRBUBn
      U7MpbQA5LTN1qzjim45lyCayZBIyJpsRYU7WaSqcyp+TCqewuCz57aGzo/nyTB3kYgFzj42P
      J2AZIQCdhUnHgiRChfOJpuOhfJ2cKfZUzWdNBODi4D1CZVJ4FU1FVVWM0uytr44MFRyTymaw
      GE3cnhwvWZdVFQTAIOa8FZllzqBsMBtKBq9m8N8L4mp2YDCXfjzzg1wLleduB6QwK1lLdjxY
      OrNl1J+bcTkjZzEZZgfDZOQsnnChoGfkLMlMClEQmAp5C84JG1aWrrxSEukMvcOzQ0YnAmEa
      3S6yikLv8GS+DDDqDUK1wNxl5ZVsBsloBkEgOHYXR235BbJnKPk/PODzwJS31K5FiaVTHN3S
      UTYSPBUJ449F2d3UUlA/N7o7E+0tV9fnmcRsMObTLV45P0D6vlq7/kyFvAQj9/ds3fZK9rbv
      KqqfqeseulWwv3voFr9y+GMFx3YP3eLwtv0F5ZlzLoVuQXDsvtq2GtjMJnbO8wKVK2cVhUlb
      JTbXbMaCnEkhZ1PYXLUkQl6szoW9TlBGALbW1K04FWI9UTJKSZWmHDFPfMEeYC2pr6yluer+
      7t09tLRUhY3IqDeIski2qS8SY+c6tWeGR8IGkEzSA3uhdZZGS20VnY2LfJGHlzdjRnhyAFWe
      FSpFzmCylR6nUI5HQgDWAu8dP6KhXERUXxd5I+Bq2Iq7eTYQJmdSjN78kGwiRiLsRcmmgYML
      XmNTCkA5L9AMkYkoW59pLWsE977Tz0zKrpJVSPiT+W3JKBGdjOW3IxNR1KyCaJRW7AUqZwTP
      EFhkfbOlcMnnp8pcPL1JfyTCtjnjBGbKGSW3RkG5/QBTosCiifkUG8HDngAA4XgSV4W1oByI
      xqFEArCrYSsOdxMmm4MK9+IDPDelACzmBTKYF/7fqmx1FXh5Ol/Ykt+u31VD/a6a/HbtDjf+
      /iC1O6pX7AVqqqovaQTPsBo2wpGa6rKpEPNTHpZavmy3c2F4aFEbIJHOcGh7W0HdzrYGeocn
      88bvTNlmMdFbQgVKRnxkkzESIS+JsJcH0gMs5AYNJuJEkgk8kVmXW+/kOMlsBqvRVLKczGYY
      9vvy29FUCllRaJqeBXm5blCd9WctbIByKpAoGVGULBHP0AJn51gTAViuG/R412GDFVIAABl3
      SURBVO6CgS7zyydu9/C145/Ib7+472DB/ofJDbqWhOKRgl4gq8h0D91i1D9BS3UuD39gahgg
      X5dVZN66/Ataqhs3XBxgRuWZCITJyAqTc341oNHhwxSZTY/WVAV7kx2jVSNtcpGKyno26P2y
      VkbwSuIAMy9vOVRNLasiza2f2Z4fP9iocYDOljrujXtpq8sN1Wyrc5NVFI7uPsX+nTk748KN
      EI/tqyzYjiWURbNBN6wAyKpCnyf3NRgLBYq259ZlUtllxQHCY1Fs7vJTBCYCSRr31ZU1ggfP
      jBKdyj3YZCi14LamaCSCue1kKLWiOACw5jZAOSN4/mIcM8ZvXyRC57Qx/E99d+l0OumLRGir
      sOfLU6LAaGDxOMDMF39+WdU0ookU6pxB87KiUlNlprk+tybwwGiyaDsSkym8YjFrEgluqSo/
      qBrgwkB/gQ0AxekQtyfG2dnQxFgwQEdtHWaDkbP9d3lux66C3ye3bcewzDiAqqhIxvKGrmhY
      OEdQlIT8+aJBRDSICIJA3c5qfH0Bajrd+WN8QwFqt7vx9QUwSms7bXkyk2IiUOwpSiwhJ2aG
      5RjB8+vnLrg3d92By3Y7E9ISbABKR34VVeVa3wiKqlFhMTHmCzHiCQD3F6ydy5pEgn948dyC
      RvBjW7cVpUIARYPdW93VKNNTeLS6q+n3TJX8FcXlJbWKkojNbS27Pxla+IUxO8z58y2eODa3
      NT+OdWZfqV+jZFyRF2gxREHEaCgWskgimu8dZtSomd+0nMUX8ZOWs4Qty5+4azUpZwOomkYw
      lkBVNTKyzLgvhKKuzoN8YEbwYsiqwt2pScaCuYcgKwqjwQB3pyaLflfrYSyVZDBJdDKn6iSC
      KTy3fczEBeK+0oK/GiwWB4inE9Q4i3vfhsrasjZA99AtPn3oBbqHbuGqMJa1AZKyUnK1mmB6
      ae6HUCzJVHBhIzudlWmqmZ3lLBhLUOmwoaoaNwfH0TQNo0HCG44iKxtYAO6H3qmJgvLtyXG6
      GpvprG/gbP9dOusb6KitIxiPYTEauTYyxJaaGsLJBGUmEVgRCxnBokFEMuX2SQaRuq6afA8w
      emkilwYdSTN0ZpRUJPeChIbDua/zCgJh6xEHKIfVIJVUgd4eHWUgmvugTSaSDESjRb8Bswlt
      12NMlZlOMRYIYndXYdtGwUxualWQKXfO1b1j+2P5454+GERRZODsiv+uByIApWyANnd1gQok
      qwqJTO7lCcRj9E1NMh4O0lzpJjVtTCUzud9FJhS7L2p3VC+YDj2jAsU88YIeIJPI0nKkMX+c
      pdKSt0+MkpGpwP17gVLZhb+2892gM8z1Hs1sZxWZNy+9j6zIjPjGkRWZCkNlWSN4MBotKQAG
      UcA6PYi+ymxC1TQqzSY0NJ6qq+Oy30dFXS0JdyWuvaUnFPZcv0HN/n2L1s+UPddvoGSzXO+N
      kM7keoL+4dx8Qam0wthUilRaQdVgx/NlH1eu/Qvvvj+GA35s5tKL5vljsZI2wKvnz3BnTi8w
      FQmzqzH3uWypcnO8azf3vFP4YrkeAMBqMmE1GlGyy8sGDQ2HF9wfmYjiai6fVBUaCRds7/hk
      R1EPMPc+kfEoFTVWJru9/MaRtcsGraxwLuoGzUxHTo2SgYaquoJxGemK8kZwORUorSg0TM8S
      502lqLdaictZ6i1WKoxGqmJmzGu0Ztn+nc686/PZIznV78NLAb78r1r58FKA/Tud9+cFWilW
      o5EKU2kBSJoyJevNRkPBOZIgcncqZxDdmZrEdruH8XAQSRSZmHbJxdIpTAYDSMKys0EXS4WI
      TsXzas585qZCCAJFNkBlW27QhsFqyHuUKqpt+I0LC95i3G8uUHBOzzARnOJQR+6reuXeDWxm
      G9FkjFgqTsO28vpZORXox4ODecEYiEYRBBhLJJAEEatBYjKRwJFOE/X7MY+Vti+iPh+BEvvk
      dOl3ZSGCkQzvnfYyNpUiEM6w/1MLH78mAlDrcNJcxhVqkCTeunG1SAUyG4wF5zS4KvMq0WSk
      8D/WajSys2F2PVpTJLTqkWCDxYBUYo5QyMUJIhOx/Hb7Uy35HkDJKFgrczEG/70goiRQUW0j
      NBpZ1L26GIvZAB/2nCvdS2ha/jxFU7EYcx8aAQFREHBY7aiqisloXHIcYAazNDtDtd1gxGYw
      cLi6mks+P1ZJ4lB1DcOiiMFkwmQpHXsxmMwl90W8Xoav38iXPfcGUBUF3+AQvuERxo4lqXIW
      9i6CIGAxS3z5X7Xy5knP/EsW33vRI9aAUirQ33/wPiduz666Mj8uMKMCXRi8RySV5IM7txgL
      Bmh0VZKpW711t2awusxlbQCDWcI4PX+oZJIKeoBEIEnVdA9gshlJxzL4+gNYq6ykwmubsFFO
      BTo1RzCGPaNIQk4QFTU3A9x4YJIhzwgdTpWXlhkHmN8DNFhtWA3S9FoDGonpqdetDgf26tJx
      AKuz9D53SzNt82yD5l27EEWJVDyO1eLDbivspbNZlXFPkr6hOJPeFOU/Fzk2jBdoZ31jURxg
      pvy986c5MUcFEgUBp8XKnXSaX/b20Fi5aynZtquGqcKEtSr3xTLbTdTurM73ANlElsi0i1TJ
      KAiigGiQ8Pb6yQSz8NQ6NnSaqjmCkZGLo7HpbIZgPIw/GoSKpU+KBdBgsxb0AFsdDuxGI/+9
      +wayptETChFFg32LvYpLQNMY6e4mMDJKaHwC9wsmGmoLew5F1cjKGq//YpIJb4oXFrlkSQFI
      N9VxIrn06OFcMiaBeI2TckpJyiqRNtrxzNvvaarlxJy6uWWxazs4nTinVxxsTaexmkxkt2+h
      NhikY1cnMWXpiVydDWksSvmV7dPVGUyiAUEprbLMPT9Vn8aimpjpATo70lic0/saZv4ejXQ0
      Q2wiQfX2RqKR+3u2lfYGorby83aW2z+3vs7eisuWy5+pTDRgNpqoi7SyNbiD1i1tDMcTeEpM
      jZhOd3LDXKymzK0PZzLcNRowCCIHd3QCEMvKpKoqkZ0uTGXiAC5HJbYS++bXu5xVWJ1OUlU1
      +CrdBASRiyOFKlBFY4Zmp5G6uIxwN0pNzcK2oaAttiqBjs4jjD4xls6mRhcAnU1NgQ2gKArf
      /OY36erqelDt0dFZdTKZDJ/61Kd4/fXXi9Y/KzKC9+zZw7Fjx9atcTo6a82JEycAcDqdHD9+
      vGDfw60CaQqx2NplX+o8+pQRAI1XXv42Fy9e5M033yGzvtnGJem5doXUfA+fHOfk6UsPpD06
      Dyc/fPWfuXTpEjd7+4GygTANU4WLo0eP0nP6bUaCaXx913jiice5cvkK+/Zu5b13L1JTW4Gt
      qplqc4a+8QCVVTXs2dkBapb33n2fyqoqDHY3+zqbOX/xCooKhx57kt6bVwl7RmjZ+yzbW2o4
      c/IXWB2VBIJhqipdpFWJI/s6uX6th2Q6xZ4Dh7h47gyBtMqe3bsYvn2dtCqyrbMdz/gwly6e
      R7JWcXDP9tJ/jo7ONILRypEjR4DcTNJlVaCIf4r333uXsZSNLW4To6OjAExMjKMqSUSTiyOH
      DzPQf4fBe/ewV1Wzfdv0TEWaSloROfrY44zfu03PpY/ImquotCqcuXyLm1fO07r7KTqbp2dN
      jiQ4cPAwyUScg4cOE5gaRZKMmM0G5LiHnnte2tq3cPDwEYypKYKyg8cffwy3w0pNQwtHjj7G
      2ODdNX50Oo8CyWiQS5cucevuIOc/Ol1eAJzV9ezv2koklotaiqIImoai5PQQURKnB6IIHHnm
      BZorrbzx8zfz5wuigAYoGoiCgNVaQdPWPTx1oBN3QzudbfX5gSyCICAIs78Aty+fxlizhT27
      OkHVkCQBVdUQRQlNVZiJvOaGQ67BiBidRxKro4ojR46wa/sWJEkoJwACHR1bqW3p5LlDW7nV
      N8bu7e1cvnoNm8uNKNloaa4FQaK9rRnvxDADw+N0dHTmr+CfHOPC+XPsPfQ4XUeeRQ6OcO/e
      AIl0lvb2wjntZspzf7fs2I1n4BZDUzEaap3sP7ifG5fOI1vqaXQoXLhwgWBcob21seBcHZ2F
      6OjoyG8/9syxwlQIRVE4ffr0yt2gaoZTH13i2LEHkPmlozOPEydOcPz48fzvXNbGDSqa9Jdf
      56GgwAskiiKpVCofONDReRRoa8tNuFtXV1f0bq96NqimaWiatuy5enR0HgT6W6qzqdEFQGdT
      owuAzqZm3cYE9/ff48ML1/Pl1sYaPvb8s+t1ex2dkqybANy8fZcfXZ8dC7tr6LYuADoPnA0z
      K8R6cvbEW0SuvpYvm7a9wPFf/+0H2CKdB8WmFICEd5CntDP58jnvCmas1XmoWb4AaBq9N85j
      qu4k6h3CWFGJJCeIZwQOHNiz4dLS3jtxirdOz86WdrSriboH2B6djcWyBSAwOUwkrSAGJqmt
      bkfOBMFkp8GkktI0zKqKOv1vLvPn8Fc1DXkdVnccnfBxNzY7DtQ9HqSmtjD2p6nqurRF58Eg
      imLZwOyyBcBZ08gOo4FAykQ0OIrJXoUkx/FmBBoEAcTcckHzbyjNK4uCgMGw9hrY/HaIgoAo
      FvZTgiiuS1t01h5FUeju7s6XJUli7969ZY9f9v+6wWjCVdOMC6CleBklfZYtnYW4fv06c7Nv
      9u/fn59WcjVIJpOM/P1vsr85t37D+XGRvX97s+zx+mdvA/L9v/o6wnTSVkKWOfLf/nLBr9jD
      xL/9L9/F0ZAbNxIc7+PUP+/GuMrrBzgsElXTk+ZWmBcWLl0ANiAOTWNPRW6B51Amkx+F9yhg
      MFkwWe3T2+UXKlwvdAF4iPmXn/yMbDK3iISiKrzwmU9QVVW1pHO/95NXSKu5wKQqq3zhM19c
      dFX1R4VsJk02k0YVzaUFQFMVblw/z5UL3fzG7/8xVeUnUtZZBn/99y/z8wuz6x588fmdfOX3
      Xrrv6/WdvEm7NTckNBwL4Tnq4b9/8xWi2Vz3r2RS/F9/8hLBYJBMZna1ld27d/Pjm99Has3p
      4tGpGJ8MffqhE4BUKsXHf/s/UOHOPYNsZIo3/uEvFj3v+vWrBPx+bK66Mj2AIBD0BHjyuY9R
      Zo2INePS2bNEL13Ll+W6Gj7xhc8VHfeD17/PP136Vr78ZMMx/vxP/+O6tPF+UUUT1rrZqVuU
      Zaxq8MO/+XOc2dxCFMmsyqEv/eeSx/WMxclUtOaOi8jE43F6//GrHK3yAzASzDL+79673z9h
      Q6FpGpKjMf9MFWVpLpjOLa2Mu2pxV7rKCICmEYlFiPX30rJ1G+u5+kTUH+C41ZUvnwiVnlNe
      ERTs2+bokEv849eLEz/5CdHTs9Fm13PPreh6Dt8lnqrMraPly8hEo4uvtTyD1ShQac39J4YT
      j449cb8MDQ3hS2RJx6PlbAABRVb1XOklcuPKeTx3Z2eoq9t+hNToKAeGR/J1t8bHQHCWOl1n
      nXE6nPQN3sTuLKsCQWWVC38kdV9+/ffeeZcrPzydL1vbnGw5srHdeFdvXOXq3cv5clfbLp48
      Wjyw/9KVa1y7dS9f3rtjC9HbJ3nc++183fnsHwIPn+HU3d1NNju7hNLevXtX3UW5ERC1DP39
      w+w8dKy8F8hqtWEIxUhrsFzTSFM0uuq35ct+0/pMYOvz+Rgenl0Uura2OFBXjst3LvJe/Gf5
      cqg3WFIAzl+/y1u9s2kTseQd9jx873pJrv7H/5tDYk5VuheL0vjyd2hoaFjSuR//4r9HtOey
      rOLBSd55+b9uSKNaVWVEWzVf/MJvElcypQXANz5MSrTT1eXiYZL/qx+8wa7ev8yXr7t/C6qe
      fIAtWpyxsTGmpmbX/21ufnCZqVbJgGP6i1+xzNQQ0V6HrT5njGbUlRmNmqbx7f/0+zRX5toy
      Hlb4g//8nRVdcwb/UA9pUz23b/VQVV1TWgD6hkdpNMn0BhzsWP0VSNcMUQCndfbhl1nmd8n8
      4PuvMjbQny/XNrUAy1tFcTE+eP19hP5kvjx48B4PPjz04Gnwf8hTVRUAnArc36KCpbBU1nPu
      1HmeOv4C4UCwtAAYtQw3Bv0ghohnj2BfIyG4ePo04z/+Sb4sde2koqFxbW52H5iMRvZ07cyX
      I2mZSHKBE+4DSRSxmGdfeU3caAnljxayrOCucXOnp4eOzh2lBaClbRsVVY0IgoBpDV2gYY+H
      gyOj+fJ1qxU2kADolOYzf/ZJRHduO+5N8JO/+JcVXe/PfuuPaK1uAmDIO8rf/vRbRceoqsq/
      vPIqdnPO4Ipns3zst35j2feqqm2iNZHG7x3n9EenykSC0ei/3c1UMEbjlq41FQKdhw9TjQFb
      R+5FVIwyK51brclZT9d0gpycLj0uQ1EUKrvv8Oz2XI984u5tuA8BANCySRRTFYcPtZcWgIam
      FqTs29TUb0PZAD2yz+djcHAwX15s8WMdnYUIBfwYXU25BVxKHiGIHD3+Gwz0D1Exzw2kaRqe
      yXEqaxpIRYMYbS5EJUVCFnC71sbtde2jt9nV8//Mlh0vQvtj9329kGzl+94D+bLRqgeoyvHp
      3/nfUcw5fScR9vHGN/7TA27RytGUNG//9IccevqTpQVgcuguP3vvJA3V1SSzYJ7j586m4hgt
      Vvru3MZgsKBqfgRNQ9A0nK5dZbMmVC1NOPqjfDlj2w4s7UsuCLkc7xkM0tK7JUXOEJqYDVxl
      q6sx2uppe+Kz+bpQMkOU+JKvuZkw2OuwVOfm1Fck67LUne/+l7+kyZH7uEyEQnzu//wPa9LG
      +ZwetDEZz32M7wYVXpy3f2vXQT5f186Uv0wqRH1bJwd3T5IU7LjmBXkkg4HJiRG2bG3G58sg
      ZyOAhBkVWdMQVBVVKxz/q2kaiCpNj81mJFoTctG4YU0rHktcuk5DW8JxqqbRapb42WNN+bqz
      ZkioWsGceJqmoqnzxwlruevN8cpomlayLUX3VVXUeddTVRVVUJl7Y03TULUS951XpygKGsV1
      E7Ep4vFcTlA0EeMJRWH+mDxVVYui+aqqwhLvUbqOorr5yLJMUyzF8frczMxnJ7wFGakLnbuS
      OlmWMVV+HkvNVgCMSj+qqhYMjU3FI1y8dIVnP/bp0gIgAPEsVBvDeJNQN8cxnQiHUAWRRArU
      TBCLoxpJjhPLSJinxwSLQqEDXhCEojHBpcYNC0Lx4OXSdQLCEo4TBQGDJOGwWPJ1RkkuHhMs
      iAhF44Rn2qfNOW6mTi1RN+e+olh0D7HMcxEFofAe4kzdLJIkIVBc17a3lc723AvmDwSRJIn5
      y0WJolg0U4coirludc59y92jdB1FdfMpNcbaYDDQMXCOFv8dAEYCXiTpz4uOK3W9pdaVuu/8
      /5/R8QkOHjzAQH9/aQHweD1sba4jkBSpnReVcdQ0sLcmFx6vdVdO186qMhsrJ/PhJGIKcqPq
      HACxtErXMs5Nhr1EIrkvbSYeXoPWrYxfsWo8OW0qXljlmMpSUBWZ5sZGrvT0sX3PwdICcOXc
      KQw2NwgCyexObOuYD5HOpnn/5my+uqdhK/X1W4qOM2Ql6u7NzvBjqbGAq+iwB0YsK3Mt4M+X
      s7KMQfXjHL+Sr5M6n4ESySbVFRJP7Mh9eYIJhSDw87DEm/HcscmEwP9W5r6/mx7lYHYQgMlE
      LgfrrieDGs7ZOFMRmReAxpsNVPU6APBHgvAlGIrHME2rc6PxOLvv829fT6L+MZjuWdOhiUWP
      9wxcR6ncRluHxraWMtmgh598nrq6+tVt6RIxSmkeazmbL5812YEtRcfZzDZ+9dCn82V/NAE8
      mLl9IimJ0wOz0pdwSkzUC5z6wuzL/XGnwK5UkD84MPu3nbcdwBde2hDGaFMV6YZcSD4VSZc9
      ziSK2KbVAMv07/Y6E8/U5tIKhvy53qHN3cI2V27gzHggl4u05+hTPNucU6l6Jxd/mTYC7n3d
      VHfkgqmRe4s7MmyuWt794D00TSMjlxkT/KBe/pWSkjUuDc/2q8F2haXngy4NUzpO4/CdfNnc
      so0qdzPHD/77fN0Jm8SYNoFhznC6+TbGRsRsNFJhztlLVtPy8l92Rt6jSTwJwFgoAmX7qNVF
      Mon55ywZFo/YOmtb+dznWvPlR2pQvCFroWHkSL4crVva17Uc6XiYid7ZUV329oNUmWt4sX02
      PyhrWVmilConSIVnU7hNysOgeBTzq60Bnp0eY3x5ZOXK/c9Sx7gVy/VGA8kRPrniK5bmgQpA
      yiDxw12zawsbHU72rOB6gkC++weQhJWlg1Yborzonh3Yc864hcgSYxdLpdFp5/jh2cFCJ2xm
      5GJv4YbCNOzHFs/ZCknPysd6ePxXcYi54Z5Tvpw6trWjk317c2+DJuV88bfGxzBNe356Jyd4
      YsV3fsACYDAY2XdwNiLrKTP+NyNrXByafdCBFgXHKrdFSoGjZ9a9adjKhjKqNxJ/WJXh2aac
      vXVdK2+PLJVPdfRyrCM3W8apivJ6fIPtHdoduXT0cevq2HsPhQqkCC68pll/cUpk1QWg3ezm
      yztm1wg4YdJQ8K7yXR4+dpjGqbfmhklOmT3LOrd3chzrdC98c3yUgytsi9kgYDOJ+e3V4KEQ
      AAEBs3FW106L+kzO68XW9lZ2bc+pqQNDw4scXUh4ayPeHbk0ipBVXeToB8OaCICiqdwZmx1J
      JbXYqKVpgTN0HkWMBgPm6USyjTq4fk0EwCxm+PLuH+TLlwzPIrNrLW6lo7Mi1kYFEsA6Z0Cu
      JDyoEJWOzsLoc1/pbGp0AdDZ1KyCAGj03rzO5as32Jh2vo5Oef5/xg6mQFA9FnsAAAAASUVO
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Extras by team' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Four-Sixes Classification' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Fours and Sixes' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nO2dd3wrZ5nvfzOSRr1LlmTJvRwf+9T0BiQhhN4uJLS9LJdl4cJSdlk2y7Is
      bTcLC5ubACGwXJbPwgWSACkLhARCes8pOc3nuDdZtiRbVm8zmpn7h2wdy5qRNLJkH5+j7+fD
      hxxryqvyzPu+z/P8nofgeZ5HkyYXKOR2D6BJk+2kbgbAsmy9LtWkyZYhl3oCl8ti2huA06LF
      zLwfrrYuGLVKsCyL5mqqyU5DsgF4Z2cRjtMg6Cg4goJGRUEmkwFA4f+bNNkpSFoCcXQS3sUQ
      lv0LcHTuxu4eFyYm5ho1tiZNGg5RixfI7w+AIln4Asto7eiF1aABy7LNGaDJjqMmAxCiaQBN
      diJNN2iTC5qmATS5oLlgDIBJJnH63rvBJJPbPZQm5xAXjAHEfPM4dMf/wdEf3AUul9vu4TQ5
      R7hgDEDndMI2tAdytRp/+pvPIDrXdN82uYAMgEmloDQYcPEnPom9f/4hPP2lf8TM4481o9cX
      OBeMAdDxOCi9AQDguuRS3HD7tzH58EN47p+/At+LL2zz6JqIMfvkE1g49HLDrn/BGEA2GoXS
      aCz8W2224LpvfAuppSWMPXj/No6sSTlG7/sVxn/z3w27vuRcoJ1KankJKpO56G+kTIbdN78X
      gePHtmlUTSphG9oDuUrVsOtfODNAJAq1xVzyd52rFUn/4jaMqEk1MMkE0qFQw65/wRhAJrwC
      ldlS8nel0YhMNLoNI2pSDUwyhdTycsOuf8EsgdIrIahttpK/U3p9Mzh2DsOkksg28AF1Ac0A
      YajMpUsguUoF8DyYdGobRtWkEnQ8jmQw2LDrSzaAbDKCQCiGRGQZU7Pz2CludCadhkKtEXxN
      bbUiEw5v8YiaVAPP8+ByTMOi9xINgMfM9ASWlsOY8wWhk9FYiqYbMrB6w2azkFGU4Gsamx2p
      paUtHlH9CI2O4PQ9d2/3MBoCl8tBqTcgG4s15PqS9gCh+SmspHKIpxbR6bJBpVIhyebAsuw5
      rwlms1nwMhlyAk8Sld2OhN8P69DOzBGa/tOjmHrkYfS87W2QUcrtHk5dYRkGapsN6UgYCoOh
      7teXZABWTw+udHngC8ZBMDHM+CPYvdsFmYwAcO5qgnPpNGQUBUrEn6x3uZBeWoJcvvN8AjzH
      IXjsFahMJig12u0eTv1hWajMFrCpVEO+H+lXlCnhdikB2NBa9+E0hnR4BUqjSfR1jb0FoTNn
      tnBE9WPx8CFonU7EZmeRy2YhV54/MwDPceB5Hlqns2FL1AvCC5QOrUAlEARbQ+dyIRnwb+GI
      6gPPcRj++f/D3g9+CGq7HekG+su3g1wmDZlSCY3Vikx4pSH3uCAMIBMOlaRBrEdttiATiZzT
      exghVsZGQcjlMPf2QetwIrXUOHfhdpBLZyBXq6EymxvmpbsgDCAbjUFttYq+TioU+emW3Vmb
      4DO/vBeD73kfCIKAvrUV8QXfdg+prtDxOCidHuoGeukuCAPIp0GIzwCkQgHwPFia3sJRbY6Y
      14vYvBfOiy4GAOjb2hCbnd3mUdUXOpkEpdVCbbEgvZNnAC6Xw9Ef3IXw5MRW3K6EdCgEtbU0
      DWINgiCgttkbmnRVT3iex8h9v8Lum24GueoZ0btaEfedXzMAk0pCodWC0huQjTZmibolBsDS
      NEbu+xVCI9vjadmoBRBC53Qg6d8ZG2E6FkPw+DG0vfrawt/ynpLgjtvHlINJ5g1ARlH5SPBO
      NQC5Wg2twwEmvT1R4/RK+U0wAGhaHA3NOaknow/ch64b31Dk8pSr1GAZpiE/ku0il05Drlaf
      NYAGsGV7gGw4guVTJ7fqdgV4nkc2FoPKJB4HAACtw7EjXKF0MoGZPz2K/re/o+jvMooCKZeD
      TiS2aWT1h07EQel0IOVykDIZctls3e+xNQbA85BrNIjMzIDnuS255RprTw6yQhRR2+JEosFL
      oOjcLA7f+e2an2Y8x+Ho9++C+8qroNCUJvbpXK2Iz3s3O8xzBiaVgmI1uq22WpEO1T/OsTV7
      AIYBpdNBZTIhsbi16qtCEhxBlD1O02JHermxCXGRqSmc+eW9yGUyNZ3PsSxmn3gMho4OwdeN
      HR3nlSs0vwfIG7rKbGlILGBLDICORUHp9bD09SM0MrIVtyzAZrOQKRQVj1ObLUiHQg3dRFJ6
      PTiGAc/V1k2Hjsehb3Wj901vEXxd73afV54gJpXcMAPU30u3NQYQj0NpMKDlwEEsD5/ailue
      vXciDqXBCKLCDCBTKkGQJHKZxm3U414vKL0BgWOv1HT+8vAptOzbD4IU/tr0njbEvOdPwa/8
      Jjg/A+zoJVA2FoPSYIR9aAjLI2e21FUnpgQTQqHTgUk0Th4Z982j/dprEXhFugHwPI/5559F
      62WXix6jc7qQOI9mgHwtJx2AHb4EysaioIxGUHo9spFwzWvgWpBiAGqzBZlopGFjiS8soPP6
      GxCq5SHA8wiNjMA6OCR6iNpqBZ1I5N2h5wFrcQAAUFssSDVgj7ZFS6BE3p0lk8M2OISVsbGt
      uC2A1RiARTwPaD0aux2pQKBhY0kFA7ANDoJlGDAS3ZUJ/yJUFguUen3Z484nkf96GWujZKvS
      eoTlshgbHUEwFMXS4jxOj4wim6vs1sxEwlAa8pFY50UXI3hi6wpRZVZWKkaB19A6G5cWnctm
      wNI0KL0Bpq4uRKanJJ3ve/45uC65tOJxKpMJ6ZWdkdJRDp7jwNI0ZKvBPpXJjGyk/rOzxBmA
      RHtnB3zzXszOzUKjNYCSV74EHY9DaczL2ex79iLwytFaxip43Re/+Y2yrtVUKFT1EkjraGmY
      mzYbiUJlsYAgCNh2DyF48oSk8xcPH6rKAHStbsS9Oz8WwLE5kOsUhpReDyaVAlfnftSSFGGk
      XAH/zBQUlBIH9l2FwNw4FkN6OEzqsprgTDQCuVaHXC4HjasVicVFZBKJTZe8y8TjmHj4IXS8
      7kao7HbBY7KxGCiDUVALvBG1vQWJYKCqY6USW1yAxmZHLpeDbd8+nPjxj6q+D5NKIbG4CENX
      d8Vz9J42ROfnG/IetpJcJgtCJitqwE5SFOhUsuAZqgeSDCCbjCKZzYFS6+CdnkAkQaO/VV2x
      TzATT0BtNBY0ncaODmRXVqBqb9/U4DVWK5R6PUiSFNWLMok4VEZDVXpSjdUKOhptiPY07fdD
      73ZDLpfD2NaGhG8eJEEUPeXECE1NwtLfX9W4jO3tmHn8sR2pb14PB0CmUEAmkxVc2HKKAnK5
      ur43SVdSao0YGjq7nq7250sn4qDWKfpb9h9A4NhRGDdpABxNI5fJIDozDcf+A4LHMKkkqAob
      xzUonb5huTTxBR+M7fkIrlypgtbhRNzrhbGzs+K5i4dehutScffnerQOB5KLC5sZ6jkBx7Ig
      NjwcKIMBdCIpWOKyVrYsDkDpzv4IbYNDCNahIjObY8AyjKhXicsx4BgGcpW6quvJ1WpwDA2W
      Lk264nkeJ//fTzD2mwdrGmvM64W+ra3wb9vgEIKnKu8DeJ7H4pFDcBw4WNV9lCYz0ivS9LO5
      TAbP/vNXty1dXQiWzpaUeFGbLXXXBjfcADiWBccwRclbpq5uRGdnNx0Q4xgGBo8H0dkZwWsx
      qXwksVIUeA2CIKC2iLvbZp94vObqEalgABrb2X2K4+BFWKoiOza9vASClEEjssfZCKXVAgQB
      JlVdqUc6mcBLt30L3meextLwcFXnbAX5KLCq6LtTWa1I1tlN3XgDyDElmZhKgwFylWrTOk8m
      mYLe7QGTTIITkDOuD6RUi9puR2qpNOSeS6cRm5sTTUOoBJ1MFI3F3NOD0MhIRa9G8OQJOA4c
      rNqIAUDb0lJV0CgyPYVHP/1JWPr68Ybv/we8zzwFntvabF0x8rGj4qWr2mqte6HcxhsAzQiW
      JLTuGkBo5PSmrp1Lp6DQ6qDQapFNxEtez8ZjUOqlVRPT2OxILZcKY7zPPgP3lVchOiddd0vH
      45ApqIJPGwAUGi3kKhWYpPieI5/+8BxcF1d2f65H0+JAsow7l8vlMHz3z/HcrV/DFbd8HgM3
      3QxzTy9kShWCJ45LulejyKVTUGiKl64aq63ulS8abgAsw+RF5xuw79mL4InSNTCTSuGZr30Z
      4YnK+mE6kQCl18PU1YXoVGlgKRuJQCmxnJ7O5SqJBfA8j7knH8eeD/wZ6Hhcsng+sbgAvdtd
      9BQnSBL2oT1YLrPs4DkOkclJWAcGJN1P73YjJhIL8D7zNP7wV/8bsdlZ3Pjt78G6a6AwrqH3
      vR9nfnmPpHs1ivVagDXUNnvdg3wNN4BcKiUo3mjZtw8rY6NFa/dMNILnv34rpv7wCGiBJ/pG
      8slSepi6uhGZni55PR1ahsbeImm82hYHUhukkdlIBOlQCNaB3VCbLUgGpa1D4z4fdK7SOnq2
      oSH4jx4RPS82NwuN3S55GWdoa0dCxBPke+kFKE0mXP65W0qu27JvP7LR2DmRUUonE1DodEV/
      o/S6uhfJbbgB5GVtpW5IpdGEbDSaL1rL8wiePIHHPvsZuC+/Au7Lr4DW4ah4bWa1bIaxqxsr
      E6WeoHQoBKWpujSINTQOR4kyzPfiC3CtZmEaOjokZ1zmZwBPyd+tu3ZjuYznxffCC2i94kpJ
      9wIAQ1sbYvPzJX9nUkksnTyJa770VUGFHEGSGLjpZgzf/fNtF9cziUR+Q78OpV4vOYeqEg03
      gHwktnQZQsrlMPf2InTmDE797Kc4+v3v4ap/+CJ63/JWKA0G0PHKMwCTSkKu0cDgaROs6JCN
      RiuK4TeiseWVYet/ALNPPoGOa68DAJi6uxEaG5V0zY0u0DX0bjdy6bSgx4bnefhfOVJV+sNG
      VKvuwo0b2pnH/gTPVVeX/LDW03bNq7A8PLztJWKYVAryDUsghVYHus6Jfo03gGhUNBClsbfg
      yS/+A9KhEF572x0w9/YBABRVBqToRAKUVgeN3Y5MJFKSZp0Or5StBySEjKLAc2xBt5sMBpCN
      RmDq6gYAmHv7EJ0pXW6VIzbvhUHAAACIJsYFjr2C5eFT0AssnSohVyrB0XSRAbA0jbH/fhD9
      73xX2XNJuRwD774Jo/f/WvJ960k+E7R4EyyjKBBEXuVXL7ZgBhB/CutcrXBffgUu+dRnit6s
      0misyt21tgkGSl1/PM+vagHKV4PYSH5pQIDL5XPq5556Eu4rriy4P/WuViQWqo+0crkcmESi
      kA27EUtff9E+gOd5LJ06iUPfvh2Wvn7UshAhFQoodDpk1mVPep95Gpa+fmhbKu+JOl/7Osw/
      /1zDmlJUAx2PC+59KIOxruPagj1AXgsgRP/b34FrvvSVknwYhUYDJlV5qlvv5zd2dJaUBsyl
      UpALbMDLQZAklCYTsqvFcueeehKd199QeJ0yGMCkq89KzGUzICmFaPzAceAgwuP5/QvHsjh9
      z9049J07cM2XvoLXffvOqvTMQhja2hD35fcBPM9j9MH7sfumm6s6V6HRoP0112Ly4Ydqunc9
      YBIJwaWzUm9ANr6DDKCaqmwbofR60PEqlkDxWGEGMPX0IDw1WfR6LpOBTCHcFqkc2hYHEouL
      SAYCYGkaOre78Bopk0Fjbyn8uCqRCYehMppFDcDQ1o7Y/DySgQAe/7vPIjY3i9ffeRfM3T2S
      x72e9SVSAsdegcpohEnCNfvf/k5MPfIwuG1SlwmlQgCA0mhAto7CmC1ZAonNAGLkk9Iqb4JZ
      hoFMnn9Cmrq6EdkQC2AZ4SBcJbQOJ5KBAOaefByd17+2ZIYyd/cgKuB2FSI2Nwf9OgPaCElR
      YLNZ/PFTn8DAu27CFbd8vi5tjvQeD+I+H3iOw+lf/BwDN71H0vlqiwXGjk68dNu3tiU6zNI0
      ZFTp7Ke22gRznZhkEo/f8rdYPi0tuNpwA2ASScGprBxKQ3VN0dhMphBd1blai3zfuUwGcqWy
      YkEsIdaqxHmfexYd65Y/a5i6u6su9Bv3zZc1AIIgYBscxMGP/m94rr5GUspDOQyeNiQWFhCd
      mQaTTqNl7z7J17Dv3Vsyq24VrEi3G7XVKmgALEPD+8wzYFLS3KSND4RlM5ArpQlfFBptVXsA
      lqYhU+U/pLwWNlHw3qRDy1UrwTaiczrhP3oEpFwuuGk0dfVU7QlKLCxA3yae9k2QJK7+xy+h
      84bX1TRWMXSr/QJO33sPBt/z3ppymHre+Ob8Eqg+NimJXCYjmMWrtlgFo8HB48cB8CAIae9T
      0tG5TBKnh4cxPu3FwtwUTpw6DYYt76fIb0SrS0deQ6HVVhUHyE+T+SUOKZNB7/YUPDSZcFiy
      C3QNtc0O/9EjBd//RoydnYjMzFS1EU4sLkLnctU0js1A6fRIh0JYGR9D6+VX1HQNuUoFUi5H
      Lr11VTyA/KadpbNFuVNrqCwWZAQMwH/0CLpedyNiVe7N1pC0PpCrtFBTJNIMjQTNo9NpwnIk
      gRaTRlQSyaRSIOQKSRI9UqUCk0qVPYdnWXAcB54gC8fpOzqxPDYCTWsrkktLUJrNNUkD6XQK
      PM/DOjgkeD5PEJBRFLKJRMU0hWQwAMpk2nKJIscwYOks2l79GvAkWfP9KYMR8YAfhjKzWL1h
      aRqETA6W44AN+w/KaEIqFCp+PzwPJpVC27XXIXTmjKT3KskAcgwNd0cPTpw8BY1KhUyGhExn
      FpVE5t+IDJRa2gygNpnAJBJlpW90JgOFWl10jLWvH9GZacjlcuQScahNpprkcwqlEm1XXwO1
      2SJ6vtbhRGZ5CeoyHi4mncprDERiAI2E5Ti07NsPx779m5IQWvr6EJ+dhWU1ELgVcJkMZBQl
      OG610YhcKlkklYwvLEDrdMLU0Ym5J56Q9H6lLZh4FtNTk2jr6EabuwUJloLdKP7jZtKpkmhe
      NciVSnA5BnyZJQaTSpWI6s09PQhP5jdtaQkFsTZi7OjE9d+8DRqb+BLK1F3qddpIJhyGylI/
      +Z4UZBSFa2/9RqGFUq2Ye3oR2eLOPmt9AYQgFQpwObZoZvA+8xS0Dgd0TheSfmlVPSQZgJxS
      Y9fAbjhsJuhNNnR3eMoWXc4JpLRWPTAFVbbCWS6TKcky1XvakPQvgmNZZFZCUFdZEKsWTF2V
      PUGpQKCqyOu5jLGrC9Et7j2Wd5wIu4JJhQI8myvJ1WrZtx8KrRYsw0iqPNhQLxCTTEGurq30
      iUyhKJvzkUslS7wEpFyeL3CbTiG9EoayQlOMzWDu7kGsgjgmOjcrmAa9k9C2OLa85DqbyUIm
      UjKHlMkgU6oKuWJxnw8kScLgyedaVetCL1xv88MVJ18Norb1r0ypLDsDMKkUFLri2YUgiNV4
      gB+ZlVCRBrfeaJ1OJBYWyqYNxxcWtnTz2AiUBgMIgqjKK1cv8ktn8RQWtcWCbCQfDZ576gl0
      3nBjwc2rsbdIUo011gDicclR4DVkShXYrPhUtr52/HpM3d0IT4wjE4lUXQ6lFuQqFWQqVdmk
      vcSCD3qPcBboTkLT4kBC4tp6M5TbAwCAypIPhvEsi7mnn0L7a64tvKb3eBAX0EKI0VADyMak
      5wGtkU+IE69ssKYG24ilrx+hsZF8X6kGF4fSOp1lc4JSS0tQW7dnE1xPLL29klPAN0OlYgZ5
      3fYS4osLUGi1Rc4OQ1t71XlawJbMALU9hSut5dbUYBvRt7UhNDJSiBA3Ektfv6gniF/1TSu0
      tc2A5xLGzk6sjI9LPi/h9+ORj38U4Qlp55bLIAYAldmETDiC6Uf/iI5rry9KH8l3yTlHDCAT
      jRaK4kpFodWWLfPNJFOCTwmd04XEwoLk9ItaMHV2ISKSK5ONRaHQaGpOZz6XqEUEBOS1ENG5
      WTz3r/+CFQkqOkZER76GymJBMujH/LPPwHP11UWv5WeH6jvJNHwGEBOCVKKSKCabiAkugeQq
      FVRmc0PX/2sYu7oRnZ0RfC0+7xNVge00VJba+nOll5fQ/pprceXnv4CXbvsWTt9zd1UdMplk
      ouzMqbHasfjSS1BbrCWubqXBUHUZdZ5lG7wHiEZrNoBKCXFMUjzGYOnrk6wFrgWV2SxapiOx
      MA9dq3gW6E5CodHkq81JbHTuP3oE1l27Ye3fhdfedgdi3jk89U9fqNiMMJ8IJz6DK01GrExM
      oP260lwtmVIJuUpVnaY8k27wDBCLFno8SUVpNJSdAZikeB4Ox7KbrjpXDQq1GnKVumSvwrMs
      Jn7/UFUZrTsBgiDyJSglLoNCo6Ow79kLAKB0Olz+uVvQef0NeOgjH8Lh79whet56oZMQmZUV
      ECQB++Aewde1DicSVTQ6yUajjTMAnueRy2ZrruVOaXVl9wB0PCH6IbkuvgSuSy6p6b5SMbR3
      FO0DmGQSL91+G5hkEi17pOfgn6uYe/ur1kAA+fV/OrQMvedsORiCIND1uhvR97Z3lBU8iTk4
      1lBbbeh7y9tEU110ra1VuUKZZLKBMwDPg8vlqqp/L4RCrxedxvIeFnFXWe+b34rdN7+3pvtK
      xdzTg8j0FHiex8rYKP7wqU/A4PHgDd//YZF/eqeTj69UbwDRmRloW1oEUxrcl19Rdi/ApDNl
      4wA6lwtXfeGLoi52vdtTlScoG4k01gB4jhMsi1gNlE4n/pRYuzZZm3HVE3N3vsjt2AP34fmv
      /wuu/uKXMPje99ds+Ocq5t7eisl/6wmePAFL/y7B1zT2FtES7oWHW405ZMCaHLSyAaRCIWnp
      0FLgeT6/y64xGCWjKOREcoH4VQPY2EBhOyDkckw89FvwPIcb7/xB2al7J6OxtyCzEioSIZUj
      NHIGvW8W7mifFzyJx3g2+90a2toQn58Hz/NlJaaZ8ErjZoBcOl3ovl4LcqVKvAgtxwE8f04Y
      gMZuR//b34nL/vpvz9sf/xpKo7Eq7wrH5hCeGBedAeRqNXiWE/1++VwOpLz275bSG8Akk2XT
      6YF899KGGUA2HpdcmXk9JEUJ1vwHVmcAnq/ZuOqJwdOGK/7u78sGbs4HCIKAvq0NsfnKHSiz
      kShkFCUoaVy7ltZRWoQYQH7vyLIgZLUvTtaCj5UahmfDAnsA7+w0xoaP4rnDp0pOYLMpnB4+
      hfFpL2YmRjFcpk8wHSuOAeQktreUK5WFwrkl42BokDL5OWEAFxKWvv6q0hqWTw/Dunuw7PKj
      XIIdz7Kb2kMRJAmVxSqoHV5PJhwu3QMszI1jdoVHW0upi5FUqNDT2Y4JbxA5JgWOVIIAwLJs
      iSY4HY1CrtUil8shTWfwvts/hc++9SN49WB1zd6A/Po6m0iUeASyiSRkKmVRC80mjUfnaYP3
      qScram4DJ47Dtndf2eM0DgfiiwuwbziGy+XFLtzqf9c81lYXInNzUDucosdk47FSA9h34BIY
      AzG0WEqXL2w2gTFvEEO7epBKJpEOB7AUScFtywe71muCmVgMakteU6uTabEYDkKv0UnSayoN
      BnDZLOQb/P1sKpVvs7TDW4HuNMydXThzzy8qfu7Lp4ex+903lz3O4PEgPD5ecgydSUOuUm36
      uzW2tSMx74X8yqsEX+c5DhzDlC6Bjp84Cf/iLE6fLu1ckmNZEGwWs/N+ZJNRRBkFXFbhjR+d
      iBdcWWk6g2QmCZVCWoamXKVGTiD8LtZzoEljUdtsSIeWy5aDycbjyKVS0FSQguqcrUgKRGvL
      BTilkI8FiCvZ+NW9RomZOW0WnBiZhN5emsil0pmxZ+hs9K2c4jYbjUHXmq+HM7vkA8txiKel
      pQZQOq1gD618vvj5vek8FyFlMmhsdiQDAehbhaWesblZmHt7K1a407lcgj/QXDpddVvbcmhd
      LsGeEYX7ZDIgIJANSvI0Thw7AaV+c3paOn62N/Bp7zi0Sg0iSWlVfcUaItCJ8tmCTRqH3uMp
      20LJf/QI7FWUYaS0WnA0XbLOp5MJULrNu5N1TheSwYBo0h0di0JttRYbAMexgNKEj33iY9BA
      WiO4jWTjsYIbdNI/gwNdg0hmqutduwYlkg6x2Uhhk9qx9PaXTYlYHj4F+9DeitchZDKAJEsK
      Hwg1x6uFtWxSoSU0sFqyxmwpNoCZ0eNQmex46onHsRjYXDZlXrKYN4CJxVlc0rMPkZS0GUAs
      HYJJJGrOMm2yOYydnaJZoTzHIRkIQCeyPFoPQZJ5zceGTNpaejuLoTQYkI0KawPSoVDpDKDX
      6fDH3z6I/Ve/AbYyBa+qgY7FoDTowbA5BKPLGGzvQywlrbKAQiQjlE4mQdVpCZRbLbHYpDqM
      HZ2IeecElxaxeW++q2WVxdB0rtaSkivl0tylom91i3aWz0QjUBqNxQYQS2bQ3t0Lg4rAxRfX
      nk7M8zzoZBIKnQ6RZAw6lQYGtR4xiaWrxTQBYoL4WviHn30DX/vlt+tyrQuBXCaN0OgIFg+9
      XPJa8PhxWHdV39NY53KVdNysJIeUgq6MPjgTCkFlNhcbQM/APly6fxBzI6/g/v/+HSbmaiuF
      wedyAM9DpqCwEPKjw+6BXq1DPC3NACiRZnn13APISBlkzYhy1ShNZux+9804fOd3MPP4Y0Wv
      hUZH0HLgYNXX0rlaS3ou12sPAORdoWJV7TKRSOkeAABODZ/EciwNvUGHbk/lXr1CsAxTyAI9
      5R3DLnc3tEo14hmpblDhTbBY8+1aiCSidWtKcSEgVypx8V99Cq+74zuYeexPOPK97yIZDIJj
      WayMjcI2OFT1tfKu0OInNFOhIoQU1rrkCJEOr0BlMpfGAexWO3r2XAwVCZA1PhnZbLawCx+e
      G8VNV78FOrUWqaw0TanSaEA2JrYE2vyHxPM8RnyTNb/PCxm1xYrX/Mu/Yvn0MJ76x7+H86JL
      IKOUZbW8G9E5XUgGihPixPpK14K2pQXp5VJnDs9xSPr90LTYS2eA0MIkHnjgNzgxWnshpFz2
      bHMD7/Ii3BYH1JSqBjdovmH2xg0Xk07XLLVcTzydhEImR0LiuJrkIQgC9qE9uOH272Lx8CGw
      tLT+vUqjEXQsWmhJCwC5CmURpUDp9GBSqZJYg/fZZxA4fgwrY2OlM4DOaIVaFrhxR68AACAA
      SURBVEUoXF1pCSHWylpk6CxS2RRsekvhKcuwOSiqTHUlZbJ8gzaex1oZap7j8lUDaii7vhHv
      8gIGPL1YWBH2FDSpDkqnw3X/9u/56KqE5eRZV2gc6tUy8kxSekehctdX22xILQWhc7WCpWkM
      /+LnWDz0Em647Q64LrlUYAnU2o6DSiPmF6svMLqRTCQClcmExXAAdqOt8ONXUyqksxkoNNUt
      X9YELzzHFVKfOYaBTCGvy7p9dsmH/tYuzIcWkWGyknOVmpylXC+FciiNJmQi4YIB0MlE3Vzc
      QL7fW8LvB0GQeOHf/hXGzk689rY7Cku1kiUQx9IYPXMG/YO1VzRYc1NOBebQ5+os/F2tVCFN
      V1+7nSBJ8BwHnjubfMXSNMgaev8KMeWfRZ+rCyatASvx2me8JrWjW5ezw/N8fglUR2WdrtWN
      sQfvx2O3/C0Gbn4vLv3MZ4v2KSUGMD09jf7BQYyePlnzTbOxKJQGA8YXZtC7zgA0lFrSRphY
      bYOzvk8tyzB1Kzc4GZhFu90Nm8EiOU+pSX3Qud2FxoY8ywIEWVehU3R2BouHD+GG2+6ARyA1
      uuhOPM+jxWbF9NQUDObapjRgzZWlx4R/Bv2tZ3tL6dRaJCS4QgmCgFylKupSyDHVibIrwXEc
      5kOL6GzxwKozIRSvX/fxJtWjdTgL/Z25TSrBhLj445/E6+/8ATR24V4RxblAYydgdHahp38A
      VxwcrPmm2WgUlMGA+dAi3Jazihy9SpoBAKVd43OZjGj3EEljzNEADygVFKx6M5ZjwmU6mjQW
      vdt91gByTN1L2qutVpi6ukRfL7obm0ngwfvvRyqdhi9wKV57dXGDtVwmidHJaTCcHFoZjVia
      wa49B6BTFlttNhYDoVWDzjHQKs/u6I1avfSUaJ2uKBhWr2SpSDIGg0YPkiDhsjjgXd7aNkBN
      8iiNRmTC+dmXY5ia60jVSpEB9O6/Gr37rxY7FnKVBjaTDklOATadwa5OHWLxJNRybZEmOBON
      YjEdg8Noy29sVv2wOqUGkURMWh9XrQbpaLRwTjoahWJVa7wZpvxzcFudYFkWJo0BRyIntryX
      bxOAVJ7tCc1ksyBksi39HiTNN6mVBYz7IujrasdKdBkzvjjaeodK+gRzdBZT4UUMtfcXaTvN
      ehMCkWVJek+10QQ2lSycw6bTUOr0m9aMzgS96G/thlwuh9NsRygRaWqMtwH5aicfLpsBT9Og
      tNot/R4k3UlldGD/bgNkcgVs5kHQOQ5qVemUxSSTmIkEsG+weAllUOswvjgjaYB5UczZhLh6
      LYGmAnO4bm/eK9BitGEpGqpYSaxJY9A6XUgFguDYXF32d1KQ5G8iZXLo9Xpo1CrI5AqoRdoQ
      5bJZzIT9GHAXdxfXa3SIS0yJ3rgJXi+13Ay+FT/abHnhhkIuB8dz4PimLmA70DmdiC/68oL4
      LZa61j0LjGNZ5Ogs/Ikw2u3FDSIMah1iUlOiN8gimXR60zMAx3EIRkNwmvKuMYVMDpZjwXLN
      OkPbgdblQioQyKfQ1CkTtFrqbgBsJoMky0Cr1kK+IefHqDEgmoqV7Q6yEYVOV6QJoOPxTX9I
      kVQMakoF5WpEWUbKoJArkJGYzNWkPuhb3Yj7fGBSSVBbXGKy7gZAJ5NYppNwGEsDaUoFhSwj
      TWxPaYtLo+RrAm3OAIKR5aLxEQQBh9GOQLT65mpN6ofW4UR8wVdXPXC11N0A0stLWE5GMeDp
      LXlNIZMjx0pzcSm02qLSKEwytWkDmAp40W4vFm5b9c1o8Hahd+e1u/VKc5dC3Q1g/vnnYEsy
      6G9pL3lNXqMBMMmz+fosnd10KsTskhfdjo6iv7WYbAhGpHdCbLJ5SIUCPMciE17Z8oJndTeA
      wfe+H2defwm63KXhZ4VcDkaqAWzoFplv0LC5tOXxxRn0OIsNwGG0NZdA2wRBkpCr1EiHQlte
      8rLuBqDQahGQs7AbLKU3I8i8MixbvQJLRlHgWRbcquGw69RmtRKMhOA0FydH2Q1WBJsGsC0Q
      BAGV2YLY3BzkO30TPOmfhYpSQqMUVvUY1DrJ5VFkSiXYbH7zzDH0ptKhWY5FPJ2AQV28j7Do
      TU1NwDaid7sRmZ7akkYjdI7BH489jXAiWv8eYb859Ci8ywvIMnTBzbgevWatPEr1FSdkFJVf
      +iiV4FgO5Cb2AKF4BCadEQp5sRHZmhmh24rW4czP7luQDOddXsCn/u+X8qkw9b74p970IXzw
      2ncJ/vgBwKQxSM4IlVEU2GwGLEVBRlGbSleY8s+i21G6QbfozQgnY810iG1C724FqVDUpTJ0
      Jax6E/Z37sYvPntnA/YAcgVsAuv/NfIzgDRNgEypQi6brUvVsJmleXRuiFADgIwkoZQrJEk2
      m9QPrdMFGaWETFkfuWs5lmNhOEx2yGWyBvYJFqGWGYDS68AkEnUpiDUd8KJLYAYAABWlkly7
      SIwXRo9gOiBeRrxJMZROt6oFaPzsOx2YK6wCttwAzu4BqmctIY7JbL55wlRgDt1OYQMwavWS
      ZychWI7Frb/6Ln765H2bvtaFQioYRDYaQXy+coPrzTIZmEOXI98AZofMAPmU6M2GynNsDkvR
      EBwmYX2oTW+py0aYJEholGp02D2bvtaFgnX3IN75y/tg6e9v+L2mA150ttRoAKlkHDmWRzwc
      wvTsHBhWWgqxTqWRrgvW65GNRjdtAMlsGmqlCnJSWHhtN1jqEgxLZdOYXfJhMVx7baULDVIm
      g77VvSWtb/3hIFyrcSBJd+OYDE6dOIZ4lsX07CzUag1kpLQ1m0mbzwiVQr7EXXLTBhCMLqPF
      YBX18rSYbHWZAXwrflh0JsyHaquu3aRxsByLWDoBqz7vqJHkBiUVKrS15v33nR0dWPTNg6Q0
      sOqVJX2CxdBQakSTCWm6YI0GmekpkEol5Jra9cATCzPoaPGInm/TmTG5OLtpTeqp2VHcsP8a
      PDdyuKkzPsfwR5Zg0hiAVa26JANg0gl4fX6os0oYZVmkGA6tKkWJJrgcJp0RiUxSku5TZTQi
      l0qCTaWhdTpq1ozOhRbQ7WgXPd9usiIUD29ak3p6fhxXDVyC50cOg+FyUFNbK/NrIk4gugy3
      zVn4jiV90wq1Dpdd9erCv4V9KeXRq7VIZFLgeB5klQEnpcGIbDQGhUYLs640zbpaZoLzuLL/
      ItHXrXozwsnScuxSGV+cwZ9f925oVRqksummAZxDTG4IhG65F4ggiHxW6LqS2JWQq9XIZdL5
      zjDr9gBZhsa9z/4GiSpcl6lsGqe9Y7DoxNu/apTSSjeK3SeSiMJtccKqt+wIjQHHcfjVc7/b
      EWPdLFPrYgDANhgAkBfGSEmLzqdC0KATxQawsBLAP919G/504tmK1zg2fRqjviksx8U3uVpl
      /om9GXH8YjiINnsrSJKE2+qEd3mh5mttFfF0Al/8xb/jq/fecV5Hwnmex8w6FyiwbQagkDQD
      yJQUWDq7Koc8my8ejC7j6oFL8IunHyz75KZzDH7wh5/hhx//BvZ17BY9Ti6TQUUpNxUMm/TP
      Fipit1ld8C6f+56gYCyE1+67Gnva+/HhOz+HSb9wX62dDs/zCCejRan622IASgWVr81ZJTJK
      CZamS9yg97/4CP7yde/HGy66Ft/53Y9Fz//Ro3fjQNcgXjV4WcV2SFa9GeFE7fuAU3OjGGrL
      B3OcZjv8kc31W94K7n/hEbzp4uvx0Rs/gM+/8xO45Se34pfP/W67h1V3GJYBw+agWieo2hYD
      0Ku1Va3b15BRFHLZLLhcrlA7MplJYdQ3iYPdQ/jgte/GZGAOz505VHLu8ZnTeGr4RXzyTR+q
      KsvTojMhVGaZVInhuTEMrhpAm6214hKI53n84ZWnMLZQe0uqzZBlaLwwegSvGbocALC/axA/
      +fTtODxxHJ/98dfw8NEn4F1eKPxvJjiPXz33O6wkdp52whfyw2myQ7YuELottQD1EusDEQQB
      uVKJXCpViBQ+P3IYB7uHCh6WL970afz1f34Zezt2w7DagSaZSeHf7v8+vnTzX4OSV5dnbjNY
      sBStzQB4nsdKIgKr3gwAMGr0iCbLNwdnWAbffOD7ePPFr8Vn3/6XNd13M5yaG0GH3Q39OoGQ
      Tq3F1//n5/GFn/0bvn7f9zDY1ld4jWVZvDB6FDaDpVBZb6cwFfAWcoDW2BYDMNRQIU6h0SAb
      jea7xvA8HjryBN73qrcVXu+wu/G+V70DX7/vTtz6Z7eAAIG7Hvkprtt7JYbaq88vcZpsWIrV
      Jo5fDAdhM5gLWgiz1ohYOgGWZUVjJAqZAjq1Fha9uHeqkfz+yBN4/cHXlPxdRsrwtfd9DnSO
      LjIOAPj0j74Mj6215Jxzndml+RIt+LYsgcxak+QplNLrIVepQJIkUtk05kOLONi9p+iYd1/1
      ZsTSCTx67Bm8PH4MZ7wT+NB1N0m6j81gxVKN6RAnZ0ew23P2aUmSJMxaQ9n3msymsRxbwfji
      1i+BmByD4zNn8OrBywVfVyqokh8/AHS2eDCzA1O9J/yz6Go5B2YAnUojvWWqwZDfAJMknjn9
      Mq7cdVHJsoYkCHzp5s/gI3f9PXiOw10fu7VE+lgJu8GCYKS2hLhh7xj2tg8U/c1msGAptgK7
      0Sp4jj8cRLezA5P+2YpqNJ7nce9zv8VlfQcEVW1SOTp1CgPuHujU0vKr2u1uzG3Cvfvs6ZfB
      gRc1vEbA8zx8ocVCPdg1tmUGMGkNiEhMiFNotJCrVCAIAn849hTeeNF1gsc5THbsdvfAaW4p
      qU1aDS2m2sujDHvHSpZbbqsTi2HxNqwzS/PY09YPJper6Blj2By+/bsf44mTL9Q0vo088spT
      eNPFwp9jOTrtHswt1d5Q5J7nfoufPfVAzefXAp1jEE8nS9SK22IABo30yhCUXg9Kr0c4EcXi
      ShC7BSrPrfGvf/b3uOtjt9Y0NqNaj2QmBY6TFgzLMFmEE1G4zC1Ff2+1OOAL+UXPO+0dx1D7
      Lph1RixFy+89SIKEQiavOoWkHFkmi5OzI7i4R3o3ULfVCd8meisbNfq6vAcpRJIx6AVmum0x
      AKO2BlGMTgdKr8dTwy/iyoGLyy4V5DJ51V6fjaxtVqVWig7FwrDojCV/91ic8K2IG8Baq9YB
      dw/GFqbK3sMfCYLJMRWPq4aXxo9hqK1ftHhBOZwmO4LRZclV/tYYX5jGpH9r9xCL4QBazaWV
      SLbFANSUeL9gOkfjJ0/8qiSAxHM8WJrGQ4cfw+sPvFrw3HogJ2XgeB45VpoBnJmfwG5PX4lh
      emwuzJeZAfyRJThNNnQ52jGxWD4COzI/iWsGL6sqvYLjOPz86QcwE/QKvv6blx/FGy+6tuJ1
      hCAIAiqFsqa8KSaXA8PmYNWbtrQ17aR/tqhl7xrbYgAaSo0ULfzhhRMx/PuDP8TX7r0DsdRZ
      H3rSv4Dp0WGEE1H0ucS7/m0WkiRh1OglZ4WemhsV/IAtOjNC8bCgViKdzYDlWBg0egy29VZ8
      sp+Zn8CVuy5CPJOsmEqSYbL41gP/gX+6+7aSJLdoKo6xhWlc3LO38hsTwao3Y6WGiLk3tIBW
      swMD7h6MzE/UfH+pTAfnS2IAwLbNAEpkRGYAFaXEYFsfrtl9Kf7ie7fg1NwoeJ7HxZ/8DMj/
      dTOu3XtlVbqDzWAzWCS7aUd8k4UUiPWoFBRyLCuYYDcVmEW7zQ2CIOCxujC3vCAqKuJ5Hqe9
      Y9jXsRv9rd0Y9ZU3FhkpQ5ejDe++8k34yPduwaHx44Vrvzz2Ci7u2SPZQ7aeNltr2b2NGHNL
      PnQ6PNjTPoBh71jN95fKbHBeUKMtXROcyGuC6XQC/qXa/OX5tGNhA5hYnEFfaxfe/+p34Gvv
      /Sxu/fV38ZMnfg2OJPDYyMt400XX13RPKThMNkl63hybgz8cgMfqKnmNUlCQkSSSmdIZbzo4
      X5g19GodZKRMVC/N8zwC0WW4zC3Y095f8cczPDeK3Z5evP2yG3H7h7+E7z38E9z5+/8CnWPw
      +6NP4s0Xv7bq9ydEh92NaZHlVTlG5ifR6+qs6j3Uk1A8LFyvVspFOCaDUyfzmuCJyRlko0GE
      4tK7qijkCvA8L5gSPewdw572XQCA3W19+NFffROzSz58/AdfQIbOoLOl8ZUWWozStMH+yBJM
      WmNRktV63BYn/JFSgxr1TRYt56yrXTSFiKUTUCooaJRq7GkfwKm50bJjOjJ1EhetBgo7W9rw
      g49/HTmWxce+/3lM+Wexv1M8K7Ya3FZXTa7QCf8MdrV2o8vRjrkln+S9Vi1k6CzoHA2DprTy
      dI2aYA4KSg2rWYt4NgtWI69aE7yGRqlGLBmHccOgTs+N4aar3lLQ0iplFL7wP/4KX7n3dsyz
      DFiWleyilIpFZ8T4wnTVet4z3nH0ODtEj3eZWzATmEf3hp4J44vTeMdlNxbO63V24sz8BDoF
      puoT06cx4O4Fy7LocXTgzPwEGIYR9YYdmTiJz7zlw4VrywkZPvWmD+GO3/0nnjlzCCzHgdiE
      XtltccAXWpSkeeZ4DjPBebhMDpAgIJfJEU3GSn4D9WZuyQeH0QZWwNhq1gTrSQbj3gB2D+2F
      TJafSKSszbUqNbI5ukh/y/M8poNe9Lu7S3S5//KBvwPP8xXTmeuBy9yC50ePVK0NnvDPYn/X
      oOjxHS0e+CPBotcZNodgNASPrbXw9wFPD8YXZwSvM7Y4jb0duyCXy2HU6iEjSWRytKBvO8vQ
      CCXC6GvthnzDd/K5d3wMn33bX276c2wx2RBOxiTppzN0BiRJwqDNL/f6W7sxFZjDpX37NzWW
      SiyEg2i3uwXHKulTWNME7+3vQGfvAA4e2A+VorYPUrOqvlpPOBGFQq4Q/FIJgtiSHz+QT4le
      jlUnD+R5Pp8CvS4HaCMuc0uJKzSVTUOpoKBY96X0t3ZjXCQt+vT8eGGTTRDEaqq18BJkPrQI
      q94MmcjnVY/P0aDWIUNnJDUW9IYW0WKwFtKR97TvqriUqwdTgVl0b0iCW2PbWqNrleqSRhmz
      Sz501JC+UG8IgsCUfxYnZs4UeUpOzJyBRqkucncmMymM+CYEN1hreATSIWaC82i3uUESZ3+M
      Nr0ZAQEBDcux+XqW677EPe27MOwdL2gP1nN8+jT2dw42tMo1QRCw6M1YioVK8mvEmFicQf+6
      3tFDbf34yRO/btAIzzIVmMPbL71R8LVtMwCDRl+SDnFqbqTsk3SrWElEkMqm8ePH7i1q9Tq2
      MAU1pSr6wjN0FhkmixSdgVFrELyew2SHbyVQlOw2vjCFXa3FjcSNWgNAEIink0Wz4Eo8Aq1K
      C8W6sQy29eGhI4/jpqveXHK/o9OnRL/wepLPcwpWbQAjvknsdp9NYels8WA66G1oSXqe5zEb
      9Ik6T7bPAAREMafnJ/Ceq9+yTSM6y/7OQTz61V+UlDOhGRokKStaV/M8jwyTLVv6RKNUgwCB
      LEMXPEUjvkm8ZuiKkmM7bG7MLs0XPGFA/gm2MfjX1dKGmUCpG5LlOIwvTJfNlaoX7bZWzIcW
      cVnfgaqOnwnO4y2X3FD4t1algVJOFYmI6g3LsUjTaeg1wp1FtyUQBuQNYKMoZnxhGh7r9gst
      CIIQ/EFTCqpkUyl27Ea0KnWRj9+7vCAYmexr7SoRpeeXOsUzo91oRTgZK0krX4ouQ0bKJKc4
      10K7zY2ZYHXVnDmOw9ySD+224liJ2+rEtIAh14tUNgNKTkEpF8552jYDMOuLRTHJTAo8zwsm
      lJ0PWPVmLK+mJDA5BkvREJymlpLjel0dJfrg4XVC+/V0OTyYXSr+AY4vzmBPx66SYxuBx+rE
      bJWxgGgqDo1SDaWiOFayt2MXhstshB86/DiePFV7+vezZ14WdKqssW0GoFMWi2LGF6fR6fBs
      madnq/FYXYViuaFEBEatoWQ2AfKeoJH5iUJMhed5eJcX4LE6S47d1dqDMxvyaQ5PnMDlVS5J
      NkurxYGlaKiq+I9vxQ+HyVby992ePgx7x0XP+68nfoWv3Ht7USqHFB4/+Tw4nhc9d9t+bcYN
      opiR+eIN0vmGx+qCb7VG0GxwHm5L6Q8ayEeho6k4cqvp2KF4BEoFJRjF3NO+q8QAjkyexMAW
      rP+BfEcdOsdUVUhsYnGmZNMPAF2ONtGI8vzq53XXR2/F7b/9Ef7vo3dLihyvJf3d/uEviz5Y
      t3UPsN4LdGL2DPZ2DJQ5Y2fTanFgYTW/aGJxRtB9CeSr5ikVVKGLznRgTrTRxi53TyFZEMgH
      1+LpBOwGYfllvaHkCijk8qoKiY34JgWzZU0aA1J0BgkBiezPn34Qf37duzDY1of/+vT/wVIs
      hE/+8ItYqFKM88jRJ3HjgVdBpxJvq7WNM4Ae0VQcPM+D4zlM+mdFfxTnA3kVVT4YNrowJdqm
      aS3INRvMPxVPzY2WbIDXsOiMyNBZ8MgbwKhvEgOe3prFQFIpZLFWsQ+YCXrRK5DGTpIkdnt6
      MLVBZL+SiODFsaN4/cFrAeSN7Qvv+iRuvuat+Ph/fAH//Mtvl60tlWNzuO+F3wu6iYvuX3Hk
      DUIhkxcURWk6C57nRZtrnw+YtIZCjSDv8kJJdYL1DLb1YcSXX9oMe8ewy90jeJxCroDTbC/8
      AF8eP1ZIgNsqOls8VQnkl6IrosHCAXcvzmzIDL332d/irZfeUBT7IAgC1++9Cv/47k/h1y/8
      Hq9MD4ve7w+vPI3Btj7RdlhrbJsByGVysBwLHjwWQn60WpxbrhPdSowaPWLpOOgcg3AiAnMZ
      b1evsxNT/jlwXH5m7G8VFwDt69iN4bn8j+fwxAns3SIP0Boddk9FhdpKPAK1UiX6gNvXubto
      I5zMpPD4yefwriveKHj8pb378Yu/+S7uevingqo0lmNx73O/wZ9fX7kkzjYagAw5jgXPAyfn
      RjDU3n9eN6iWkTKYtEaM+iZhN1jLLlPWcu2T2RTkpAxapfgadrenF8PecdA5BsHoMvoFNpqN
      pJol0EzQiw6beIpLf2sXRn2Thb3MI688iasHLhWNrBMEgaH2frxm6Arc9fBPSzw8RydPwWaw
      CGbVbmQbDUCxmp7K4+TsKPa2b+2TazuwGyx4cewVdFTQNDjNdoTiYZz2jqPb2VHWNbynYwCn
      5kbgDwdhM1iK6l5uBW6Lo+ISaMKfFzmJoV3dpCazKbAci58//WDFtTsA/MXr3otjM6dxZPJk
      4W88z+M/H7sHH3j1O6t6oG6bAZAEAY1SjUQmhSm/eLbe+YTL3IKnTr2AAZE1/RoyUgaz1ojn
      Rg4LBsDWYzdYkMqm8fzoEexp37Xls6jNYEEymyqrUR5bmC5rACRBos3WirmlBTx+8nnsae9H
      q6W0gsNGFDI5bv3ALfjmA98v7K/OzI8jx+aq3gtta9TJoNHBH15Cik7D1qBckHMJt9WJI5Mn
      qzL2zhYPHj76hKgHaD12oxV/fOVpHOwaqscwJUEQBHQqraAbE8g/kScWZ9Dn7Cx7naG2fpyc
      HcHPn3oA/+v691RtyB12N955xRvw4Mt/AJB3nX7w2ndXfX7NBrAwN43hkVFkc7WrswxqHU57
      x+C2OM/bCPB6PFYXQBBlN7Vr9Lo64VsJVJwtAGC3uxevTA9jUEIR4Hpi1ZtF2yutxSZMOuH1
      /Bq72/pw77O/hUapFsyRKsfNV78Fx6aHcWx6GBOLM7i8/2DV59acDbq0FITa1AI5SYDjuLw/
      X6JU0agx4PmRw9jt6Wu4zPFcQE7KoKaUIAmy4vs160zQqTRQKpQVj3WY7NCptdCrtNvyOXos
      TswG5wXrlUYSUWhVGshIWdmxWXUmnPFN4K/f+heS3wMBAm84eC0+fOfn8Ddv/QgUMnnV16jx
      sctjz4FLYFZy8K/U3k5Ir9bhhbGjGKpimj8fyDI0nOaW6iqq8TxcVR4rl8ngtji2RGAuREeL
      RzQrdMI/g66WdhAovyRhORaddo9oikglLunZB6epBT0VllobIfhaMozAY35mCpEUg127dkEh
      I8rWwBfjJ0/8Gt968Ad47Kv3CCZKNdkZvDx+DA8ffQJffs/flLz20yd+DUpB4b3XvE3gzO2n
      xhmAgKezB3sGB6CQ1e510Kt1cJpaztsU6AsFp7kFvpBwfs744gx6JT6Vt5Jt3Xkm0gkYNTrI
      ZNsmTGtSB8xaI8IClfTCiQheGn9FsMnGucK2GoCMlKHN1npBbIDPZ/RqLUAQRWkJK/EIvnzP
      7atr/xpW2VtEjXuAUmrZA/CrQoULwQV6vvPJH/4T/vbtH0VniwdHp07h6/d9Dx+89l1440XX
      bqoGaaPZ1rUHQRDndf7PhYTL0oL50CIeeeVJPHP6ZXzjf35eMP//XKP56G1SFxQyBf7uJ7ci
      mUnhx5/89x3x4we2eQZocv6gU2lww/5r8Ldv/+iOmtW3dQ/QpMl201wCNbmgaRpAkwuapgE0
      uaBpGkCTC5qmATS5oKnZAJb98zg9OgH23I1yN2lSkRoNgEMokkKrSYWlcO16gCZNtptNLIH4
      QkWyJk12KjUaAAmbWQd/lIbd3Pg69E2aNIpNR4LXMjo5jmtmdTbZcdTtF1sp/2O9nQnZnNjr
      zWPF2eyxYuc0+ti1h2a1xwrdq5ZjhV7fdDJcY1KaOdA0B4qqPDye58Dz1bX+PBf0BzmGBuQK
      yKr4zDiOrfrzXftCtzMRjaZpKCiqiqcqD5atfsXAcRwIkmyIz34LskFZHD98FIRSi652G8IJ
      BdrdYkWwcjj8wiFojErMe1N41XVXQC1qBAwmJ+YRCy8DpAx9e/dBJ3psDodeOIQcDxCkHBdd
      dgkoUviHwuWyOHH8FFRaLZJJGgcu3gexFD86FcWxU2MwWh1QMxnYB/ohVt86HQ/h+PAU2EQU
      mrZu7N/VLfqFxoM+RFgSgQU/SJkCBw7sET02seTD6Tk/2BwPpUqNg/uHROsvxJcWMOEPQ60g
      wRJKDO0SryMamJ2AL5KAq7UL8VAA/QPiNYcWpsfgj2YQCvgxsP8itDnFa4ALiAAAAzxJREFU
      CxzMTk2CBItIhoVCocFAn3iRsOmx0wjHEuBlCuiNdvR3i5eUnPbOIptMI5NOo3tgDwxqMREO
      g8MvHoHSYEGrQbkVgTACKp0Ru7rdGBudAFt2qpZj1+4+kCQJl6ejzI8fAGSg01EshyPIcTzk
      ZZ98PHgu34eA5yr5rtZNzxX8XCRJwtrSCquWwIzPX+ZIQKWzoLPNAZJQoLO7o+wHr9RqEfTO
      IJZIg5TLyxcU4fNj5DnxNkCFQ9dJTysdK5fL0d49gExkEcvRRNljnW2dMOvUUGmNcJf58QOA
      RiXH7Owc0pks5FR5pVj+PeVneK7Seyv6R9lvDXqTFd2tZoxOzNYvHbqu8ByyDAtlhQ9I8mUl
      LoHCfj80TieUlQ9FyO+HwelEpRHnaBqh0AqsLmdV02/Q74fN6az4pOJ5DgF/EA6XU9RgmHQM
      Y1M+9PT3IxENw2YT/7FmEhFMzvnRt2sXYuFQ2WOTsRDmFlbQ3tGOdDJe9th4eAm+pRh6e7sR
      WVmBzSbezSay7EcgkkZPVxsi4RhsNvFm5PPzPnAci1g8if6BXaBkYp8Yj5mJUZAKDaLJ9Dkq
      iCFIKKn6T07VrKc5NosXXzgEs9WKZa8fB8sYAEsn8eLLx2GxmrHsW8IlZQyASUfx8tEzsFiM
      WFoM4QqXeAEoOrGMl09MwWrWYykYxlVlDCAT9ePQ8DxsZi2Cy1E4ylx3ed4HZ1cXJkbHAPBl
      f6hB3wLcXZ0YOzMKosKxAV8A7vY2zMzMgeByZY9dXFyCp70VYxNTIJhcWQNY8IfQ1e7ExMwc
      +Axb1gBULSZ4T4ygzW3HciSFVqtYJQoaqawcqfASPHbTOToDbCs8YtEY9EYjkithKC3mMk91
      HtFoDEajEfGVMNQWc5knytljYythaC1m0b3F+mMjK2EYLOYyM8DZY8MrYZgsZtEZgGUySGR5
      qMgcvIEweruE2zQBAJNNIcvKIOezWFiKobtTfP2dTSfAEkqASSIYTqGzXbzXczoRA0FpkUtH
      EIoz6PCIG2wyFoFCY0AmHkI0DbS1ind7iadzUMl5ZFNxyDUmqBTiM0AkEoVWq0UqEWsaQJML
      m2bkqskFTdMAmlzQ/H+8trzLE4GuYgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Match Distribution across Venues' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nNS9Z5Bk13Um+L2XL703leVNl22PhiU8AYLeSJAoDsnQKChpNDsa7cROxE5I
      G7G7iuVu7O5ojBSrXY0PaUcaiaLoRJGUSJAECRCWQKMBNNDd6PJVWb4ys9L7fG9/ZJ9bJ2/d
      l1VNURPYE9HRlc/cd825x59zte3tbUvXdTSbTfh8Pui6DtM0sbW1hZGRETQaDQCApmkwTRMA
      oOs6OFiWJe5rmgZd1+F2u+F0OgEApmkeeUcF1WoVrVbL9j59pxfQM81mE06ns+v5Wq0GAHC7
      3cr2NE1Do9GAy+WCZVlH2jYMA+l0GolEAqZpot1ui/dUfaTv+Xw+MXemacKyLDgcDmiahlqt
      BpfL1dVOo9GAYRgolUool8tot9vQdR0TExOoVqvY39/H0NAQ6vU6Dg4OsLe3h3PnzqFQKGBj
      YwNerxdjY2Pwer0AgFar1TUewzCgaRosy0Imk4Gu64jH4+KZRqMBy7Lg8XjEmNrtNtrttu1Y
      7dZJ9QxdO8l69gLqr6pPdI9+2/XbIITVdR1OpxOVSgU7OztwOp0wDAPtdls0Rosmd4KQm+55
      vV74fL7bHlC73RaIIn+DkIYP3DRNcY1vsna7jXq9Lq7RgF0uFxwOh7jndDq7Jogmjt6RJ9rh
      cIj3/X4/ms2m6C9fUE3TUK/X4fF4BGEoFovweDyo1WqIRCLi2VarBbfbLfpumib8fj8cDge2
      trawu7uLM2fOwOPx4J133kEkEsHw8DD29/fRaDRQr9cRjUaxubmJubk5hMNhtNttBAIBVCoV
      MT/UPq3z8vIyTNNEMBhEMpmEZVmC+Hi9XtFvmnuaS47YNG6OcPQ3n0d6hwgk/ebz3Qv4Wqjw
      T/Ut1XN8Hgj0fD4Pr9cLXdfRarVgGAZqtRr6+/sBdKgFTaLYNYYBl8slEIp3TtO0rmu3Ax6P
      B36/H6FQSGwgjmAcaOOq7rdaLYTDYXi9Xrjdbng8HrjdbrGBXS6XWGROre0mjcA0TSQSCezs
      7KBcLsPlcglqyoE2ssPhQLvdRqVSQTgchtvtFshPSBUMBmFZluAExA2IKodCIfT19WFtbQ3x
      eBwjIyNwOp0YGRkRcz02NoZarSYoNf3daDQEUtM3OZebnp5GMplEq9VCo9EQXI02VqPRQLPZ
      FJRf5pbyZpDXRyYitIF4Oypiw//JwCk7jUdGavkb/Jr8vuOXf/mXP7+6uopGowGfz4dAIIBg
      MIjt7W1YlgXDMIQoo2maECtSqRRqtRrC4bCYJBoMbajbBRoMUVDOclW7m9/j36PNXKvVsLCw
      ICgciQxutxv5fB71eh2GYaDZbKJer8PhcKBWq6Fer2NnZwdut1u0QxNIiJlOp1EulxEOh7vE
      P76ohIiE5HxR+RhI5CoUCkJ8tCwLOzs7OH36NDRNQ6lUwujoaBeXCQQCCAQC8Pl8GBgYENza
      6/WiWq2K9aNN6nA4YBgG6vU6arUaQqFQFxfj/eJIo0Im+Vm7dZHbUF2T1/e4bx33Xb4ex44h
      l8tZe3t7CAQC2NvbE1Rkbm4Oe3t7mJ+fx3333ScoUyaTQS6Xw/DwMEqlEjRNQzweF7qCw+FA
      KBT6W8l2lUoFpmmi1WoJOVs1MTLbJajX60LO39zchK7rghLXajXE43HUajXRfjQaRb1eB3Ao
      gtTrdQSDQaTTabjdbmiaJqguccVSqYS9vT2MjY3BMAzRHmft6XQafr8fuq6j0WggEAh0UT3a
      VNevX8fo6ChqtZqgvH6/HwMDA7AsC2tra6jX66Jt0zTh9XrRarUwOjqK9fV1NJtNeDwejI6O
      CqIFdIuM6XRacIWhoSGxbip5ml/vtQby/J90rVTiFNcn+TO9vsEJoKx/2H2HfhsAMDAwgJWV
      FczMzAjKk06nMTAwgJ2dHUFBNjc34XA4MDU1JeTXzc1NJBKJLtmPy+a3C4T4ALqQiU+mSuyR
      lR36v6+vD5VKBYZhYGBgAEBHyXM6nYJitlotJBIJcY82g67rSCQSCAaDXRS+1WqJjTI+Po71
      9XXE43GEw+EuKk+biJDR5XKhWCzC4XCIRdN1XWyoSCRyZGFbrRY0TcPExAQsyzrCbcvlMra2
      tjAxMQGXy4X9/X289dZb6OvrE7oQNwYUCgWcOXMGLpery+DQi2D1Qj67947bFHZyPeeivUB+
      R15/vl7ceCN/V8tmsxZZHLa2tnDq1Cl4PB6sra1hfHwcb731FoaHh5HJZBCLxRCNRoVCtLu7
      C13XkUwmhQjhcrmE8veTAFe48vm8QAC7wcvvyXLhSakBB85BgA5H8vl8SuuFYRjQdR2pVAqB
      QADRaFS0Ua1WuxRKrrfQ+6SXrK6uwuPxYGhoSHyXrDFAx0JmmqbQE2ixDcMQ46FNVa/Xkc/n
      YRiGsO7Q8/l8HuVyGYODg13t260F/a9aAxW1lRVSmUPIREu1Br10Cvm7qnbsOIpKZNay2axF
      E2maJq5du4ZkMimoRj6fR7PZxNTUVJdc6fF4sLW1hVqthqmpKaFDkJz5k0Kz2RQcp91uo1wu
      o9lsHpkgLmbw6/V6HV6v98gk2k0anzj6u1gsIhAIdE1kpVIR7crUiaxD2WwW+XweTqcTg4OD
      0DRN9F21OLTRnU4nTNPE5uam4ErDw8NoNBriOdqQKmTh10iHIusScSvezzfeeAPnz58XupId
      qJBHHoPcJzuTdy9ktyNoHLiEcRL9kvoscwZ5c+hEkZrNJprNJi5evIhoNIpyuYxcLgePx4PJ
      yUlBuchSZJomcrkcRkZGxKYgq8jfBrjopNpMsjLMlUsuB/Ln7SZZ9Wy1Wj1iwrUsCz6fD9Vq
      9QgbBTqiWqvVQjwex+TkJILBIFKpFCzL6jJx2vWp2Wyi0WhgZGQEp06dQqVSgcfjgdfrhdPp
      FPZ4AhLR6NsyuycDAll2ZAXc7/fD6XTC4XAI8awXJ5CJDOewfDyAvZlSdU++z0VoOyVZNf+q
      NrnZl8MRnKEPEfVst9vCzDYxMYG+vj5YVsek5vF40Gq1hFgyNzeHpaUlFIvFE3XsJCAPmqgg
      v6/S6oGObM6VP/683XdUC0YyuixT+nw+VCqVLkWULxopr+FwGMPDw1hfX0c6nRbIxueaf0/X
      dVSrVfE7EAgAgEBijiTlchlOpxMHBwdoNBpig9FzpESTjsMpMnECt9uN9fV1LC4uCvMr+UR4
      v1SyuUrP4u+o5tluDezWRyUy8U1CoNrcKjGJtyFvSC2fz1sAhCmQLB5yY/RCuVyGz+eDpmnC
      MrS4uAiPx4PZ2dmeg71dsCwL+Xy+yxLEB8dlTUJaYunUt2azabsxZXYIQNjI5YnjUKvVjohZ
      8phJsd3f30e1WsXo6GjXxqF+alrHxOnz+cQ7b7/9Ns6fPw/L6ii53ItMOoXD4UCr1cL29jYa
      jQYODg5w+vRpZLNZBINB6LqOnZ0dhEIh4dRcX1/H+Pg4Wq0WNjY2MDs7i3w+D9M0MTY2dkQn
      UM2P6rfdNbu5kdu3A7v5P+4bKnHXTvfTcrmcpes6SqWSWHh6QP4wPUe+AU3ThPxqWZawif80
      N0ChUDhiCiVZlm+GSqWC7e1tYYEql8uYm5sTiGLXvkwpaJMTgtux7Xq9LhRjO2rF7e7kV9E0
      DePj40JOL5fLQsQhfSCfz+Pg4ECYQJ1O55GQCU3TsL+/D5/Ph0gkIqh5Op3GqVOnoGkalpaW
      0N/fj2AwiEqlIkye7XYbPp8P4XAY/f39WFpawvj4uOAkMvSS0TmnVOkKvfBBboO+xa+rLDd2
      7ag2jKo/Xd/L5/MWKV71el1YGGTqzxukZz0ej6C6Ho8HgUDgJzZ/qsCyLBwcHHR9m0ScnZ0d
      EWtDsvv09DTcbjeazSZarRbS6TRGR0cBQHg5iZqqKBqn0O12u4sgqORYcpCR48puAZxOp1jI
      RqOB9fV1gYBer1dwKd7WysoKhoeHu5RlQgin04lCoYBMJoPJyUkx/mKxiIGBAWxubqK/v1+0
      ya1jALp0JUL6nZ0djI+PCzMrf85ubU4KvQiiSsqwu2fXVq8NwK+32+0j+GnQ5KocTmRvtmuc
      OkiBUqoP/DSAvkm268XFRYyMjGBgYED0izZvq9WCruvCFLu8vAwASCaT8Pv9XW2ShUSeYIfD
      gUqlYhsUR+DxeITSyc2m8lyRJYiQd2ZmBnt7eyiXy6JPmnZo0rxx4wYGBwePKIPE+YCO2HnX
      XXeJDd1qtYReMDw8LL6p4nK01pZ1aNHj1qpeVhw74NT+JOIS71uvb51U/FFtEhWXktszyAFm
      mqagNL2iPgk8Ho8wDdIHSfn6aYlAfDCEHMvLy5iZmRGiDVFsWdY3DAPDw8MAOht5Y2MD6XRa
      jDEej4sQBVn2lTlCLxau6zocDoeIPlU9zzkXfadSqWBiYqIrDMHhcGB3dxejo6MIBoMiTIH0
      LeJMuq4jHA6LsQFAKBSCruuoVCpHlEJyuPFgQrrPuQFf/+PGL1NqjjeqZ+g5+ZrsM1C1fTs6
      RC/dRKUHGFyhdLvdwnOoakDuFNmc6T26R4o0n/SfFGhDmaaJnZ0deL1eOBwOgbSa1gkpliNV
      eViCw+HAxMSE8GPouo6DgwPB9g3D6LI20RjkyVKBaZoigFC2pFCfHA4HCoUCdnZ2kEwmEY/H
      xdwRtyKkrNfr6O/vR7vdFv4QTdNQrVaxtrYGr9crLHLUP9J7SqUSgsFg17qRHqLrOnK5HCqV
      CoLBIAKBQJdIFAqFcHBwgEQi0SWSqZBYhbTUDj1jp0PKm4RvVBUcN/92Cq/cBzuuZESjUWxv
      b2NwcFDYs0kOtesI/XO5XEfCfimKkD7icrm6Jvt2QNM6jqStrS20223E43EMDAx0Uah8Po9o
      NNoVtq0SQUimp1j7gYEBHBwcIJfLIZlMCqcRIaJpmlhfX0d/f3+XLiD3D+joAlwPoLkBOpSe
      YoJmZmaQzWaxvLyMQqEgNmksFoPH4xFEiDYNIf3Q0BAKhQLGx8fh9XqFyMWdXCTaGIahVMJT
      qRQikQiCwSBu3LiB/v5+1Go16LqOcrmMaDSKWq0mwlpk3UM1rxw497DTHWRRhDaTXZv0TTvc
      kdvifeR9ldvg14x6vS5c45bVSYIoFotCNqQXeEe5I6bVaonfTqcTXq+3yxpAIbmyff6kQPE2
      9G3apPRtn8+HTCZzJI5GngDLslAsFrsQPRqNYnl5GZVKBQMDA0KBBjox8SQiqRwz8kTye8Sh
      UqmUEGX6+/uhaRpisRgSiYQwJwMQpsxisShCTVZXV6HrOsbHx5FOp1GpVJBIJES4MyEo/y7p
      QRQyoWmaMHlOTU2J8Ozx8XHE43G4XC4sLi4iHo/D7/cjHo8DgAjso00lI6ksVtiJSzLS2YGd
      mEPvHDf/gNpZp9pgnINZltWxAq2srGBsbEzIstQoyZMABIWq1WpiY8gdIvs2D5+m6xTrfxJO
      wHd0q9USUadcTgUO7fHE+okLkCmPOBO1VSwWEQqFxG+yzrRaLayvryOZTMLn8wm5mnQLu81L
      7RAXJDAMA9VqFdVqFX19fahWq3C5XMIKZRiG8PbKsvny8jIsy8Lg4GCX0k7z3mw2he7FweVy
      YX19HSMjI3A4HCgWi8hms7AsC0NDQ2IzUIAcOfU2NjbQ19eHdDqNQCAAwzBE2DU3EtgpuDRP
      /P5xuhOfO7mtXs+rNgD9bxcNase1BKfI5/NWKpWCy+USaXay2Y1CiVutFmKxWFcqIB+wZXXs
      9kSNiUpVKhURBkzufbvNQyZMkt9lKtdut7ssHB6PRyC+0+nsMs8SZ6J2VE4+UhA1rWM3n56e
      7voeiQkqBY9TKB6053K5sLW1heHhYeGT4GKlpnV8DYFAoGt85AgjSk5KML9G4yIKT2MhcfTg
      4EDkNdC3AoGAmDdSlL1eL0KhkAjVJkRfXFwUUbChUKhL11IhYi+uoPpbRuBe1+x0CU7FVXgo
      rxPvp3zdaLfbGBoawtramlgEUoL4JqBUu2q1emQxAQhZMhaLoVKpiI+SIkjUr1QqdS22pmki
      ZkUGulapVLpSEDn1o2+QKEYKIiEFcGjOVbFnsn5R+Mf6+roQFWq1Gqanp9FoNJQUhv7n5klN
      07qchNw6peu6+M3d+ISU9D7J+Lqud42Be4RlxCFxsNFooFAooF6vY2pqSljPdnZ2RDh4q9U6
      4iknvWN6elpEt+q6LkQ4VVYY9ZdzbNV1O25gR/VlPUJGYtk0z//mRJNzPU6cOBj5fB6xWAxe
      rxepVAqjo6MC0eWPk3hEHyBE4wpvsViE3+/vGnS73QalXhIVppgiAtVupuc0rePpdTqdQsaV
      J5osJqqNxBVDDvybpPyPjY2J++vr67clslHMj5yvQBuIvkEpknyhaT6JKzkcDkFUSISkeScd
      g6xO5F8gg0EkEsHs7KzoWzqdRjAYFISINjg3HMji69DQEDY3N+HxeASx4kYCPvf0HRW15eJJ
      r/knkNtQPaPaUDSXRLS5f4YjfbVahaZ1jBS6rnccYe12GyMjI5ifnwcAYdKTTZgUHsDlQ945
      ojY8ngaAyB0miwQtNkdWmbLS71ardUTelSeRTxo30dlNoN273BkkbzQCOxGKFnlnZwelUgnj
      4+NC3g6HwyiVSkKmDwaDKBQKwmRJYh8AocCSjkDvUFJPu92G1+sVHMrr9Qoz7vr6uhDhWq0W
      HA4H0uk0fD4ffD5fV4adnchA3LLdbsPv94sU0XA4DKfT2WXh40D6FG9HNX/HgaxjcG53nE5B
      Kai0HhSqwsdLfish6tMgiYrOz8+Lqg5893C2zYEQrl6vo1QqdfkD+AahDtAilkolIaeSO56L
      KST3ctu66n95cmSdRDVpNI7jTHDE8TilpHYp+Ydioba2tnDz5k1omobp6WlhSSHErlQqXRuM
      rGVETLhyTs9wOdfr9XaFqXDF3OFwYG1tDX19fULZ5oSKNhFxFZoXOchQpddQUn4mkxHrx+ea
      h8GXy2URmEdcyY7wqLgIX0cClRWH/6N1ItGYF0Dg+MDFN5JWPB4PtFQqZVEVCGLTi4uLguWd
      OnVKsFcO7XYbxWIRsVhMLLBcyQE4TB8k7kEhBsQtSqWSUI5pI/JEEdnBZTdZfEIoKaYX2Nm4
      CVwuFzY3NxGNRkVfOTVyuVwoFArY29uD2+3G0NAQ2u22UMpJXOAyPZ8jsi5xbzrfsDy8go/Z
      4XCIWj7kDaYNsbS0hKmpKTGHLpdL5ACbpolwOCysXDIn4N8h3SOfz6NWq4ngOafTKSKB+VzU
      ajUUCgWxrpQsReIk6Vkyx6d5t1OsVWtM/SPRmBR7laVOxeWO6DCZTMYiExtX5paWlmAYBsbG
      xrrCd6kRytQiWYoqLFD+LFkdSOakagyRSES5yznic1OrHaWgeyqvJMXXk44ig9wWf482ksfj
      EbV3+vv7xSYg1i4HpFH2Gqfs/FulUqnLIUgsmPIHCKFM00S1WhUWImqD5oYsagcHB2K+8/k8
      4vE4MpkM2u02ksmk0BF4EF42m0UsFhNGDB5qQfPAOTXpTqTD0bNkJapWq8hms/D5fELHoPcp
      OC8YDIroYVkhpWdJBJTxQo6vIkmDODCALpO7Clf4ZuX4ItpNp9NWPp8XNmDaTcvLyzh16hQA
      KENkKXOKIx8lhFD1Ax5MpmnaEY8phTBQABvJmET5e1ECmXLI/SD2q9o4dhuA7mlaJ7xjd3e3
      KzqSpzpaloWFhQWMjIzA4/Gg0WgImV9OMOHIyL9HHJE2F7XLxRZaQB55SlSPknCI9ZMDbWZm
      pst8SQhtmiby+bzY1NypKFN14DC9ksc7VatV5HI5+Hw+7O7uYmRkBKFQqEupprUkJ5xhGEgk
      EiJJh75BBEAOmeGchc+Xw+GA2+3uQmh5XWVckHFGVtwNUnCIgtPNZDKJxcVFwVL5ApEMS4od
      UQ6+yCQb8/cosZssQbTwxJYprNpOJucg6wE08YQoNBY7RUzmGFyEot+5XA6nT58W9wqFAhYW
      FkQbIyMjwvRI8rDT6USpVOoqSEWbg0QdQgJykHFRR9d1YSqmZ4gz01wTFwAOqST3zvM5ovmh
      TRiNRrGxsdElYsn5EhyRSHTRNE1Y4QCI+CoiaLwN7kA8deoUdnd3RVW8er0ulGyK3qVxccQm
      QwnfLHxMqrHKRhR5PLx/tM4GPUCdcrvdyOVy2NraEkWvyBlDdnzKJW00GkdKhjSbza7dzNlc
      KBQSgWOkF1D5Pi7HnUTrl4HEA5/Ph1qtJrzYhJQ0cSp7vvwt+puoLLFnmo9YLCZMhuTD4O1S
      Qj35L6jmarlcFu/pui6e44SCHG+UnkqInslkBBGh1FTDMFAsFoVCxyNSqT1OAEhkHR0dxfb2
      tshCk0tE8vkh651pdso7tlotIcY2m00hfhHScd2KNjpfV47UHPlV6y7PjYzgvXQ41boSDnAF
      WScPIpk+W62WYG1DQ0PCu0pmN/IeNhoNEbdCjZGMVywWxabgpfr4zqdwartgq5NwAb7TSTYk
      fwEllXNLh8oezfvP2yWHGo2B/lGZEbLqcASTqZTf7xcRqGTL5/K3DJZ16Lxzu93w+/1otVpi
      Y5tmp5QiJ0YUs9RsNrG9vY2+vr4uJ5tqY9OckJjKRSqy8jidTlHg2LIs7O/vi9pFJHoRvhCh
      IUIKHDoHq9Wq4MYykpI/QqXbcW7MRZdeCK/CG9U7XboOUYlAINCltAaDQYHQZAWiRSBxiZ6l
      D+zt7WF0dFTEuBDyyFUNOAviLn15oXhnZeRVyXSqag7UnsxeeT/oGVpIXddFgB23lpBZlPpE
      YhvpGxSCQDZ4AF3hFySaEdLx54hIkOhIVpVWq4VgMIhGo4FarSbKUdImoM21sbGBmZkZ4Q1X
      eb6p7Ww2CwDIZrNwu91oNBpCF+H9y2QyQuGPx+NizbmZlUzYVK+IqL6ud+o6VatVDA4Odnmc
      +dqo1t1OhufrpMIVuS3VZpHbMSgmhZwHV69eFYoeIQ23CGiaBr/fj3Q6LZQvoIPMsVhMUBFi
      13JuLY+7lz2LtHF4J1Vskf/NY1v4AIlK8QoPqgmTv0f1fWq1GgYHB4/Ix/QsRZWSE0ruM1mD
      ZJApGtAxKJDSS/WV6NlCoSCUX/4t0g10Xcfm5iaSyaQQobgFiX+33W5jd3cXoVAI9XodiURC
      zA3J7fl8XvSN5y0QAeDtUih3Pp/H/v4+4vG4wAfKTqO8Zs4d5bVUIbUcDiG/S2vMcUQFqu/R
      uwBgkAxPk+T1epFMJgV14VSTXj44OBDIzxVIeef6/X5h/uQFc4nNE7Wldsk0qNqx8s6lSTUM
      40j+gqZpIjbGjmWqJo2ulcvlYyedkI+oHc0PISDvt6ZpQkSj61y+93q92N/fF44sLj6Sr4Bk
      VxIhyfLicDgwPDyM+fl5kZOtEuvoN21crrPR306ns6vMJek/qhKVNAaHw4FoNIpoNIp0Oo16
      vS6CISl3gzsAjxNjVP1WKbd2BE21KVTzQPcNHu8NHFJEmhhaYOp4sVgU1R/IusEXjH/MNE1R
      DpxiMOTEFY4o3OusmhSu/FA73FEms0xZDu5V9oNYP8nRsj2fnlfpEY1GA1tbW+jr68Pq6iom
      JibQarVQKBQwNDQknEkkT7fbbeRyOREWTaIFBcSZpilCxy3LElYyqgnUbDa7DiDJ5/NCZJUt
      SnwuSE6PRCLY3NwUZmmi7BzR5bVRIQ+NxeFwiDKW4XC4q3aSqiKH3IaKE8jiqowDMv7Qc/L6
      0G9ZBBYbgDdMYgPJkESRydnFY0lINiRbP1k5KJCOm0c1raP9kzNINSHyRNtRBx6hyikZf5dM
      fKp2ZecKbUqOgDQ+rqjKiyFPeqVSQTabxcDAgKCEwWBQIFokEhGchfpXLBaxvb0tvOkkxpVK
      JfG9ZrMplPlAIIBCoYBSqSRKVlpWpxz60NCQEItovJVKRYST8KhOAIhEItjd3cXY2JhQgOW1
      kCmvvKk4kD5EJlzK0pM5ugrRVf/LYIcbvcQfu3Hw9rS9vT2L5H+n04lcLodSqSQSyklZ46ZL
      XpCV7yZS5NxuN2q1Wld8O6eydiyJrvPCU3ZKD1EsVWk/cqzxSEu5mJWKDVPFNbLA8NBlvnDy
      AvDaPpqmiWOKYrFYl+hDVp1SqSQ2IrVNFifirPQebWQyRzqdTiwsLGBsbKzLhJjNZkX9IBKD
      SLfL5XLC2EAhEfv7+4hEIkLh5aKJaoyq+eIhKxS1qmkaQqGQIJYqwsHXXW5TBb3mn/dD1b68
      AeR3dKL6xK4ikYhQhvnGsKxO4SueqC1bGsj0qGmH+cLEzimsVhVYJgOlKVJk5fLyMhqNBra3
      t7G4uAjLskRuL18k+kdiApl3qXK1nWjF/9GZACsrK2i1WoIjcssHXzzKpOIbfWRkRKQXysFZ
      dH4CJffrui7EHUJQl8uFcDiMSCQizNNOp1PY4efm5rC1tQXL6jjn8vl8V2W8drvdlc5J5x1w
      ghQMBrs8rSpEoWs8LgtAl8eX5kHXdVH6nZ6R51k17/weXwcOKg86f14Ob7DDK7rOfRUGl4/J
      QUOKUC6XQzgcFpYJXiGZJkolpwHoMqlxhZrv1F7UYW9vr8uznEqlRLYXVW/uRVkoPOF2cpHJ
      S02Rl6Skk3hH1hkaIzn9KGWTqmNQQBzQ4WbNZlMgJIk15GGlBeHclAePEWKTD4AXI+OchBCB
      b3RaZIfDgXA4DJfLhWw2KzgRiWQqZAEgRF8yKlCEK9C99hQ6TVUD6d1enEUWS+TgRHldZNHJ
      rs/UJrXHJQYusoo5ogGQzF8sFgF0bOrpdFqILg6HAx6PRzh2OPKpMrpIBOKePOoInwyVDE+e
      5ng8jq2tLWia1hV+TJ5VDioxibgQn8hebJcWmmR23j8ZSWu1msiA8/v9gqJbliUqa5PvxLIs
      kWBE80IhEPI88AWicGSac6oScfPmTQwMDMDv9wunI5lMSdzhiMfbpkC6arUqiAP5MTjxooy0
      62+8gW/889/Bf/7t38bu9nbX+XD0Pm3WwcFBZLNZbGxsiO/KxFHFCehZO6TmiiSBPiQAACAA
      SURBVKy8xqrfXHRW6Rpd7dy8edOKxWJd8rLT6US1WsXq6ir8fj9GRkaEwwPoDo6jhBXaBPQ3
      TSzvkGqQ8jXLspSHPmia1pXNI7fDKQjnatyyZCdDUlu08VZXVzE+Pi7GQXU1eZCe7HeQ2yQL
      CymCFD7NdShN04RdXj6LjarG0XxomiYCFImTZrNZIVrSBuNKvjxG6j/F9pOoRA5OGq/L5cL1
      a9ewdvUqgpev4OItS97LzQbiH/wAps6dw6s/+AEe/fjHu0riUNQvrzLCnYeqeZLXQHXfThdU
      ET3VWtuJQ5qmQdvf37eo8CpfGKIK1WoVm5ubGB4eFhGHpmkKpYccOISodL6XqqwKiQxyx2UW
      RwousVy6b+dcom9wkYHaphzmk8SNAB0Eog1A36YYGkBNhfimarfbIkKTqDZXVglo/ijpiByS
      dLILzxFwu93IZDJoNpvCOUcFBEi5pQyyXsQG6M7FJotSq9XC+Ph411if+/a30ffDZzDgD3SN
      L1UoYLNaxcVYDO+cnsMDn/x53LxxA+cvXhQZf8SV+vr6uqJSOUG7HbBDYFk3UEkTMsjzYlhW
      x85M1RwIwckUalkWJicnsb6+jkAg0FXehFtqCJEJ2crlcpdZEYCgODJw5CSFlRRZnlVkh/w0
      MDkLCIA4MfG4BBkCitkhokDmXllOlTkJdxrx1FE6WIO4APdQc53C7/cLOz/vKy0yHUzIqzvw
      ShFkyuXIpUII6iMp45FIBKlUCvl8XijsANB2OOB2HEYH0/+joRBGQ6HO3L7xBr732hWswET/
      b/2WiFOivhKoxLzbAVmOV23uXvokb0N+p+uADO4BpY1A5rjx8XE4HA5sbGwI5OCymdw58hJ7
      vV7hNeYHs8nKEXWSuA9n/bLsSL+5Vs/vy4q2ShexA9M0EYvFkMvlbNmsSmYnczEXjej9SqUi
      5H2aE9k+DnSU6kAgIDYMX1TSwQjJebl04hLcHKiSt/kYqIqGZVnirODd3V2sr68jk8mgXijA
      1cO0CABngiE8GolgqtQxA+dyORSLRczMzIgTLPkYjkPSXt/ifae/7USiXmIWx1NN02BUKhW0
      221RXJWcVZyikRwbiUTg8/mwuroq8gR4ggMHXnmAWC6VJiR3vqrDvdiZLNvR37Inm3v9gO5z
      x04CFAErLxy3iJBORBQ9EAgovbA8eI3rMhQuwb9B3+XP8rmgPlAeAXcKksJNICOLjAj0P60F
      P9xvZWkJQ69ehs/bHVzIgSOS1zCQWl/HpTvvFMRQDn5T9eMkoFJiTwIkkcjiFseLaq3WSYqP
      RqPiht/vF15GojI0USQfBgIBlMvlLgqt6jghPL9GimGvwdixTJlTyNdrtZpIticRjmRwjmgq
      9sm5CMXc80lrtVooFosiDJpkeMqVlfsHQNjFZfOeLMrRPb/fD7fb3XW6Pa8LRAdg8NpN1DfV
      EUeqcXbJv7fWb2NjAzdv3kS73cbAwACSySRS0SiqUhhDtV7Gs6ur2KncOlP5Vlt3Dwxi6Utf
      xu7ODizrMG1RBZxzH3edU2o7kUeWIlT37TiJ2+WCDhyKMFyxcrlc4IFy9Fy73SmklU6nRWOy
      Q4x3gleOBtDlCAMOPc0quZpPAu+4LH60Wi2BtD6fDx6PRwSR0diOA942D/Mm7kXiCSElOfco
      Vl/uN8n88iF/lFpYLpdF4g7FzBMSLyws4ObNm7h8+TLq9TrW1tbQ398Pt9st/DJ8rsjapSIK
      8hj5JnU4HCKpf25uDvF4HK1WC8mBAdz7D34VN0rF7vehQbNMrBfysABoOES0SLHUZUnspYjK
      0Es04hyfnuW/7TiD3fe5PqHr+qEjjDuXKCmdsxD+AaotyTuk6jDdoxPMAXRVTiDllAroUsdo
      E9pxFt4Xkq9lhxcp6QCE2CXnJdi1T1lxZM0ikYUHi6kolQxcHqdn2u12l0hEolSxWBQOtdOn
      T3fV+gmHwwgEAl35A3zhVZvcjoPK+hH5doDu89TC4TAqExOwcnlQK07DCZeuYTIahcb6YFkW
      zoXDuP7883jkySe7OP9JZfiTbhgV1bebe7lN/hzNo06HKotKWbc8uPQCyaUE7XYb2WwW8Xj8
      iKImf4jkY6LG1B5ZQYDDitKkKJNdm9cXojZVegGPV1cBWXEod5c77WSlltqh5zc2NpBKpbC5
      uXnk3AT+vooNk57A2+VjIfEjk8nA7XYjFAphe3sbyWRSyPSGYWBqakpQZppvy+oYLKjyglx/
      x25D8v7yOVCdw2yaJibf9zi+v7qCzVvGEYfDifvHTyHhPlrvp21ZKDSbWF9fF2Eqdn3odb1X
      v3tJB9TvXmNWgUEudpWdnCgGZTo1m01EIpGuYDPuHqd3qGMUyUjXyuWyCGUG0GWzp/851eQm
      RwIeBSqzRw6qsZCYQJUr+Ok2BETlieoSJ9rY2BDnjcnftOMkcqUD6i9dn5+fh9/vx8rKChwO
      B86ePSuoJ4mkslJPnI10HL/ff8QKpuqXLP7Q/3Swt3zdsixMzc4i+L9+HtcuX4b31dcQkzjo
      Rq2GzWAA2vgYHLt72HrmGUydO4es04mhoSFhfeOJNHbSgt1c8vVTPaficnYEWdW+IbNFzmbp
      BeIKJO/7/X7s7OzA5XKhr6/vSIw/vcfNo8BhyiKvXMzv886R7sBlW85FaNG586cXcLGM5G27
      +kNkIqQwZMp9pft8Y6rs7vy3LL9SXc+1tTUMDw+L8HCaCzmsxC5MWU5BVPXBjjMSl7MsS5wY
      w+/x95P9/VgIBHCtkEcwu4+AP4LpcBDZSgXZ9z6Cx554QqzJQSaDXKEg8iMODg4wOzsrzN9y
      gJzcX25ZssML1Tz3mn95Ljg31jQNhpyySHIqIRhZIWjRKQ3ONDvlAFUTR+14PB4hOnBlkEqq
      qPKBOdAkEGLwDC/+3V6cQH5O7iNNBrdW8dBkcu+Tx5sjJ20SOysDHwNdNwwDu7u7mJycFNzo
      dmRhbtVQjbeXs4iep4T1tbU1DAwMiPBllXWqlNnEWioN8967kd/YhHd+GdPhIFLtNs7de694
      ttlsIpZIIHErNZOIw7Vr1zAxMSGq2JETT47vkcej4v6qOeKES/5bvqbiFuKUSN4BsmeTX4Cn
      /nETJr0jK1b8o+Th5KUQ5TIoqkWizUcbiP62O67Irh3VxFHfPR6PqFpN8TDA4ZkApItks1lM
      TEwoq5eRY0qW81XfI+QkJJArpfWibHx96vV6l+jDF1elb8htGYaBra0t+Hy+rth91Xdfu/Im
      GuUM+mdn4Ign0NzvJNQbzQbKpRKCrKYp5XsTTlBKJMUs8bBw3jfLso7MhWrcqvdUtn6Z68qb
      jVstDXny5cYDgYDwB8h5sO12G+l0GvF4XChtZCqlTshpiLquKyk5gRzGykUNTi24ziKH0p5E
      pqT3KNmcUz8SD1qtFlKpFKanp8W45AXii6SiMirkprZpPmTxRtVvlY7E25UpnYozkghG6ZVz
      c3NC5FK1Y1kW3vuBj+L0xiYq9SLmlzbQuPcBvFTYx2s76/iNWyERvI/0PWqTQiLS6TTW19cx
      NjYGj8eDq1eviojSYDAoEvRlAiJTct43Ph+qtZXXQ0VgdP4h+ptbCOge7d58Po9MJoNGo4HJ
      yUmRBqnrurDgEIsjyxIlS5TLZVvzJn1PXmBS+Di3kU2zNOFyn+WBy/IfL2nCweVywefzIZVK
      YWJiogth6X2K9lSxVXlMdJ1TRzkokM+//DzQTbV4SPpxXIO3SUSsWq1idWVFbGr5Pf5usViE
      O+DH1MxZfOiD78cnP/0k/KeS+Ke/eAde+PYXj2xsPsfkTG02m4hGoxgaGsKNGzewvb2NRCKB
      2dlZTExMiONreS1TAlk6Uc2xDEQg7eaHvy8qw6koCD1MbGtlZQWJRAJutxv7+/vCgbW9vY2J
      iQlRvo9EBaLaNAjZdyAjh2q3E2JzGdVOzFCBHRslfUZ1DoBlWdja2sLg4KBQgOW+9uqHzJJp
      0/JQCJo7uZ/0rkwI+DOy482Oa/BnqCLfX331K0A1j3y5ilazDsNw4vzFO4QDkb9LzjyeX/3q
      89/HafcG9vMN3Pnez3ThiV1Ci67rImn+woULWFtbw+DgoDBCjI6OYnl5GcFgUBwmyE2+Kvme
      z3sv/LXDC3GfcoJVk8iv1et1NJtNYf+nBa3X6wiFQkcO0yCgysLAYfU27mvg1Fp2HMlyL5Vi
      tGP//BrnCCoWCkBpBaJ+zM/PIxgMwu12o6+vT+TZkkLOS7rwfnJ5n5ccLJfLIsGIwk9oE9gp
      rqrfFKt13AIT0HNutxuvXb4Mc2cJY0MD4t78yhq0/knce++9yGazoroEES+qGk7tPP8Xv4eP
      3TWAV27uoO/Bz0HTdNx48xXc8+DjQj/jXMDlcqFarWJ/fx8TExNd61MqlURyk67rWFtbg6Zp
      wtzMzae9KLnMDVUET/WepmkweJy73e41TROZTAanTp0S2f+63jnTlhKv7cDhcCAQCAirDynW
      cvFclbzKO0wmPx7zr+pvL3lcfo58GHIoh8PhwJkzZ5BKpURWGkV6JhKJruQVOrXR6XQiEAgg
      nU4jn88LJZr67Pf7MTo6KqikvLjHIbKmaaI0Ja2VrPeoOADnSIs3b+DR06Ndz81MjOGt3c6B
      FlTinG8wDtlsFkOhTlt3TvXhqW/9AQKhCD58tg9/8/TX8cAHP9nlqSZRL5/PCxmfO1VJtLSs
      jll2bGwMpVIJN27cEAeK03MUWGk3N/ScrAfIXEmeZ6NQKIhDIFQKCACRG8wnmaf29QIaHLnc
      2+3OYQtyjq0cHqxie3TMT6PRUJ74yM2mJ2WDpNjza6Qb9Pf3Y2dnR5yRUKvVRDI6jYs2T6PR
      EPFRFDpOi8C5glwNj39X5gKq/AOad85xes090NnQuzs78DTL0BUixOryEn709Pdw30OPHNGh
      +HfcbjdqzVul4g0HPv7AjGjnsZEK/uwPfxef/m9+S7xPOFWpVDA0NNTlS5FPoyfDid/vx5kz
      Z7C4uChOr9c0DX19fUJvU1F4GXd65W7wsRuWZWFlZUVQZGLdpKG3223s7+9jampKJEbT4RCa
      pikTXFRAbI6oFym33AspK7UqDZ9Tbb5xuPxsRw05ywQgCkmpnE1Uqp1qfWpax/lEVg0+ucSV
      eJ94CUjOXTmn46IPBeDx/sqbmGorcfNxr03OTc1PP/VtPHpm5si86LqOj77nIhqNJp75yz/H
      bjaHX/4n//0R8QLoGCQOykeL+gKA1+3EaMyNF5/7IR585HFomiYqUPDxyvPLgePf2NgYFhYW
      MDQ0hHw+j0KhIKrhnQRUOpI8X6ZpQsvlcpZcXc2yOhXg6GFSoEh5CwaD4lSTcDhsGw3Kgdrk
      cSe1Wq3L/n6cwkJITqEMZNU4yaEavB35+zJFpvfIW5xOpzE+Pi6qZPcSWThi8+/Kcipdl5Fc
      dpxx4DVQVd+h65w7ZTIZfPdvvoXxkAtTo0M9KSIAbO+nofVP4uy58139fP3Hz6HhiqJy47uI
      O4o4d3oCMV+3H8e0LGTzFTy/YeDCI5/AwMCASKclwkVWw1qtJkQc/h0aAx0pRd74mzdv4uzZ
      s0eI1ElAHnPX5tjf37dkSkseTnmS6LnV1VVxegyd2nHcBgAgYuqJIpJIIB+KYSfa0D3TNIWD
      jCI2eelB3o6MZPweHTQh6z/8PZerc+h1KBQSp9GTXK/q63FgR7HtOBYfNx3B1Os5uuZ0OvHi
      C89j8/rrePDSORg2dZFkaLfbeOeggUcef+Kwb80MXnotjVdufAs3F1/Dv/35x/DStS18+P4Z
      dRumiTfmN7FfbCJVC2Fyahrn7ntcxJzRYd78rACaA8I/KiWjaR3HXTabFYSI1po2lUpkswP5
      OUO+QZYRuaoX3Sdb/+rqKoDOppiZmTkS964CSsgmhCanjAyyE0P+nxRMonSck9B7shlNlq0p
      5FolnnBEofyHVCqFXC6HaDQqktxpM6gmnarkEcKSDsHjoeTS6bwf/DqVauGb2Y6iAYcnbK6+
      /TqeuPeiUuewA4fDgUp6W1SlAABYbmxtXsNzL7+IsQf68SffeQ13zE3Yt6HruPt0x5LTaluo
      1nfxyjd/H3V3H84+8iRi8YTI+Qa6nXzkUOWlXVqtFmKxmMhfJuIzOTkpnpMTr44jMOI5MoMC
      hwkvvEKxPMFyRWdSJE+adE6x71wOpzbljh63m8lDrWmasDIRYspnBaje5UW+egGJE61WCwcH
      ByiVSojH4wiFQsrz0zRNw6uvvopoNCo4KZ2pNT09jXa7LbLF6vW6qGA3Pj6Ovb09DA4OIpfL
      IZfLYWRkRCTl0EF1VLiMdCquBxGReeG55+AqbGNssP/EyE9gmiYuv7OMOx/9APoHB1ErpPHK
      69exly6gVN5AaWcb940beP+dkydq71AXsnB5fhvb1iA++Au/0mUUAICNjQ3kcjnMzs6KfBE6
      BNCyLAwNDUHXO6UeKRizUqngwoULAI7qcDK1J6sUcHgslOM3f/M3P08Uh6qayZRfVtzkf+12
      +8RiEC06dYhK/lH8kUz95O/zRaLSKSQzcv8CN8fJbZLnWlY6VeOmb5FSTtXZdnd3j5yQw79B
      HDKZTKJQKGBlZQVerxcbGxsYHh7G6uoqdnd3xSmK5HBKp9NIp9PIZDLCI01eeFLafT6f4KS0
      OYkrOhwO3LhxHQfL1zEzNnzbyE/9H4hH8Oqb11AoV1CpNVE42Mf42BA++KFPoFpv4v1TBhw9
      zN8q0HUNw4kg4kYJP3j5bUyeuST0OE3rlGk5ODgQ54hVKhUxFx6PRyQlGYaB/v5+RCIRGIaB
      QqGAjY0NRKNRrK6uIhgMinkhnOAHnxQKBZGUJOQWXvuGL7zKIiOzVDJ1CZZ5DFCAHOkBVP1M
      3kT8uyrkJNs8FwksyxJ1dnh/+DOkN8iij8pmzKkK2e5JDOwF4XAYFy9eRKVSEed46bqOUCgk
      qm+Mj49jfn4eFy5cwMbGBgqFAvx+PwqFgkgOom+b5uHxSPV6Ha/++GVsvXMVw7Pn8PDjT6Bc
      LmNlZQWFfB7XrryCjz9w6SdCfjZhKFRryL/6PGKREMaHBrC1uYHzd9yJUuEA+tDtIT+NAwD6
      okF81N/Cj770r9FMXEQ0GsWle+7H8PAwkskkLMvqCkIkPwL5kEhv0zQNiURC1I6dn5/H8PAw
      NjY2RDlI4pz1el2IUnSQodvthra5uWmRuU9F/TnIG4OuEfKozgC2Ax7iUKlURGEn/l2OlPLG
      IG7F+yBPNvcX8Pskdqk4i7xYKnC73UilUhgbGxMlx+XNSRsNQFc/uAxPbJpkX3L2yeck8I3q
      crmwuLiItSvP4/z0Kby5sIoSXGgXM5gY6IPf50U0FDyymeWx2Y2ZX39neQ2RUAADic65aL//
      Z3+J2YlR3NFXwkMXJ2zn5yRA3ymUa6g1Wnh1zwctOIBzd9yNvr7kEVxrNBoolUoi35uAi+RU
      hY4OD6RUz0AgIIL+4vG4qGG6uLgIbXt726LwX7lUB5986rSsiHHOQBYh2b57HFhWJ7iMwmbp
      GiERL9JF1+TShDLo+mH5EFmXIfm/l0lT5g4c3G63iBUC0KUM24lR8m/evor4cCBOSHFJX/ov
      /xmPX5hilZhNOBzquv0qOKnFSoZCqQyX08D6O8/ig/epLUC3C9SPtmmiUKrir663cc9jH4XT
      6UL+IIvR8QmhF5HPiedQcBzkBZ5lj/TKyoo4C2F/fx9+vx9XrlyBTmmOPp+v67gcuZOqTcGd
      QaR8UpUHOcDsuEmgxPZisShkQJJ7qQIDxZTLSSi9qJndeOw4HW9XhUyCct0qRFsoFLqUeFV7
      dqDqg903yWryja9+GfdODXWFg+j6UetVL/hJkB8AQgE/PG43asYQljYzt/ey2cZLry9gt9h9
      nrEYg6YhGvLjl+4LwPHOV/Hm3/xHDKR/iKf/7PcQi0aFiEcVNLj1zjRNIWZyPKSD23koOxkK
      lpeXOxJLKpWyKJSZ2ARXJk8KfPINwxA239ttg8JnSUcAcGzaI9UhpUmhkox0mj1np8ChSKLi
      Yr2Qnu7RASC1Wg0bGxu4cOGCqNcpv2M3Ti46kv6j+iZwaCz4q699FbNRF6Kh4ImR/e8CqrUa
      5t96Bj/78NzJX7JMLKfS6OuPIejujVt87PVmC8+mB/DI+z8uAgrHx8c7Td6aAzKlyweVAIcm
      8//z//o/MDIxjHqjjvX9NXzuw7+Kudm5QysQUTHK3yQbrSqeQo69l7kD7ULZ0nIcEKWj01Co
      X3aKKZXxpjACypMleZAiEakaBMX+U96zysJkJ77QPZ7N5vF4UCgUEIvFlHH1dptJbpd0Ev4M
      n0+y8rz2wjM4OzFy4vmUwWy38Nb168g3gEbpANdXtpBMxODQb48jLCyv4Ds/egnluoVXbmyh
      0WhgKBE60vfuj7fw5tI24rEIfK6T44RD17G8moIjPCoikVOplIgA4CdsAhAWJc4hHQ4HBhKD
      +Mb1r8IcaMDo0/Hyj19GwAp1NoAcxkobgZRNalgeIEceGYFIduc1RG8H+EmSPAmeFEHeZzIh
      Uj8oTJv6TYc10Gaimjv0m2ebyWPk12hz1mo17O3tifqh/Dxh+X3OYfiGo+doQ/KTd+QoUVrQ
      zc0NNEp5OB0OOJ0nL/XIweNxYXF5E6fGR1DJ7aPtCiPkPfkhIgCQ2trBE48+hrrpRa0axPjA
      fbj8ThrXlrPwuRuIBBU+Id2BiaHEbSE/Qdyr4a+/+wOMzt6JWDyOaDSKg4MD4VUmicHr9Qpz
      OK0zKcgupwvfe/kpBPo74dfuhBOvpy7DUB0dRFSfRCHaCERdVUqwrDTayd8nAWqT9BIScYgr
      kbVEjkHibE+m7ERFyfrC45/4mPlYCMi+DkAcR9rX1ycmuNdZWITQtDHtvsE3hiyS0Vg/8jM/
      h8XFBezt7WP9tct47z0Xb2teNV1HuViC5tAAs4Vay0Sw3QRwMicmwcjQIN54awH3TN2ND90x
      DQA4fWoabbONrz/9hxgfjNq+e7sKeKFcw1feLOPsI0+KmlKGYWBoaAia1ilfQ+fX5XI5UbKS
      ziim8JtObrsD178zj4n7R2HBRDARgFIYk5VLTdOEjkDlv1VmPwLOBahyG1HQ2wX+Dj8yiSfU
      kEcRODyZnRRo6g9tHm4W7aWs8mccDgf29/eRzWYRjUbFOcqkXKnMwpxQ8Lkhiw6fM+JAKgsR
      XSNz69TUNCYmTmHh9Zdvey5bjSo2djMIhiLY3tlBra0hEuztMefQbrdx5eo7iDiT+PtP/L0j
      iOzQHXA5Yz3buF2iGPJ7MO7eQCAYhuuW3sbPHTYMQ4hAoVBIzDkdUxsMBpFMJpHP55F8aQD3
      PXQ/MvsZZHJZ7Dh3YZCiSA2q7On0vyoMl/8+MiG3xI9arSY6S7V9VMF2vaCXuZLyjfv6+rq+
      zfN4qfp1oVAQhwGq7OzyuIhTVKtVzM3Nic0k2/7pfd6O/Js4piwKUTyTnWmX3iUxcGFhAePJ
      7kjKk4Dh8uI9d18Sv6dv491iqYyrb67iI/c/gZD/6FG3AJAr5BH2HwAI33bfeoHTH0Y4dDTs
      nm8G4FBHAzpEJRqNwrIs7O3v4ff+4l9iNDCBT3/8s8Jp+5Vvfwm6XASLGuKLx//xj8myrgxE
      1ciMWa/Xsbe3h93d3a7MoJOAnZmPJoEsP9xyRP0kEcU0O1Uu6AhUFZWWx0UiIpVLtyshouIm
      sqmW+iDPLxfZ7DgqF4sSiQRKtbqyv38XkNraxcI7O/jkez9mi/wA8MNXn8EDF4Zt7/+k8NjZ
      PhRf+wJeeOrLR3QtmQhRxiKZQRuNBuaX5pFppnH32XuEh9gwDHz2Z36xUxWCkFFu7CTAEUgl
      3/IaO1Qkt1d6W6/vyAtN9l85AQWA8EyHQqGu8ugARKJPrzwEfm97e1vUz6d+yxtSDinn4g2/
      LusnXCehZ+x8KLQB+/r6MHrhXry6uIEXr944buqUcDtrvLiwhZ95+EO2pnHTMrF/kAWsDXjd
      ty/m9gLLsvDcjX2k6mFUqzWUbx3EfdL51zQND973IM7FL+LL1/8U33r6m4KTNptNGKqkcPp9
      EsrSC/kBiCQIKk7r8XhEmtvfBihPmbzE/f39XaZXbhGiM7doQiienNcyIqTjGWf0vGVZokCt
      LMoQqAgB/xb3r5B4RlyF5sVOhJLnu9ls4sIdl3Dhjkv44h/9B6Xodhzczvw7PTrK1Qr8Xh/2
      smkkIrEu48dfPv1lrG+/gaVUAY9cGsBA/LBeUKPZwpsLW7jnzOhtr3m92cIrqxWcevxXj5Rv
      5OZ5usY5Oo1R0zT84LmnMb97A0N39eOF3Wfw/d95Cr/+5H+L06fPwJArm/HJkRFbRYVV78lA
      3jh6tq+vD8Vi8diQZTsoZLbxr//dHwB+J05FJvH4B96HjY0NnD171pZKyWINTahq45I3m2R9
      bm3iCfH89Bty1lGugWUdHluksvGT4s79E9QPWfyRRSl61+l0Yu7SPVjfXsboQPK2N8FJ4YF7
      L+Dbrz+FcqmO3XQa983djcfufkD0x+VoIBI6i7b1Dp69soblzTyefGwG9UYLb684MTF0J5Y2
      b2K4L4xCuYZE2I/9XAmmhS7/Ae//4nYe6/oMzr3v4SPHTvUywPB5WrhxAzeefhpv7ixh6AOd
      ciu1WhVGn4E//9YX8D+e+p8P6wIBneR3OjwNwBERgSjl7ZqyiM0DHW+dpmmIxXpbC+yg3W7j
      2y//EL7zTaTWtvHst3ZwUDPx5Ice/YnkYb7ZCeiUFkK0ycnJrjN/7VJAOcchsHMEkjgjR7QC
      R0Ox5QXm8u6dd92NL/6/VzA6kLytcctQrzewuJrCQb6Eh++7o+ueQ9dx6dwsnnvxKs6Nn8Fo
      /5C412q3Ua1XMRR34ff+2W9jfWcT/X1prO3V4XG58KkP3oc33rmGf/HHL+PuMxcR8KYR9Pvg
      9V5CvVHE0sY6Hrk0dmTzLhU8eOATHzgyZxxU/iWar+WlJTRffgmfPTOHcYx0/AAAIABJREFU
      YS/wzfwGTM3CWc8d+Hsf/YwIqjOy2SwCgQDW1tZgmqYI8FJRdW5LPwmi8XBmqmZGoQmqahKW
      dXigNO36UqkkztZNpzP493/6dby5egUXHg1hfDKBl7/2JgzjYeRyOWEb/mkBOQQB+/N3/zbg
      8/ng9XqPFMglUFmSqF/AYV3SkakZ5IslhIOH5UwsAPJM9BKr/tW//xOcHZvFtfWbeOCeC9je
      S2OEbaqt3X2EXVF87KEnut599vIL+PjDgyhVmphfW8AdcxcwNzHV9czdZy/g7rO/j3qzgetL
      C3C7XDg72Qmmu3ztdXzlB5fxgfsGEAkeJig5G7muogkEcv+X5ueR3dnB1LlziMXjYm625ufx
      gZFh6JqG6VAfstev4O7x9+LSuUvCi2+aJhyf+tSnPl8sFjE3N4dcLodSqSQyjlSUh7yoVAkB
      UNdhlDeQYRhIpVJCDuaKKadyCwsLovziwcEBcrkcVldXkU6n8Z3v/RA3CiGYTTfymQ1sLulw
      OeL4337z10Xs93EVp98toGkdvwjpIqoiuaQvEOEhzkOhIuSI289k8WfP/gjXtvbwcmobry6u
      4scrG1h6Zx6z4yNd+cAq/SKby6OQruNXfvbT6I8ksbtVQD5bRiTug3FLxHO7nHj1+lu449S5
      LqR0OV3Y3n8LE0NRfOXpV3F+5hKcNmKo4XBgMJFEX/TQhDuUHMTM+CX8u688hfVdFxbW13Bm
      IoHBiBtfe/ZteHxBvPXKK6jdUv5rtZowG7999SpSzz6D94cCuPzaa9DjCSzfuIHXXnoJ0b1d
      TCXi+JuXnscry6t4p17Akw++D3/5vR/j3Nwk3n777c6BhL/2a7/2+VAohJ2dHXE+L1k8gG45
      iyaNn5vFT5ORZVdOtcj8RPXoKR+YFpXErZ2dnS6xwOFwYGd3F9/45l/j6kYF7lAS4VgSHu8s
      guFpNOoVfOLxe7qO5FHV+3y3As0Tt2JxUSqdTh+Je2m1Wrjy+hV867tPIRIK4+1r1+CemcLg
      uXNITEygb3oayekpWH1J/PULryCfzeIvnn4OE8kEIsHAkbmpVGtwI4AL03MYHxzG1MgYnnr5
      GZyaGIDhNKBrGhbXUgjpcZybmu0mdABefPNleN0G5sZ82D3woj+euK050HUd91+8H1Oj01jf
      fhOzYzE8/coCZs0Igvt7mNKA/NISru3sYP1738XSwgLSV17DJbONOwcH4TIMTIZD+MGPfoSL
      sHB3KIjpvgQ0AFvZDH6wOo/IE8P41g9+hJDhwUAiif7+fsTjcRhnzpzp6kgvezv/n+zjclgB
      t2VzoM2SSHQm54//9IsoVJr4p7/+OWiahtW1dbx1/SY8Lid8Pi+cLjey2QN8+evfhOEOoqAP
      In5qFA7HYR0hy7JguP344z//Kn7xUz8LTdNEuOz/XzgBcEhQaN5oAzcaDXz+934XQ7Mdl5Xu
      dCLhcKJeqcAa6kfo7By+8P2n4IvFMHQraYVDKBbDvR/9CEzTxOTgKLbTOxgZSB5JZQwF/Xh5
      /1oXsfMHPFhJbWJlcR+BgAfp/AHumr7jyJyGA0E8eOcvoFIr49ryVXzk4SnML15HpP8Ukiwm
      6CRic6PZQOuWmblSbuLM7JDgJn3BILKlEmLnzynb0zUNn7lwXmrRQr5Sw060CN96AYGkE9eW
      r8B8qYnP//r/0okKuHz5sjU1NYV2u911WgiPnwaOWntIGZSPFKXOqYA67HK5sLyyiv/7j76M
      ++48j3K1jutbVbjD/YBloVouolLKw4Ma2pYOZ2gAhsstojCpncL2PO6e7sOZqRHcceEcWq2W
      kNkpMOonCcT7rw2k+xB7r1Qq+Mo3v4FirYaCQ8PkpeNjfk5iAXr7xZdwwQk8dqkbUSzLwo+v
      vI0nLjwBt9OJLz3zV8gWDxDzJfBLH/n5zsmWrRYcun78fFoWUtvr0NwBjMR7e6u39ncx1Ncv
      fueKBXz9B/8RZyaCyBXKcFdjeP/Zu48dlwzNdhuGruN3vv9NLEVKMMYiiA91wiTqlQaaG238
      7//wX3TOrchms8hkMpibm8Pe3h4KhQLW1tZw3333KU1OsjlOZQ/n/3MgWb/ZbGLy1ASe/OBD
      +MZr+/AGY/BGD9tweQMw3D7oVgMbC6/DqugYGR9jc3zLEmM28SuffVKkuDUaDdTrdVFUqVKp
      CLGOstXo3XcTaFqnagRFhH7/6aeRD/rw1utXcO7hB39q5s2ZOy+h/uYVmFYnAYV/3zI1hPz+
      jk8l3I/B8BDef//DglvYyfVHwcTa1gbGT507cseyLFiA+PYPfvxNJEIdX0jbcsPpaOHn3zuN
      QqWGhy5O4p2VXVxdX8HFsVNdbRzkM3jq9at46J6HMBbsNk6s7e3hd1/7HtK+BhJ3DqC/f6zr
      fr1ax8/d9RmBD47f+I3f+DwdlN1oNHBwcACgU82Ax8x3TRbbBFwP4KDaOLJeMHlqHKnFa8jU
      XTCZg4mO8HE43bBMEwNjk+IatW2abZwfcODC2VlxujophTwxwjRNVKtVFAoFEdLAozvfTUCK
      bjgSQW59A1osgsGZqeNfPCEYTicyloarzz2P89OTYo2WVlNoVRw4MzEDTdMwM3oK06PjXZvk
      OCB9DpqOsaExhH3qtFhqUdM0vPjGy4gGNXzkwWmcnohgZjQKr8clAvTiET/eWF3Gs2/cxF2n
      psV7Xo8PlqZhpr8j5y9ub+NPrryAtzKb+LJrEcG7kohNJ+AOHE0ychgOlLYquOfCvR1di2z+
      iURCKAZ0wp9KblMpxUcGqXWfXSs7LPj9z336Z+Aur6HZ7CiB9XpdlGBsNBpwB6Ko12qiWljt
      1t+F3TV88LH7RZUG/m2Xy4XSLZc51fPxer2dujqWKUJm321AczQ0OIjP/MIvIOm+vTDlk0Df
      yAjaZy/gT557BVv7aVRrdSze3MMnHu62ucuH9R0HZIQgR6AKZLz5R5/6x7j/zr+PP/9eyvb5
      Dz08C83VXQLRsloYjifFQd3/Zv45pO41cG26hthkHA6nmrhZlgXDZeCtzTeQyWQ6BCeZTGJk
      pJNl5Pf7MTw8LHwB8gRwqq6qSwkcngTPQ37tNgolgvzjX/wYrOI2AAjTIFlCvP6O7MYTRhwO
      B+YGvRgeGhLchDvoqLRjvV4XZTSopk65XEbp1intf1ee058G6LqOBy9dwsHGlu0z2d3dI9fs
      jBgEmqZhdGYG40+8H199ZwVPPfsy/D7PkbXmbXDHm/ycXFaS9DR+v1dZ80aziUazBrsea5qG
      4cEgGl3ppgbit7iEBeB8YADYqMIf6y6DYwfxuQi+8Nf/pWNiVg1CtvSoGiOLCz89hCaAg9yu
      /K/VamGgvx//8MkHEW9vwTpYQi29jMzWEsr5NMxW56xhygLzer3QdR3JiK+r3/TdVqslnG1U
      RIpEIrfbjYA/AKdhIJfLCafbuxUuXbiIX3rkMbTWNpDe3EK71ULx4AC5hSWYqxtYfevakXdu
      xxt+7vHHkYYbn/nAz/YUCal6HSVG0ZxT5WyeC91utwU34HVUyRHKoVqv4ZlXvoFf/tjsEacd
      h0fvm8B/evlr2MgcTcTXNQ3/4O5H8T8NPY7o1zLIbefFPNiBy+dCQ+scu2XID9spsarfZKeX
      Q1S53H+cwkmb4MzpWZw7exqWZQmb995+GmvrG8jk8tjPVVCoNLCfK6Np6uibOa0MSSBxh/dJ
      VtQpnocf4fpuNZkODg7iH336s0htbOCdhXn4Ykk8+OFP4Gvf+TYuvveRI883axVYDjequTRa
      lgOxZMIWuUq5PHyuk3m4yRNOhIsMIGR1U1VqlkvGyyL1tcUbuDCl47ipTx+UMZeYxHCP8JlY
      IIBPPfQg/p/V52H2mdANNd5RH5pm87AynKyw8t/yi/I9VZVkynCyS5eUgZ86Q8/5/X5MBYOY
      npoU1+gbzWZTOMwozJqg18ZTcTmq0UnZRO82sCwLb1y9irnZWTwQieDt69fxL//oP0GPRRGL
      Hk0SKWTWUa7EEQ5bSC0sIdYXhwrDKqUybn71W/jnn/uNn7hfx80XhXgQd7EsC6Zl4nsvfgfF
      8hamhg2cn1LnD1D7bdPEv/niC/gn7/s5XEulsJPLYSeXwyfuvhvhW5lg85ub+M61q/jkPffh
      n02+F7/90nfQ/8iYsl2C/XInJ8Xg4ohqQBxpeciDajNwK4+qMhn/jmxNkp+Ta7lQ6AXpAAMD
      A9ja2hLlsoUVQuqPCt6NiG4H9Xodf/b0dxF76QU0XU7ERoeROHfG9vlIMonKahtOh4VmtYWF
      H70ABP2YvevOrufarSYGwjG4nSc7d/mI40nXlcouf6bdbgsDBXGI3Uwa0cA2PvbgeM/vaZqG
      jb0DfP1HNzE9M4svvv1jBPxehIN+5FwN7BcKCHi9cFDSe8yDby1dRavUhLd+vG7X9jexsblx
      mBOsQlguDslUlXuGVZuBkJ1zA7tnZeVarqLA+0cch1dooJh+Ln7xPvAx8Hbp/9tNz/yvCR6P
      B08+9CiuHOzDFw4d87SJzZubqMEJyxjCdDwEp98H98TokSeD4TDKHjcuX38L77lw6ch9vtZc
      1OTGDV3XRcKT/DxweLAK3W+2WvjSd/4Q/92nuzejHXz1h9cwMdoJmuuLHqZZFpwGvnvjLey/
      /iJclgPOtoaR00Nwu5ww4yY2lwvYfD2FxGwSbr9axPMGvTjIH3Q4AKCOi1eJO1xMof9ViMUn
      gjvNeHsq3UPO7FFtSm6VoAoR/Pv0t8qHQUD3yOr0boaH3/MeNF96EVcP0vBHIz2e1DF2vlMq
      3DRNXL5yBVNnz2BkttuXUC1X8M6XvoMpXxKvvH4Tg31JjA0MdT3TFfB2S85vt9vI5HPIFQuY
      HT+lnDtd19G45RuSC6wtry7iww8Mw2kc74OxLAuNppqSDySiQAIYRqf0e7PVhnGrTYeu4z0z
      M/jx9ZvYWF9F8okJaA4d2poTmGjC6en0t5Kvor+v/+hJ8XYWH7trhEi3WwrxpPfkTSV/m1ix
      pnWccvyUGDtdhnMz+ZSSdyNomob3PfgQXK+8gtf2t+HruQk6oOs6PvTxj8OqVrG1vYP44IC4
      Vy7k4Sy30HS3cGpgFN98+keIhP146K67MDGklsmvLy3ghStvwql7sbW/g489Xscdc2ewtr2J
      myvLuOf8RZQqZXz/xZdQLNbh8ekYSCQQCYaQPsjhZx5/H67Ov4RPPzGgbF+GZ68sIhQ6PqhO
      0zS4nIbwMtNa3jkzhaGDAnaXvXjs0Q8iOhvBV577EiqlKhwhDTO+06jWqkePSJKRRb7HkZGX
      VFe9Tx3k128H2VTiC/kEGo0GMpkM4vG4iKSkwDy5GBcV6JL75fF4Tnywx7sFnnnxRVzJ7SMY
      6b0JipkMPjxzBu1WG99ZuolI3yEyWaaJ57/yVxgqu3DvqfMI+zui1fzGPLw+AxbacDpccLkc
      +Nijj6HdNvGFb30b04OdSNBXblxGPNYxJ1crJgZjg9hMb6Far+HC5Fk4DSearRY0DShVywj7
      Q3h14WX0x6r43MdOVlT3f/iDb+I9d9wjiv4eB5zbl6t1xM+9B3ff/zD6+zuxRvvpfbicLnz5
      L78EUzfxK5/91U7AJD8hRgZZdOGyvFy9jHeCd+ZvuwFUYovL5UIqlcLIyEhXgj3/Jtn4SXHm
      cixZfd5tMUEnhTfefgvfn7+BUH9SUD5dOzxtMr26hosDw/jE+z+A5198EZdzaQRucQ3LsvDU
      n3wBnxy6D8n/r71vDW7jPM99drHYXdwBAiBBErxBpG6WRMqyFduy7ESqLDdW4rhNXLdNk84k
      nU6nM/3RzrSd/uxM27Rnzp8zZ+b86pxzesv0niZOk7FzcxM5USxLtnUzJUokwTtBEncssAB2
      +wP8Pn5YLERSEklQ3GeGIxGXBQi83/e91+fx33+HnV2aR66yhOWVLI70H4XH2ZwRYt33PPYd
      /NYvDcHlkAC9jDffuYXjw0PoDqxtQJdvxnHx+hwEXoPb0w6/p/71NpJ5AoAknPjq7/8J/T2d
      TuPP/8efQS2WITlFHDp6CKdPvIBYLFZzgcx8ZXbe1WxXJyOCzRRSjG/6QdwMMxeGXYzGmgOB
      pmmUAIsUYUjzEwBaTNutGDlyFKLdjjcv/xzu7k4Idjsq5TKy8ws46A/i9QufQ9vqTMfzzz2H
      a1//e2B1AXAch5e++AZu/ts76y6ArlAE5UoQQx0PXycpV2xru3mliLSiYXxuBd2Bmsv1we0p
      /OTaAvqjfQ+dvUvOTiKRSFCeKJ/Ph7/406/Ra7DXEQDzDJBx9NHM0Ix+udlCMasTmC26ZmAD
      bJJNKBQKdD53vYXA8zydPlMUhSrbb/T1WxWHDxxEtLML7/zsp0inVhDy+vCJ86/UDTMBtc/9
      cE8vrisKJFnCle/9CN0HhyBskJXGLjyaBIEotCOZKaAz5APsHozs88MfXnuvH91ZQF939JF8
      J+lsDnfH7tQRpTXb8ARg/f594//J70Y6P7NF0IwP80H/UJ6vEaJ2dHTUnT7G7JRxoZHTShRF
      2hG62+H1evGZl87f9zG6rsMpySiuJCDJEjypCnzvzeJgrDH1+SjQzNX1OP2YnJuqLQAAT+zv
      r7vf5RBRqWoQmxhqIZ/D2EwCvdFu+J3NaxflShVPnb2AZ559bkPvly4As+wLATEkNr1p3GmN
      i8VYPDO7ttFVanYbANoOzWZ72PJ7s0UM1DI9oigiGAyiXC43EOM+7viXb7+JWx+PInrsMCIq
      h0P7H426ixk4joOm64DBpuaWr+LCi831BNwOO1KltUyi0R6cLje6g8WmFX5ic6kKj5ef/sSG
      369AStXGFzTm7Ml97I/xxc189gf151iXhwSwqqpifn4eRNNsbGwMXq+XVoH9fj8URaGZIkKa
      yvb6PA47/2agqipCORHnek+AS3PYP7gxadPNoKpVYePXcvtmcwSpbBVeV+OMwD++/QEUtYqA
      247rt+9gqL8fPrer0T50HdliFf1B89mTqqZhNlXAG7/7R4isdjNvBAK7W5u5MM38/PWqxmbP
      MfrqzVws0kRFgvHFxUXaeRoKhaDrNSUZr9eLUqlEGagVRUGhUKDEt67VCSe2WLOXdn6gRkfj
      t7sR6+zfkutruob/+OHforc9BJ9vCEO95ru8LMkoqmXIBurEaLsXl29nMJ8soFgqoVgqwec2
      Vxvt7qgP2jmOw9xKGprkQe+BY/j1L5+t8/s3AoHstKyLw8LYwsBxHLLZLC0gbSSYbFbEYp9H
      JsHI6y0tLdFRx2AwiEgkAl3XaeMcx9WquOFwmAa7pGWXzU7t5mzPo4Db7YZqax7xmm16m0G1
      WsVTPSl8/iSP9+79AD+7voCSWkTQH0VVXcThoech2AScOfEK/u8338brL3WhO7zW1vD04V58
      //13MXzwAICB5i/EcXUV5EyhiLwUwGu//dvojj64ao5ABMWMmZFmvruu65BluSHorH+v9QEy
      e23yYbP5eXKtVCqFdDoNjuMQDAYRDodppodMKJHrEJoVlqyLZYQ2KoLvVdhsNriCzXuIHsb4
      706PYXFlARcO1HL5T8dcGOy4AxvPYSV3F51+B/7mfRuGD57G3ZmbyOYELCVzdQtAtAvobNvc
      eGoiU8CJl7+AwQMHG7Jem4VgpnBIdnrW3WFvJ7KezYJftvDEukbkdvK7ptXGE1OpFKrVKvx+
      PxVAI6N1bKaHPA+o9aooilJHK2iWzgVA1cX3IjiOgzvghrqsQjTp/NS1Mm7efh++7hG0i2V8
      cPc2XO4gutx2fDy3gPZQF/Z1NLYvlNQSBOUtnIpq2Nfhpd97wFVzcbwOAXNJBQ5nG6YWp3Hq
      SQXRcA/czsbmtM6gFyoj9QrUsjl3ZxfR3xGELNXedyKZxuRyDr/1+3+C2OCjCeQbrILt7WmW
      XiRgDY4EnkajJzs4KUhls9k6EihWeIJwcd5vPI9dcERzgB3WYBcIeT973Q2qisC7ty7jk8fM
      UoMcesMhzKhVqItjiMVGEJ+4inlVh8ZJCHrMxS4KJQUcNDwVay6O55QEFIs5KOUM9vd20Wq1
      EV1hH3728Qq629d8/O9/OIb9r3wVb731jzh/qB1quYyrxQC+8Prrj8z4gdUYwNjnb5bRMQtm
      SQaJGFo+n8fKygrdcVnSLJ7n4XA4qLYWed2lpSWqP0ZG6djXMPvAzJrbCAjz8143ehaD+4dQ
      +jhleh/HCxAFAVyVg64DAl+b0Nofewo8qnj32lWcGn664bvIK3mE1+mMcEk2tNlH8eFUCdML
      DvR1NvIEzS2l8NZ7cRzaVzPqqqbh6pKOwXO/jsEnRhAdGMLo5Z+gXC7hU0d7cPbF5x/8gzD7
      +0kvkJmxNavulkolyLJcZ/iJRAIOhwORSONxSYyU/SE0fzzPY2JiAgMDA3TelD15zGBciERe
      SNM0+P3+PevuNMPi4iLe/F//hN5wY7BYUXO4cusykpoPJ/f14FZ8HLLDjy6PhLlUErzowXD/
      Wup0MZlAUS0ivfAmvnzKCcG2flatoFZxfSoDoeMgnj9xmN5erlTx19+8gnC4G8vZIpZyRXjt
      Oma8h3DqM79ad43E6GX85ufOPfLW9bqBGPYkIG6LsT+fGB3hq5ybm4PT6URfX62Hg3Vh2GKY
      WSBMmNyI+h8RjlivKMferus6JZglQzIW6hEIBJAtF0zvE0Q3Tg5/kv7+3JE1NyTSXj9WmEgt
      4b34FSxlVvCVoxVT40/ny/C67FBKFciiDTzHwSnacHJfAP9+5Qb29XWjM+RDOqfgf//zzzE4
      EINgs2FKsYGLnoAmSXji8JP0eoVsBtnpUXz+3LNbMrfBA43DI2wgS8D69cTIpqen0dfXh/b2
      dsoGwOpxsddijZi4SCSt2dHRgYWFhbr8P3kuC6MbRt4jmQhjVeEtrMFut8Pb9XDZkqpWxbc/
      fAtdsU4MHz+CmZTa8JiiUsLXL05DKZfxzfdnkDVMTJ495MO/festAMCt8Xn0dPdiPpnD+4sV
      lJztOPkLn8XI6fPwB2u5/MTEx4hyy/jKL59H8AH1JNaDQFoMyCK432ALuV+SJMTjcfT01Ebt
      WI0xo3/Ogk2xsiorRO29WQBOYMw6uVyuhkVjwRx9h2LIf5CAQ5I33Qg4szSHSx9fxv5Dg7Db
      7VhMJPCJYOMcxXeuzKJarWImr+GJrsYAweuwY6TLjn/4xtu4M53ERFrAsV/5Q5w8dqKBNWIx
      PoaXj8fQ2/PgOf6NQCBBLNA4z2s8FciQ+tLSEtra2mjgygbFbLrUCHIfGWUkr8eeApFIZN0W
      a6AmLkE4idjWbQvmOHjkEN76ySii0uZERO7NTmA0O4ZQLAjvqlTp4sw4HCad1K+dGsDNiRQi
      EvDt6Syyuh3PDdTXII73+3AcwGTYhR/1/yF6hmpEvWzrzdy9UTy/P7zlxg8Awvz8PDUgklK0
      2WxwOBx0ly6VSvD7/dTvJyrczSjwCMyqsWxOnnwRRHx7enqaujVkyMWMnc54slh+//ro6OhA
      kb//90Xw/avvIKVmEHK2YWphBoMjA3C713Z0p9uHlJI1fe7h/trcwRvP9ze9/vVZBT/ODyL2
      Yn06M5tcRjkxjl96/gQikY4mz360EMLhMCqVClwuF93BiZHn83naojAzM4NoNIr5+XmqlG4W
      nLKngdGFIW0MRi5Pcq1QKERPF/ZINFaoCf8/+7oW7g+bzQZvJABsQJ5ZtksY3D8AXdfhHfBC
      MGhJRzCDk7H1GCrWUCxruDFfQrao4f10G3wnv4QDw/U1iZW5OI6EBDx1+uVtTWELpA2C0FeQ
      INflctFVTzox4/E4QqEQZFlu2P2b+fsEJMtjpiVAskd+vx8TExMIBoN1BS1CW6LrOs0cWXn+
      zUPyOoCE+X2zy/O4OzeOxWwChaqCo7q54ibHcViu+qHplQ2xR397DPiAP46xyz/CS7/7VzgY
      CMJhIrYtpqdw8vxrm/6bHhaCUd2FuBysZhXP8/D5fHQIhZUPNcIYDwA14ze2XBhBdnyPxwNd
      1ylfvtG9sXL8Dw5fmx+l2WQdGVY6n8Ht6THMlRfQH+uFR/fU7fhmEHUFHJoPpVSqGi7HCxhV
      O5HlPHj2C78DZ/dhBEIdEOXGlmhd13H16hV88fUdWADGN0JgXBSEg59lfzb25wBrOX+SsSFF
      MzbANus1stvtEEURPT09TYNoCw8HfzCAscIUJF8tpZjMpvCtj76Ljs52xPr6Aazmxe+DxUQC
      AS4JwNxHVysavjY6iEPnvohoeye01Vhu+JkX6x6naVVwHI9Mcgn5uXv40q+98TB/2gODcoMa
      Mz5GFUiW7588hu36NGZrjLu9MXhlryVJUp1qpIWtwf4D+/H+N36CEGoLwON0Q4SISEdNDnUj
      6dG2QABX7gUxk1QQbatPhS5lVbx5Bwg9+QKCq1rCNpMTO5WYRbCygkqljCNdEYyc/vSOJTKE
      QqHQEFSWSiWargRqWSCPx9OQ1bnfScBWgdkFxrpG5N9WpiZ8nOD1eiGGnPR3wSagXCg3TTWb
      YSWZggYg4q+5MulCGX8T74FN9oCTXNj3G1/GrQ+voFLK49aNmzj65NMN1+DSc7jw2sst8Z0L
      JOVZLBYB1Hx/khG6ffs2IpEIpqamcODAAeRyOfh8Pqr2rqoqAoEAkskk3cHz+TxtRiMpTaP7
      w4KcIlYqc3tw/lcu4O/+8q/R3RbBSjoJV9C54YTC+NQMup+9gJHhM/ir2XEIehkCp2H4jS/W
      fa9t4TB40YXAKhWLWioiOX4dQrWIhKLjq5/9ZEsYPwAIPN+o9EhSoX19fbh48SJOnjyJa9eu
      QZZl5PN5JJNJZLNZeL1e5PN52uKs6zra2tqQy+Wo6gzL22lMa3IcZ2V0thmdnZ34jT/+Kj68
      fBU3L46jZ2DjxaZyVUPf4EFIDicw3LizA4BWLWLu3h1UdR7z47chekLQF+/gK59/GbquY2lp
      GcHg1rQ1PAgEIs3J9tWT+Vue5xGJRODxeOjJQMQnBEGA2+2GpmnDAqbkAAAOrklEQVQoFovo
      7OxEKpVCMBjE8qqSh67X5nKJS0V4O8n/nU6ntfNvMziOQ3t7O06eegahSBjf+Od/gsNR2/zi
      E3dR4iTs627HxNQM2sIR+N1rfr7NZkM+l6ktgCbgbTKeOvMKAKB3YBDp5QSGD/fR7F1n58a4
      QbcLgs/ng81mo6JyqqrShQAAQ0ND0HUdw8PDSKVSCAQCNEUJ1NKSHo8HdrsdwWAQNpsNXV21
      AIjs9pIkoVwuQ5Ikqs5i9e/sHEj7i8bWbrQiVM2BoVgXpifGEGiPYm56Cv4DtWptKp2Bzynj
      7kfvoe3sZzb8WguTd3D0hY0/frshEIWUZoEt6doUBAGkakymvwj8BqJWVs7UZrPB6XS2PAX5
      XoMkSfjB996Gz0tUZgRwUHD1gxuIRPxYmJkCx7DCzczPIzT8yYZ05rrgeNpq04rgCYMCaSrL
      5/O0u9NsvpZMepn17BP3RpZleL1e+P1+eL1ey/hbEKIoYt/gEKrVWmavUqnUJsJEO3joAIe6
      E0KQ3Xjy1BnI93F/zBCO9mP09p1H+t4fJbiZmRldFEU6jyvLMg2K2bSl0eCJwBxLqmW32yn3
      poXWR6FQwP/82l/A41rfqJeSaQj9x3H4xLMQ7BtPXFTKZThXRvHpc2ce9u1uCQTCpMZxHO3L
      l2UZ2WwWPM/D7XZTTV2SsSG7vKqqVNxOFEU64mhhd8DpdCLa3490YnHdx7b5PHjru/+KOxe/
      g9nlNH7vz/8PuHW+a13XoZYU9AfMB+tbAbwgCLS5LZVK1fXrE9YFh8NBxabJAhAEAT6fDz6f
      Dy6XC16vt2X9PAvNMTxyHPl8ft3H8TwPSeAhONw4cvI0wHGYjd8zdZMJOI6DXZSwnDZvnW4F
      8G63G4qi0AF3Eg/IslzHqc+KULhcLng8HjgcDjidTrjdbsv4dymOHz8OfoNawe3BNuQzKaTm
      JnHxW1/HjTf/H9755tfv+xy7KGEuuf4C2ykIxPglSaI0JkBj1ZacCIQVzkphPh7gOA7BUAiF
      dKqmsXWfxx5eLZoVFAVOoQBuoA+jE3fwX//xD3jh1V8zfc69j68jOXF302OY2wWBFLxI+pPn
      +TrKEwANMpgWHi+E2zswnlwB1ukJIre7nGtB84H+KEanJzE9fgfRgVrNoFQs4tIP/hOSw4m2
      UDt4TxiFQoGydbcSBNKvQ9RTrJz93sORo0fxwXuX4Pc9WLDaG/Ji7NoVzMXHYRclrCTm8fSL
      L6FYyCPcGcXolXfriqutBKFcLlMVRa/X25LHlIWtxeDgIHJKEb5NCAdWKhXcmZiCyyFBdYYg
      BUQMP/NCTYVHqrnJHl+NiiXgklo2RhQCgUBNLrKFhlB0XUc+n6cEXIQ6xW63t8x7fJzAcRz2
      De3HlfcuIdLejlCwkcKQha7ruDGVwJkv/QEWZ+IYH72BSE8fRMl82stlb93ZbeoCtRrInHJ5
      VXX8fuk2Cw+Pz776KryyiJ9e+jkCqwwg90Oo/wA8vgA8vgD2HR5u+rj0SgIjsa2nN3lQ7Ljl
      E0Y5liMIqA3JBAIBtLW1wev1UtlTC1uDaDQK3i7i5XNnMT45udoaYb7pzMzNo1oqolJuZIdj
      Ua1WYE9PYeTY0a14y48E27IACBluoVCgM8UERNmdGDe781gGv7149vQLKChFfP5zryKTy+Hm
      x6MoMZsTgcPhQCG5gPslTWcm7uLH//7/ceHMqS1+1w+HLadYIOzNhUKNnLVYLIK0YDeDZfiP
      Dmbjqs0wMDCAarWKSz9+B+fPnkE2l8N33/4ePG43BEHATF6DJDvhDg7g/Euv3feanb0DyMev
      w+fdOH/QTmBLFgAhwCLySyzFCpkFsLA9MBIer4fBwUHcvH6tRlHjdqMMG7TuY8jk0jj76mcg
      yY2coGbgeR7Bjo2rNe4UNmWJpGWa5e5UFAWZTAbZbBb5fB6ZTAbpdBq5XA6KolCfnoAtsFnY
      Hmy2CvuLr1zA6Ng9AMAbr76CxVvvIXbkyTrj30hSIqtydaInrYgNnwBE4ogwyLG3A2tZG8Iu
      YQbC7NaqZfHHEQ+SPbPb7Qgw6puf+4XncfH6JXT3D9LHcByHbGISP7t0DUP9YSRTSfijIxjo
      Xxt5zOeytMbUqqg7AcgOT3ZzosxYLBaRyWTqBmXM2KOBeo5Q0xe0+oi2BSz9jJGuZiOLord/
      APl8HuN3R5HKqQiKGhanx9euo6kYuz0Ov9cBTdOhlkrghfq4TpZbtwBGQBdAtVpFLpdDJpOB
      qqrIZDJUwbFQKNCd3sx4zahOmt1uJNiysDVoVtjcaMHz6NGjmF1YwNTUNNxuJzqDPihs27Sm
      wx9sQzKxiFxegexyo5hN111D8gSQzbZuKzSwSoylKMp9dwYzluaN7CJmNCiSJEFV1QaSXAtb
      gwc9bSVJQkd3FDZdw/j4ONwOEWW5gus//SGOPPspcIKEgYPHMHDwWMNzs8llLM7GkV5Zgqo+
      OkXHrYBASG4VRanz7Qk1CoGZcDYLIz06+T/7PJaBzsLOYDNp0eMnnsZ3p+IYOXIINp7DvYl7
      mJidQ7V6GjabefhYrVTgzk3hs59+hmo/tzIEAFT4moAYLlkE7LFpDGCJwbOZITOSXcASsmgF
      bOZE6OzsBC9KsK/69oOxAUwnkrDxzb/HlblJnD96CD6fj8aUpKerFcGzOzdr5DzPw+l0UuE7
      cj/5IacFEdAAgHK53ECCy17XojbfXeA4DrKzvoc/nVdQqVRMH6/kc9jv59DbW9OOq1QqyOfz
      yOfzDenwVgFPOFuM+l6iKNZRm5dKJfpTLBahKApKpRIKhQL9A8lCMKrLW9i98Hi8daf76eOH
      cf3d75nGgKnEHPb199BEhyAIVL85k8msK6m1E+BZxUYzdwao5YUlSYIkSRBFEaIo0t8lSaIT
      ZGbZHTJjbLfbrUGbXYiTzzyDexOTAGr2MTYRxxPPnqnb3NRSEbPjo7ArK/jo2g388Ic/qqPU
      IQsil8u1XAZQsNlslLOT+GzrpcqMGSGgdtyZrXDiLlkU6LsToVAIAiNwktFE2Jkh+lRiHt1C
      Fp967iBCoVCdG12pVCjrOGEO53m+pQav+GQyiXg8jmQySVkgSL8O6/oQbiDWxyf/kjRqIBBA
      Lpero0UnHEKW/787wXEcPnX2HKZn52obY7W+taG0FMe5F08hHA43JEcEQaAxZDqdhiiKtMDa
      KhA6OjogCAKy2SwmJ2tHncfjQSAQgNfrrTvCjKlRnueRy+XqFCYJzUq1Wq1znSzsXnR1d+PQ
      yHFMjt6CXq0/5WWh+U5eqVRQKBRgt9vh9/sp7X6xWDTVf9sJCOVymdKYE1XIXC6HqakpALXF
      QDSC2YwPACwvL9NFAqylQFkBa2uMsTXwsP1Xw8MjKOTzqMRTAIBSUcHy+A18+hnzYRdd10EU
      SGVZrpPSSiaTcDgcLbEAuEQiQcN5ohhJDF3XdWQyGaRSKfoBEooUohdAlGHMVGBkWYbT6bQW
      wGMCXddxe+wuLn00imh7AM89/WTTir6u60in06hWq5RHlsx2Z7NZBAIBuN3uHbcNugCMDVPE
      0MliIJ2BHMehXC5jenoaPT09NPBlawSkuuz3+3f8D7SwcyCpT57nkUqlaG2pVCrB5XLB6XTu
      uHssEGMnYHdw4vsTOnS73Q5VVTE5OYne3l7KJFepVBoo1X0+n2X8exBkArBUKkEQBFofIhy0
      qVSKCqbn8/kdH5ASyK5N/Pdmi0EQBJTLZcTjcezbtw+aptGAhvh5LKyen72L0dFRKp7odDrR
      1taGRCKBcDgMVVVRLpexuLgIj8dDZ0xisdiObJgC27vDpi7ZSp/dbkelUkE8HkcsFqM5XpvN
      1hDIkIDaWgCtg800wD0KBINBTE9Pw+PxQFVVcByH5eVlmlYPhUI0tiwUCtB1HbFYbFvemxHc
      4uKibiZqTXx+ErxMTk5iYGAAwFrPDwH7AdtstpYqdFioV+/Z6u+F3VDL5XLdFKGu67Q1gud5
      lEqlmnYxo1G93RDIbm9cBMT4jTu/0fiB+r5/oixjYW/C2PxI0uGk5V7TNIiiSGsCO50mF0ir
      Ktu3TwJesvNHo1GUSiX6hs1ODF3XrX7/FsR2uz8seJ5HpVKhlV9ZlmnCRNO0lsgSCgAajkdi
      /BMTE9Q3q1QqcDgcqFQqUBQFDoej4eSw5n1bD2xvzk6QEZBcv81mo64QYSEndaedhACgLgtE
      BPOI8XPcGrUFCX6dTic1fnaHcTg2xhljYXvBfkfbuQhIHxhQiwd8Ph8kqbUG5WmHGmle0nUd
      4+Pj1PhJIYN8iMbhePKvKIpWu3OLwpjV2+7XdjgcLbs5Uv+FEFbdu3cP/f391PhZChQANF4w
      tj44nZvTj7WwfTAa/04thlYELwgCNf7x8XF0dXWB47i6sTf22JQkqaHqa8mjWtitoCJ5CwsL
      6OrqgizLyOVytA3arNmJ9SFlWbZcn12C7Y4BdgMEVVWhqiq6urooZw9JdRaLxboAmc0Ukc5Q
      q9vTwm6GwAYorFAFqdYZ02dELBuANea4S8CmQsm/1vdWg0AozFmwxk7iA3IbMX6r6LW7YAW+
      5uCJ2wM07hQul4sGvCzcbjc8Ho+1i+wisC3u1ve2Bh4wT5ORHg7SzUcgCAKdArPQ+jCmsa1s
      XT3op8EWS8iHVCqV4PP5oCgKbX9uhTE2Cw+G7egG3W1o4CohH1KxWKStq6Tvx+12WzvILoMZ
      jQ253QIg5HI5CIKAdDpNDR0AZXoj6U6Px9NSPRwWHgxmre97GfzS0hIcDget5hLaQ5L9sYz/
      8YK189eDL5fLlMiUzfEDoDR2lvFbeFzB9/X10QY3AHWBsMfjsY7LxwBGykILa+DZGgBhepBl
      2dr5HyNYRbDm4JaWluino2ka2trarMmuxxQ7OR7ZqhA0TYMkSS0zombBwnZCkGXZKm7tEVjf
      cSN4URStD8bCnoWV4rGwp2EtgD0EKxvUCGsB7AGw3aDWIqiHtQAs7GlYC2APwKoEN4cl3bhH
      YBm+OawTYA+BjQUs1CC0ony9BQvbhf8GyN0Oj8GkUYUAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Player Analysis Dashboard' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Player Classification' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nO2dZ2Ac13Wov5nti91FWyx6BwESBHsXqUL1ZlmWZNmO7cR2XOKS4hTFyUve
      03t27CQusWPHlm3JjixbsmTLqpQoiaLEIhZRJEGi97oo27CLBbbPzPsBkRFFikTZJQBhvj8E
      d2fOPbMzZ+69555zrqAoioKKyhJFnG8FVFTmk5QZgCRJKZGZig4rkUgsCpmpuH5FUZJ+ryRJ
      oqurK6kyITW/qdoDLCJSNVpNhVGl4mFNBaoBqCxpVANQWdKoBqCypFENQGVJoxqAypJGNQCV
      Jc28G8CLB3bxH7/5DtFodL5VUVmCzKsByLLMY4cf4fDkPk43nJ5PVVSWKNr5bFwURb562310
      9XeyYf2G+VRFZYkyrwYAsG7letatXD/faqgsUS7bEGi06zQtg2Mc3r+PmALHjh3j9NH9DHrG
      GRocICbJ7H9tD56xAPv27WNooJ+4rAaqqqSWy9YD5JZX0/j6UURBQC+A29nNpJDOOl0jo5hp
      7nIyNjrK+JGjGHUi7R0dOAqKAOFyqaiyBLl8k2DRSMTTjTWvDIDM3BKWOQw4/SFGnINodAaK
      SivIzrBOHa8+9yqXASFVCTGSJKHRaJIuUxRFBCG51pFIJNBqk9sZpkqmRqNJ6vWfCYdOpq6J
      RIKuri5qamqSJvOM3GT/pvO+DqCiMp+oBpBEmjua+PdffQuXxzXfqqhME9UAksgT+x/jpHyE
      3W+8MN+qqEwT1QCSyGdu/hzXWW7lzmvvmm9VVKbJjGYUPtcQw6PDGM12/AEfZmsGQnSciahM
      UV4Ww+4xshxFlBbYU6XvjAhOBHn+9ee4acfNZGVkpby9ksJSPnvPF4DU5K+qJJ8ZGYDNZqOr
      qweNJkbF8pV4nT1gsFFmFRkcC1O3po6+zkEkKRNZlpOeayrLMrIsT9sL8utdv2J/+GWGnhvk
      Lz/21xeVO70HVuGtQ/sZi2lZUZ6LNcPO4KiflaUWfvfcYXKLCrhq61RIR3TCT0Awk56mn5au
      00GW5aTJerfcZBqsJElIkpT0l0Cy9YSZ9gC+MdJsFkQNdLc2YbJkIMbG6R2f6gEaTzWS5Sg6
      6/6cbzfojVtvYmB3Hzdfe+tF3WfTd69JeN0e8pavZ9zVyysHT/HRj96NNjGALbeKeGgE10An
      B984yso1q0iIabzc0kK2PZeidIGGzhHuvPtODLMceKbKDQok3b2o0WgWhWtZXQdgZgbgdvs5
      cWAvlsJ8iMnYy1ZQkzXBv/94F1Wr1pGt8TPa24SpaB12Ry56aw4xbw/eESddPb388Rf/jkzT
      7PVU1wGSawDzHgw3W04c2Y8vBDuu2kFnwzHc4zJXXr2NwHAfJ5s6WLl2FVrSyLFbktiqiN81
      QE71apYVOzBa0vF63GDI5TOf/TTEAsRiUaxZeeQXFmE0mRC1euQcI/4sK0XL6rAkb0SkkgQW
      rQH4JmKsKbZw9NgJ0NmoLDUD0HT6NHkVdRjFCZ55ah/L19WSpgQZDkKJ3YRvUiLiH8IXjGHQ
      6ti0fTMnj77J8o1XUZ6XcYlWBZatXHvOJ3m5uQDYMwHSACgoLj/3bZVmJDMzM4lXr5IsFq0b
      1DPUw6Mv17OiIA1RFGk4eBA/sPWa61G8PRxr7mPdlu0o0SBDQ0M0NDbg9vjYtGk9JpudjIx0
      1pXn0No7hBQP0tjSO9+XpDIPLNoeYMuV1+NINzEa1pAWayWSV0w64OzrYiQos2rdKkTFTCKz
      hCE5Qp0ll4pl5ehEgZKSEmKxGDaznpJIjO6AnaKyvPm+JJV5QJ0EowbDLeVJ8KIdAqmoJAPV
      AFSWNKoBqCxpVANQWdKoBqCypFm0btB3EwgEOHz4MH6/H1GcmV3Lsjzjc+ZLJkBtbS11dXVJ
      l78UeV8YQH19PadPn+amm24iK2vmYc+KoiTdtZoqmbIs09TUxKOPPsq9996LXq/GVsyFRf8K
      8fl8NDY28rGPfWxWD/9iQxRFVq9ezW233caTTz453+oseha9ARw+fJjbbrttvtW47FgslrM9
      gsrsWfQGMDk5icWSzIjPxUNVVRU9PT3zrcaiZl7mAIqi0NndSSQaoW5FHfVHD+Dyh1iz9Wpw
      N7PnlJP8vHwcFi3lNcsxGw1EwxE0Oh2KAooyNcFUFJl4PHFO5lmyxt3RST+nm9rJyClgWXnR
      2c9TEeIxWwwGA5FIZL7VWNTMiwEkEgnue/SvEE3w4+yHSDObCI0G0Os0hBIJNmy7BlfHcdzD
      Ewz091FaW8feZ54kv2YNmUYdTS1drFmznExDgvpT9XzozjuQFBAFEb1elxQd/e5hHGU1dDWe
      oCDLSFNLB46iMo7se5WN23eSCI4SES1kmcDl9hAX9JjSrBRmGunsdbJ87TraTx4Hg5VNG9cs
      /q72fcq83BetVsvW0iuoy1hLekYGOlMaxTkGmtucIEu0NZ1mMqZgybCzef0aXN1NFNZuIRFL
      4HV2sm3zCgZ8CfqHPBQUFKIAOp0+ueUUFYnGU/UIgpaYoiBoRNo7uqhYVk1VWSE+nw8BGPH4
      Wb95OSI2YpMBFEVBFCZpaekBrQWrHCWURLVUksu89ACCIHDfJ//x7N+FJeVYs/LJyspASRSw
      3REkIysLZAmNKLIjr4jg+ARGkxEBBb3ewKp4AuQ43t8/NfXwA2ISIwU1Gh1aUSQeTzA80E9c
      EjGZjOiI0tHrxGq1MTw8hD0nE1HQYDToAQN9vb2IBj06nQ6NVkCHoJY5XcDM2zrAO8fqeoMJ
      u+HtRFmdgZwcw9TfmqkOSkRDVlbmOeHQU+NwAyajIen+dgB7SQ03lVwknLeskFXv+O+aNenn
      fJ2KdQCV5LPoh6YajSbp5VcWC6Ojo+TlqYk8c2FGBhAcc9PS3MxkJExzQyPOUQ+eESedPf3E
      I5O0tLQwEYmnStcLUlBQQFdX12VtcyGgKAoul2tJLP6lkhkNgQxp6eTnhBjpd+ILxcjRa/G6
      xrDqRNp7+imvKGNwYIiqiuKULNKckffOocWmTZt47LHHyMnJwWazzVp2KnqRVPVMiqJw6NAh
      ysrKUBRlzu0k+16dKWCW7PufimdqRgYw7nMxkTBQVllIqQLNzc0YDCYUphwwZ27E5Rz7iqLI
      PffcczYsoKioCJ0uOa7QhYjf78fn87Fs2TI2b9483+q8J4tl/jOjnGBnXxfjoRiO3Dy8rhFs
      9jx0UoixkExpfhadPf2UlFeRZtTNS05wIpHA5XIRj89sGJYqXVMhMyMjI6nDnqWeE6wmxaMm
      xS9lA1j0XiAVlbmgGoDKkmbJGkA0GlVr+KssTQPweDx8+nsf56s//MqSXURTmWJJGoAkSyii
      TEyKqQawxHlf5ATPlFxHLj/5wi/Q6/WIoqhmVS1hLmsPoMjSVAKLLBGLJ0BRiEajAEQjYULh
      yDlvZEmS5tIa0UiYWDxBIpFAUWQkaepBj0UjGIwmTGbzu05RSMypTZX5QpZlHnvhNzz32jMz
      6tVTagDhcJiHnvw57d1tAHSePsITu15DcTXyvUd2E/IN8u0f/RKA5576HW/seYF2p4+Tx47g
      CYTY+9LzNLR2MTHm4vBbp4hOTtLUeBJ3IMRAVyv9w973bHt8uIvnX95Pz8Awr7/+OkFPF281
      9BP29vPs7teoP91MKOjj0JHjjAf8xCWZMc8wrx84wshAF539w6n8aVSSjHPIyeMtj/DAvv+c
      0YszpUOgl/bv5pXg8zS/2MB3vvQDTrX2EJtMEJFzyTTrOdnay4qacgCkRBzPeIRabZz2ISdN
      vR4yTSL+4QH6E1Z6jr2Kz7eD3MpCGo6+TltnLwZrNp/65EcuaMUDnT1sveFGCk0CB1/6A6HA
      MNmVV9Lf0cv6KzZzfO/r5GRoGGk7xFgoSoZZi0ac+jmee+YZMOZQ+tlP8v4Nqnh/UVhQyCdX
      /SlpJsuMFmBTagA7t11L17Md7LzmOpAmyXCUs7HASOeAn3WrKmhv7aIsd2pXlcLyGjKNAsPO
      PiIJLWaTgfyCbHSAy+2eSpAR9OTnOhC8TvIcdvIrat8z2aSibiW7XniGmro11KzawNraIjpH
      tFRUreDp3fuIy+ByeUjPyELnKGXw+IvceNdHaWpqJb+ggPSCahZG5q/KdBBFkbtv/PCMz1ND
      IYDQuJf61n6u2LwuaTLVUIjUhUKcOnUKvV5PzbJKOnoGqCnLoXs4SnBsmNVrVk+lqvZ1IOsM
      xIQ00rQCOTkXjp9akl6gd6M3pyf14VdJLT09PYT8LgZ6u4npM6gptrDrqSfZftPtdDSeoKVn
      lPJcM6LZRkiIIYSCHHp9D8s3bqemvPAcWUtyHUBl8ZKIhRC1BhxFFVx33bWkvT1Jq6ldidc1
      QkdHJ20tDYSjb0+EFYnxYJicnGwGBgbOk6f2ACqLCIX6t95ix9U7iYcCiFo9K1fUgM7Cho0b
      iIcDBHMM5JSuoKokF41Oh4SWhCMbZ08bRaXV50lU5wCo4dCLbQ6QTNQhkMqSRjUAlSWNagAq
      SxrVAFSWNKoBqCxpVANQWdLMyKfkdQ0x4hrBYMwiMD6GyZKOGBsnGFUozs1k2OMny1FEaYE9
      VfqqqCSVGRlARmYWLrcXvaBQsXwlXmcPGNIpt4oM+sPUramjr3MQScpEluWkZ1udqTaW7HUA
      WZaTnh+cKpmpINm6SpKEJEmL4jedkQG0NJxC1lsxW010tzZhtmYgRMfpHVcozsuk8VQjWbnF
      ZxfA1IWwy7sQNuoepaOrnSs2b5/2FqpnXlLJ1lWj0SyK33RG0urWbzn7t91xflXi3MLSuWuk
      MisUReFfHrufEeMAAl9j+9Yd863SokCdBL+P2L78SvIjJVRXJTcE4f2MGgvE+2cINJvixEs9
      FkiNBl0k+EaGMWTlMOF1odVq0RFHSMthfKiD1j4Xm7ZuxWaa2ioqHo8jKjLjkTiZtqW5hex0
      UQ1ggdHd18VLR3fz8Zs/ec5+B2aTwr7X9pKWVYgYcTMWjHLLLTdxqneQzVvWcviNtzCKE2Tm
      FvHyi7u4+aZbeOvUSWpXbcSiTDAclCnKMtDbN8iaHTeSa9PP41UuHBbMHGBycpKm5qYlX6jq
      ly8/yP7wyzz7+tPnfG5ML2Ai4GPLhlqGejuRdGZEAaKTY+zbf5xly/IJTsY51dTBmrXrqCjK
      ZfXGbSRCfrw+L52nT9M/HubGq2rp7vXN09UtPDT333///akQrCjKjFxx33j4fn7X+WsKKKG0
      6MLepDMbz6ViHWC6uqZaZkFGIeGhKB++/l5MpnPrFglAjsOByZpJcaaBqM6GUa9jw+atWPUK
      vf1DZOfkkmmCkKwnPd2GyaAnFPQj6tIoqywjJ8NGHCOZNsNZuTO5V9NBlmXGxsaw25O7IJqK
      +7RghkAVeZV0N3WSfwH36lJieeUKlleuuOB3y2qWIwAVFRVnP8upefvYtCxuufWWC5zlOOd4
      gIrCCxy2RDnPCzQ0NIR/tA99diVVJY5ZC56NF+hSFq56gdSMsJRnhLU3HaffG8Y7OpjUhvx+
      PygSfn8QRZFpOPkWrrHg2e+DwWDSuzcVlUtxnjlVlFXQOegiMye5Q5ETx4+zYWU57W6Bwr4T
      uIRiHIkY7Y0nmMCCt78ZjdlOZVkx6SYRr2TGqEzi7OnBml+BSQrQ0ufmup1Xo9cujg3YVBY+
      5xmAc9RNZUUFtszZbzl6IXJtBg6e7GTHtddj0xbS/8YBTvuhp7kLa14BhdkZOLKNuJ19vOmN
      4rBE0BgLCIxN0NR3kLKCItL1CaIJGb1W7SlUksN5T5LVpKe5uZlRbyCpDS1fuZxQXCTdIBLw
      jhIIJ7Cl51JVUUBRYSGO3Dxs6VmUL6vBZNQhxARW1JYgCQI5OXnoCVPf1AHvWQxRRWXmnDcJ
      bjpxmB7nCJacSq7ZunrWgpMdCtF08iijEwpXb9+CRlQnwclCnQS/C0lKkEiA3Z6Z1Ibmysp1
      W7j6ik0k+dmfEe+Mx+/paGFg2I0sRWk6fRqPf2pCPxnw0tLezbuX8wKBMz2qwuRk6PIorHJJ
      zjGA3tZTdPaPotFoCYej86XTgsDj8/DsK8+c3cCjsa2BT/77R3ji5d8C0NDUwnBHPc2dzfQ6
      Qxx54yAy8More9ALEm63iwP7Xufom0dp7R7E5/Px8AP/ycnWdva88DxHTzSyxBe9FwTnGMDQ
      6Ag5Dgdd3Z1kZ1rnS6cFwU+e/hGPDjzEU688CcDgyCAxW5ju4S4AzBYbtSuW4fWN0XL8IJjt
      CMDWzRuoP/4mnZ29lJbk4wpp8Q730dXVRWlVLXXLK7Bk5SKF/Of1EiqXn3MGVGs3bGUsMEFF
      RSWW9KVtANetu4Hxw362rr0CgJuuupnC7CKqqqoACHpHOHhCYdPmWrLTq/CNdhNPyAwNDWEw
      mrGkZ2BLt1GQa8CkhDAajejlMI0tveTn5yGgbsW0EFDzAXjvydWZ2KNkypwL6iR4kdUGVRSF
      gcGBs+Noj7OD1w7VoyQivLTreU42daAoEof27eGll/YSCI7h93lpaOt5W8Ik7e3Oc2S63e6z
      fzud536XbJJtaCoLj5QGwx0+fojv7P8Xtti3c98n/5H2TifxhELfycOUbruR5Vl6Qr4BJFMe
      VsVNwOVkUjYwMuqjv+UE5XXLOPraKVq7CzHL41jzq4lPenlj725K6zZz8KVnuemuj5+36YGK
      ynRJaQ9gTbMiTyikmzMAic6OdsYGu/BiYrCrl2BwAp3Rgs89ghUZdyhELCEjS1F0VgdlhTks
      X72RnHQT5gwHG1fXEA6HqKyqYXDASc3KVVSW5KfyElTe58xoDhAcc9M56GHdihLeOtlOfkkx
      8aCXQESmvCCbnoFh8ooryM2ynp0DnPlXSUQYC8mkmzUEQ3F8Q93IphyqSvNxO3voGAqwvraS
      BBpicYmQz0nCmE5mmg2YqgVjsVjw+/34RgbQZRZhE8P4olqqSudmBOpC2NKdA8zIAGRZpr2j
      nariPBo6+rFlZKDEJNL1AkMTYWpXVNHX5aS8ojhlBaze7wkxl1tmKuRKkkRXVxfV1efvyDIX
      5j0hJhGLEgqFiCQEigoLGRoaRieCNyZgNegYGR5F0erVwlgplJmKHgDUwljTIhoN48hxoGj0
      IIWprqlBI8eYiMlkWs14PD4K8tW6oCqLhxkZgDU9C2v61H6r1jTT25/qyHr7zxxHTjJ1U1FJ
      OWpgvcqSRjUAlQVFU1sjh986dNnK4yyYqhAqKpIk8b+f+BpYZL7n+AmlJakvtqwagMqCQaPR
      cEPtLfiCXvJyL095nEVrAIqicOj4G0RjUXZuu1aN23mf8IW7vgRcvjisRWsA0WiUf3vx/6Ex
      iqysrCM3N3e+VVK5BGNeN2lWGyMuHyYhQkSbQXFuJkM9bTR1O1mzYQuOjDRgKtBRAPILCjnP
      FmKTuCYVHJlzL/y7aA3AYDBw15qPEIlFyM7Onm91VKbBYG8nLl+QmnXbaGpoBlFPce6VDHYN
      sPGqrRzbdwgSMbKLqhgbHQDAICZ4s76FunV1NB5rpGZFBe1NxzGWblvaBiAIAp+640/nWw2V
      GaAkoox4xlglxGlvayeOnu07dhCPBjmw/zDVNhh3XI2/++jZczxuN7Ggm8a2dmyOCoaHR7j+
      mqs4NpCchKJFawAqiw9HUSV3r9lC0+kT3HrXH2GM+ZiISZRU17Fh2TIMcozXXtlDdkkNaVoZ
      AdARxWjNoriolHRzFrq4yGtHTlG2cssl25sOakYYaizQUo4GTelCWCKRYM/+V3B7p7K4Xtr1
      PHFZYd/zT9I3MMhIYIJTpxuJjHv43WOP8sqBowyPulKpkorKOaR0CPTKgZf5766fUN5Uw7f+
      7NuEAyN09g3R296BpaiSN3a/wp133o3RZqOyqIDSTevpPHWCgb5eGOvHVLaauCzi6W4hq3QF
      nSdeo6h0GeUr6hgddrN+zYXLiKuoTJeU9gCrl6+mIFzK1at2IggCuaVVNOzbRUHlCkBkVd1y
      hodHzzknGAxiiE8wZinkzVdfwRDzMhaK0NzaSWH5CrZtWc/+F57F/h6baKiozISU9gCF+UV8
      7ys/PDtmrVmxmoKicrKtJuIaA1pjGkHv1JCnYsVKzDoNq1evJjNNS8Y4LMvPpSjfTmBSpqSi
      CoMGJEXElJVHcbb5Yk1fkInJCb7/+HfZUL2RW3bcltRrVVmcLLpJsJyIEUkIWNOMMz7/4KGD
      /LD530gft/PTr/7irGGqk+ClOwleNG5QRVGIRCIYDAashtmpfcXWK3BPfJraqlo1dEIFuAzh
      0O8sKDsXevt6+ePvf4Rv/Pf9sw6VFUWRD914FzUVy5Oik8riJ6UG4PKM8osnf8KhU8dQFIXw
      hJ+GhiaiCYnO1iaG3WP4XEM0X6Ca8rtJJBKgg5gUu+hxjz38cx5/9NeMBKI899xzKIrCkb17
      mQT27t3LRMBLn3MUWYrT1niaw8frcQ31MzDsIjTuo885qtbsXEKkdAgUDoeRlDC+8anS4b29
      g1SWFdBx+iga+wo8I4MExn0YlBDDeSUU2N5bnarKKh749C+xWq0XHb4oikIsIaPXaVDe7n0i
      Ez5e27MHj2uM6MFDpBl0NDdqKC8vQ/Z0cMwziRIdI+TpY2A0ype/9lUs6hBpSZBSAygpKuWW
      1TuRs1cgCAKKMBXzrcgSojg1QW5xtmKwxcgYWw22967wJggCWVlZlyyLIYoieqOO9sZT+MNT
      8SImazabdu7kzdf2Ep/0MzoWJS83m56uLixWE0Gnk4gkU2TPxVGWx8yn1yqLlRl5gRRFYXx8
      nPT0dEaHBrBm5yHEJ/GHZfKy0xkcdJJfVIxWFJAkCeQ4zQ2nkYxZWPWQ58iko9tJTW0t/R3N
      pGUX4uxvpWdoiLtu/SB6vf6i7acmFCLGay/tBUs2O7dvSppU1Qu0OLxAMzKAgM9FW+8wK0sd
      jEY0hANeBEXBqBWQEMjIseMbi1BTWUQsFiMcDidV2VQVhkqVyzbZMhfL9UuSRE9Pz9lS8smU
      m+zfdEbmlJ7lwOb2EY3GSU/PQgqNIaDDohcZmQhTmpFOwDuBJEkkEgnGx8enJbfxxBF6h7zU
      1FSTEA0sLy/grZMNbNqwjsYTR/BFRLZt2YTP4yaRiFNYODVUcrlcOByz38z7DIulittiqgw3
      MTEx7fs/Xea9MpzXNcSYbwy7PYeRnjZs2XkI0XFck3Eqihy0NrZQUFqJRqPBYDBQXFw8LbnF
      hfnsee0AdcV5vNDQwdoSC0OBOMXFxbS1tXHHjhqOt3vJsRkZGvLhGeolqsskMNTLyKiLzRvX
      cuLEKapXr6b56FGs+aVctXX9tK9LXQhL/hAoGo1O+/7PRO68LoRlOwrY5igAwH42C8vBmctc
      vXrumVmFmUb2tXipKUw/+5nZkg6JYQYHXYiigFanwzsxgc1eQLHDSm9XP3E5QWNTA/a8SlAm
      56yHytJgYawECyKlpSWYM6ysybLT2z9ClnWq3JzNKLL3wFtsu/JqnL2diKJINOhFr9dTkJ+N
      1WIgLmvxBcfJKyomw5wOpF+8vcuM0+nk8OHDJBKJOXXhqSgOrCgKiqJcUK94PI7D4eDqq6++
      pINisbLoYoEWW0LMgQMHcLlc3HTTTRgMhjnJPHOrUlEc90IyFUXB7XbzyiuvcMcdd5CVlTUt
      mYvJC7TgKsNJkoTH47lslcFSyejoKC6XizvuuGPOD/98IAgCDoeDj370ozz77LPvi3vybhac
      ATyy62H+9KGPs+eNl+dblTnz5ptvcsMNN8y3GnNGo9FQUFCAx+OZb1WSzoIzAK1Gi5JQ0GgW
      xvRkLoTDYUwm06UPXASUlpbS19c332oknQX3lP3RLZ/gzqvvIi0tbb5VWRTEohFEnQGtKKTU
      4M5sd/V+Y8H1AKIoYrFYFkS8frJCuZPB/r0vcezYMXw+L77xMOHQBJPhCIOdbfjDMUKTQY4e
      ewtFlhgb8yPLMrFolMlQclfj32+k1AAmJif4r9/+Jw1tDalsJiW8fOglvviDz9La1TLfqgAQ
      j02FgScmfAy53Bw+epwDBw+hANGgmzdPNDIZitBy6jg9vR3UN7fx9O//gH8iMr+KL3BSagAv
      7dvNwcirPPjSA7P2IITCIX75h4fo7O1MsnYX53j7m/htbhrbF4bxWrNy2bRpE2a9gJyIMery
      YEmzoACxcIj0nALSjDq8bhfRhECaWU95dS2Fjsz5Vn1Bk9I5gEFrYKTJTU7G7Dey3r3vRV4a
      f5bmFxr51y98J4naXZw///BXOVF/nO1bd1y2Ni/GmR0XTZkFlGfoyDZBMK6jIDcTrSkNpbsN
      a9kyyvIzaWhqIy83n9ysxDxrvfBJqQHcfO0t6PV61tatm/WYfufWa+l6toPrrr687kRLmoWr
      tl99Wdu8GBkZGSiKgsZgxioIWEvPjbSsqK49+/e69esut3qLlpQOgbRaLTdecxMO++wjNjMz
      Mvm7P/4a61duSJpe8QkXP/3vJ1CAkKuHPzy3mxONbSTejmJNxGOEQmFCoRCyrBAOTZKQZOKx
      KKFwBEWRmRjp5GTHCKHJqe8uhCAI75vFo2AwiMUy92rMC40F5wZ9LxqPHyKgWCmzRWl06blq
      eRq/fbWDT3/kZh7/9cPcdve9tLV1smHtqkvK6mjtYFWlgwFfmHxTGsQjiALs238IrSARDvrw
      eTxYc4uw20wM+CTMBg3xwBATspFVZTkEx32EDHm8/sJx7v34Jyi0nx9/lJ2dzejoKHl5l2e3
      k1QyODjIzp0751uNpLNIDEDBPR5DlkaJmdMJjHk41eInL0sHgCMngxPHTyMpEk/95mc4YzZq
      S3MxaUSy7Gk8/vsX+cDNO3irO8wn7r2Vzt4+TBYrrU3N2FcXU1RcRE93DxVZOjyabNINBgrs
      NmwlKxnuOIVGawIk8oorAIjFQugNOmImK6uXFdLc1kOhfe15Wu/YsYPHHnuMe++9N+kxLJeT
      oaEhwuGw2gPMF9Ggm97efgQ5TmZGLSV2AwNjCTLfDlA02hzIEx4mdDom41Z0SipQRc4AABVy
      SURBVJyyHBMnnXFC/UOsWlZCIBRnxzU7MWng5jvuQa/XEYsl0Ok0VFcJbNiYSf3BPazcUEu2
      SUBAQRC1FOXeQDgUxGCyIjA11NGIMB6cxJxmITRRgMV24ehTvV7P7bffziOPPMKKFSsoKytL
      eoBgKgmFQrS3tzM+Ps4999wz3+qkhEURDSrFo8QVLaIUJa6AXqclGpMQBQWz2UwkEkEnKkzG
      BUIBD3pzOsOdJxHtyymzG/AFw2Rl2NDojOi15097Up0QI8syPT09DA0NTZV3mSWXOyPMaDRS
      XV094x14FlM06LwbwKhrlJGREVavWn120njm3Hf//8yNWkzh0MmWuVgywhaLAcxrKIQsy/zT
      I/fx9QP/SFNzEwCP736MO//lFg4c2w9AfdNJ7v7m7fz0Dz+Zlfz6Uyfn9NadDs4hJ4POwZS2
      oZIa5tUABEFgXelG8hNFFBZMLZZNRCbQWbRMhicACEVCaMwik5HgjOU/tutR/uXwP/PLZx5M
      qt7vZHJykr9++Mv8zSNfSXoS+DsZD47zrV99gz1HXklZG0uReZ0EC4LAF+/+ytm/AT71gc9w
      88itZys/XLFhO+UFD2K322csv6ygDLFBR9nqihmf29TRyK7Dz/HpW/+UnIusY+j1OoosJciK
      ktKkl+P1x2lUTjB0dJDrt96wIIIF3w/M+xxgpjJnOgeYzsTxQmPL//PgP9GubeDWzLv45Af/
      5KLnXyitMNnj1UQiwVMvP8maFeuoLq9Omlx1DjArTSY5duwkzlEPvZ2tnGpoJuAd5dSpU4z6
      Zj5USSWz9Zp85ubPcZ3lVu689q5LHjuVqC4xODgMssTpE28yMDyVPTXp9+AJhFASYXoGhs87
      Nxic3u+l1Wr50I13s6xs2cwuROWizMqcErE4Wr2GcHgSFAMFNoHeER+1q2vp63RiTzcjy3LS
      wwBkWT5bGeHdKIoy62GBLMvnTZQL8wr51J1T+xBPZxLt62vimf2tfObem+h3BUkbOYLOciOh
      9tOcDBhYnQVHe32EvbkEZRNdpw9TWrcVb28T1rwK1tYUcaKhk8qKEiwWI6PeOFaTwlBvF/ay
      FZQV5KQsP+FC1z8XJEk6WxwtmSRbT5ilAciClsL8fIZHRtGJ4ImCzaRn2DmMotOfHfqkZIcY
      WeYXzzxIdno2d1//YRRF4bu/+Tc6XO1881PfJjtr5rWJktG1njzdhDkRoMMZwGhOozrbjD8s
      Y9Kb0AtxPFENBelG3G4P9Z3DrFleyZZ1dbwx4SONBK8dPIhREOntF/F6/RhtaWSYTYz7xzGH
      wmi12pS5QYGkDy00Gs2icC3PanygM5oRBYWa5cupqionr6SMsooqzEYzFSX5c1JIlmUmJyff
      s/foH+hn98Cz/OqNh5AkCUVRaB9tw6tx4b1Y0nZsgsPHTwMRHv75Q/zh6ReIA28dep2XX36J
      ju42OntGSUjy2TdYfX09siTRc+oEQ5MRIuEwknxhvXLLa/nUp/8EJRTAP9JLw3CMmrw0zLZM
      NtbkIRntOHKyicclHA4HFQU5HKlvJjcvjyx7NiuqlyGaM6hbXYdGq6fYnKCwaiVpaRbCYTWp
      JVUsuEnwr3f9isdP/pq/vv5r7Nx67XkyBUHg+deeIys9ix0brwTA4/Xg9Xqpqb7IpCs6zp43
      W7j+ylX89Ee/oqC0jJs+cDOdJ4/Q2udmTV0Jx0/2k27PRiOF0AFROUIsrqUkPQ1TVQUv/eZX
      FK7eyYdu2HrJ61AXwt7Pk+AUkkjEEXUC8UT8gt8LgsAd133w7MMPYM+2X/zhf5vhgR4GR7wU
      FhYiKwkS0QRGs5U8i0LrwBjrNm3BZtQw7nPR3efEkJaOWSsTS0iMDnRTvHIdidBE0q71cpNI
      JPj9i0/Q2dsx36osGBZcDyBJEj6fD7vdft6bbk6V4RQZr9eLzmjGqNchoqBodMjxCP7xEPbs
      DBREFFkiGp5EErSYjAa0gkI0LqPTaxkPjGNOs2A0XLpM4ELsAV7d/yo/6/gBORP5/PAvHjgn
      1GSp9gCXdSFMkiQee/E3pFsy+MA1d1zwGI1GQ05OTlLbTUgJDhzaz9pV67BZ3lVuRWMmW6v/
      nzpEGhGdLuOcQ0xvf/XO0oAJKcEjzz1Mvr2Am3fcMmcdU1H28N1sXLuRw53r2bZ1x4JdSIvH
      4yTiMWREzGYTUixKKBLFnHZ+KHYikUAARK2W2V7NZTWAgcEBnux4jHggzq1X3nbZQoNffO0F
      ft37c6pb6vj657+VFJkdHR08P/gkSoPAjVfcNOcozaf2/p4DLfv5h4/+85wy6C5Gui2df/rM
      /SmRPRtkWeaxXb+hsriKrWu3AbBr1y6iE36yMixUbr4VZ/0ryGkFrFpZReOpBjZt2UQ4IoMc
      5cSJE1jT0lhRu5xEQqK3t5eq2jUMdzWSUbgMnTTBRARKit47ISmlBhAKhfjtrkfZvm4HNVXL
      KSku4eO1nybDmpGyh/9CQ69VNatwNBWw/R3zhrlSU13Dh7s+Qd7m/Is+/NMZCiqKwr7m1xk2
      9POLJx7EL3r50gf+kpLCkjnp6Bvz8dy+Z7njmg+SmZHJ7icfZcMtH6H5jd2EojK1m6+iSOPh
      4ZcbKCvK57ortwAwONBPXkERWs3UddWfPMHqtesRk9xpnDh5gmeGH0fbZGTz6icQRRFRFInH
      IkSlDKxmHYosEQxOEPSN4vaM8uoruzBm1UF4Kvhw0u/ipX0Bah0G0gqWcXLfs5zomSTX4UQX
      83PrXR+9qA6a+++///7kXtYUiqLw9EtPscv/exrrG7ll2+2Iokht1UoqiiunLcfjdfO9334b
      vWig0FH4nuXBFUXhwad/xn88+++sKVxPVub/DFcy0jO5ZcvtLCs5P4RgbGyMycnJGVeiEwSB
      uupVlBWWX/B7WZZpam/kqw99mfhkglVVqy8qa135Bso1y+j0tdOpa8EykU5d9bnpnTMNB//5
      0w/wemg3/t5x1pVX4fRNEvCHGfe7KS3IISSkkaPx0+43oYmN4x/q4PEXD+AfbMMf13Ni3wu8
      fPAUFrOO8vIKpjtqkmWZsbGxS8Zv5eTk4O8b57rVN1FRVM7hfS9jyi4jMyOd62+4kTS9Bq/P
      x6YrrmLc2YUnLGM2Gxjt7yUkgT3TRnpGNla9jCKaKCgtIxqeJDwZYeWqOjLSbZQWX7wiSUp7
      gGu2XkPD7+u59orzg7fOjHn3Ht1DW18rn7vrz9DpdOfJOPjWQRqFEwQPjbOpbvNF2+v39BJN
      C+H2uqgqP7dqwoUemmg0wp//9AvIgswDX/wFNpttppd4UUbcI8StUfpdvZc8Ns+RR54jj5XL
      V/LGWwe5+Zpb59z+Ldtux7fHyy3X3EZXcwOeYJSYu4tMI7R39bHx2jqIu0GAq6+6kld3/QEp
      GqJs5XIKy4voOX2E9WvXEwsF5qzLhdDpdPzZh7989v9XXHPzeces37wdgMo1WyhdeelJcPaG
      K1g7g/oJ8+IFUhSF7/z6XwlGgpzuP4m+WMNXau/jqh1XnXdsJBLhqT1PcsXa7RTlF1/0DTgZ
      mmRwYIDq6pppvSXj8Thf+f4XSMgJfvjnD2A2m2d2kRfhjMempbWFivIKjMa5b746Fy/Q+Pg4
      VpuN4Nsh21ZLGmOBCTItOgJRkQyLkeGBHsKKgdK8DLoG3OTY9LgnEuRnp2Ox2qbdAywWL9DA
      0MDlN4Devl60Wi1//ovPIxoFVrEBp9vJd//5P0gzp110vHwpN+iLB3exr+E1/ubevycne3qe
      JFmeWvm9UO8zF1LlBhVFkef2Pkt+Tj6b12yZs8yl7Abd/fqLqR0CKYpCX18fefl5GA1GRkZH
      uO93f4EmquXu2o8RGPfzpU9N5QM8+PRPebXlZf7vR75FTeXMfzhFUXilfjdOYy/1jfXcMM1C
      WqIoLqgiuJeita2VR1p/jnBUy+OrnkpJjvBcCYVCjLpGqa6uxtXfwfGWbqpr1yGF/UwGA6xa
      v4GWxhbSBD9R60qk4CCrVl26nE2yueHKG1NrAIfeeoPvHfwWG7O28rU//icsaRZytQWYDCae
      aPw1mjSRD43cTX5ePkM+J/G0KF6fB2ZhAIIg8Df3fI3TzafYuf3S9WsCgQA6nY7O3k5i8Rgb
      Vm9YsL7xd1JVWcU1p2+kqLZ4QT78iqLwjUf+D6ed9XzX/iMsRIgkBLKz0nni5z9jzfUfRydq
      8HrdRMwG4uOniScMHDvwCg39AWryLSTSchkfbCUgmVhbYefYqTauvv0eSrKTWzJfo9Gk1gDS
      renE/QmySqYiNC0WCz/4ix8jCAIPPf0zJqOT5NhzEASB+/7oHxl0DlJVOfvNlfMd+WRnZF9w
      GPXOcOlR1yh/9csvYpRMjCk+RK3Az4semXH1gzPUv3kAlz+MwWrn6s21HDnewsb1q0gk4gii
      BhQZRRHQaufu+tXpdHzlI385q3MVRSEajaLX61NqPFkWO9qoDqvFitWUw9XZDvYfOELtmk14
      nL3IdeXYNAo+SYs80kne2p10nziC3z2CULqB7ZvXcUyOkAP0dHdRvqwKky41bvOUGkA8kUDQ
      CcSl/4nrOfPDf/ZDXwDA6/Xi9rhZXrOcZVWzT/ZQFIXv//a77O/ey7/c821WLq87+93A0ADf
      f+o73LrxA1y35Xo0ogZBFjEZ0liVt5a4FJuTBygUCpGIRxESMqAwMTmJEvbwne//HGthJWnh
      YXrHNfzTfX9JX08XVpuVXEfurNubLW2dbfzD43/NttId/N0n/iElPZ4gCPztx/+eD26+i5Li
      EiITfuoburn+2h1I0RCCnCAuKazasJ6xmBaxsghbVi42qZbaDVvIz85AI8DKlSsBMK2t40RD
      G1k2E5D86WpKDSAWiyILEqHI+fv2KoqCLMv8r1/dh0czyteVb7Ni+YoLyjmTBNPX30eOPQer
      1XrB46LxCKJeIBaPnfP5iabjDBp7eO3UHq7bcj12u51f/PWv0Yias3H2l5oEhyNhntv7LNvX
      76Aw71zfsqjRUVScR9+QFwD38CADzjQKq1axfu1yWupPctu2lTgHB/iHZ7+KMWbm4fseu+xD
      mHg8hqCHaDw643MVRaGjs4Oy0rJpbZl65tqMlgy2bns7etbwjpeMNoPcNICpEIfy6pXnnP/O
      F9KWzRuB6SUmzZTUGkA8htasJSad+0DKssz/+unfE46HKLaVIvuls/E/Y4ExDr55gBuuuhGj
      wUhrVyvf/P39VJiW0SidpFRfyXe+9P1z3l5nHFl/87G/JxDwY7ef6wG69Zrb0B/Qs3HNprOf
      GQ1GEokEX/vJ3xKX4nzzc/9+UVflrtee5w+jv+H0syf5xuf/9Zzv1m3cgndsnOrlK0HUcMP1
      O0Fr4M5bSkBrorKkkFBMRisCfpHsjByCE0FQID398u1pXLdiFT/NeZj09PQZv/1f3PcCD53+
      L67JvZE//8hfpUjDy09KX0GxeIxxV5DJiXN7AFmW6fJ14IwO8Pk7vsgDX/0F9uypVcOfPv1j
      fjP4IL/b/TgA3X1dOP2D9Iz0oAsbyLWdG9ehKArffuDf+JO//QQDzgFaO9vOS6bR6XTccu2t
      57lG4/E4PYFOBkO9RCIXTzrZvmEH1Yk6bt/ywfO+M5jSKCjIx6jXgiBgy8zkeP1R9MY0bBYz
      pjQr2ZnpuD1u5OwEvYFuvvLjz/PlBz7HxMTFw6vHAmP856P/Maedanx+Hz949Hu097SRk5Mz
      q02vczJzYFwkN3PxF/p9JyntASRJIqssA0E5922j1Wr5/md+TCwWOy/y85q11+I6MMK2nVMr
      gOFoGEdNNo6QnW9+7ttotdpz3l6SJPGm+xBCtcyffv1PcGzNJCF9lZ07zk2muRAmk4n/+OMf
      E4vHyMjIuOix+Y58/t/nvjmt6/7VM79kT3AXHa42vvLRvzj7eWFhIWttm8jOt3O8501kLl2x
      Yvf+Fzgce53RV4f5v5+ZXvvv5oX9uzgS34fnVTdfr5hdMOCmNZt5ou6ZRVXbdFooSUKWEsro
      6KiSkGRFURQlkUgokiQpbxx+Q/EH/DOTJctn/w5OBJUf//aHSnNHk5JIJM757gwHju1TfvnU
      Q8oTL/9W+fL3P684h50zai8ej8/o+Etxoum48rnvfko5Un/4vO9kWVZkWVbi8fi02vUH/Mp/
      /fY/lfbuNiUej1/w+i8pwz+m/OixHygdPe0X1CfZ1x+Px5XW1lYlEQ0pTQ2nlbFgSOlub1H6
      h1xzlptskrYSPNzbSUJvJBIVWVZeMG91gZRZVIdIxaptPB5PyeryYkqJFGITBBNaigpzGAtI
      SBE/K1atmvW4e0GnRMbikJeXi5CIXfrgFLJQFrMWih7zSUKGZTVVDPT1nY3iXWj75STNALLt
      NpobmrHOcjFJ5f3Hspoaejs6qahZjVYeJy3TwUKbQSStP7FkOliTmZpMJpXFic5oYfWaNQBk
      2WovcfT8kJJo0DMFrJK90HNmQSzZw4tU6boYZKZKbirmQKnQMyVu0DMTtWQre+bhT7YBpErX
      xXD9Z5wGi+X6ky4zFT2AispiIaUrwZHJAE3NLYTj0pzkKHKC1vapYk5D/d30XqDK8mxkdne0
      0TswjN8zQmt7F1ISXgVj7hGam5uZjETpaG3GnaRq2Z7hfrzjEQb7uuhzjsxdoJKgtamJ/iEX
      PtcQbZ09vEfVxxnhHXXS0dNPZMJPU3MrkTnee4ChgR4aG07jC0zQ2tyINxCas8xwcIzm5ubU
      GsDg0CjLKktwOuf2wErxOOFIFIgyERZRQkHm7mwVKSopYSLgx+UNkJdpxD12ftDeTLHY0jHr
      obetE1tBOWPuuRtrIjqJy+PCH/ATimiRJsa5cN286SNFQ/gmQuh0WjxjE9jNGnzB8Fw1paO9
      B0WWGRhyUVNVwMCAa44yoaC4HIvJSMgzjKNyOd4R55xl+jwejCZDiksjvh3xOVe0BhMmgxYQ
      UJQklV1XJDq7uqmsXgYKKLI87ZzXi4pVwGA0EItGUWQ5KX7v0aEhorEYLq/37PXPVVVBZ2bT
      +nW4h51TkblzKC//TkzWTMxSiInE2/c+CTKlWIi4aMSoFZAlGSUJv2o8IWM0GVMbC1RcVEB3
      3xAVc4jzB4hM+ImEIwwM+0m3aIgJacw8nOtcJCmOLMkMD4+Q68hk1BeiqnLuGUfBwBj+YJzq
      1SsZ6e/Bnls0Z5mF5cvIKywkGBUJ+YeRtFlzvnGKItHX3YM9rxCzGMc9HqHSMtfEfS2Feen4
      wwq1Rel09Y5QUTX7BKczRKNxiooKMWoVOts7yC0sm7NMR56DfueoOglWWdosvKRSFZXLiGoA
      Kksa1QBUljSqAagsaVQDUFnSqAagsqRRDUBlSaMagMqS5v8DiAsESQ7/kM8AAAAASUVORK5C
      YII=
    </thumbnail>
    <thumbnail height='192' name='Prediction Dashboard' width='192'>
      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
      wwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Runs per match' width='192'>
      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
      ARCW5v8DDasrvW0YFnYAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Top Run getter' width='192'>
      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
      /P+ttSVWldCczQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Top Wicket taker' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='Win Prediction' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAZ3ElEQVR4nO3deXCb93ng8e+LGyB4gPd9ihRFStRpyZKv2E58bO0mdc4mTXa36W6nV9rp
      TLuz+5d3dmZndzvT2d12Z3aTTNNsskmaOE0aO45d27VlVbeti+It3iBAghd4AQTw4n33D1my
      aIqyAAIvSOL5zGg8pIn3+eEFHrzv+3sfPD9F13UdIbKUKdMDECKTLJvdgKZpaJqGrusoipKK
      Md13XJPJuPw1Ot6tA7Ps0/TGSywBdI2+3l4amluxmnR6+27Qumf37cOIkU9GVVUslk3n75aN
      F4/HURRF9mma4yUUXVNjKCaIxnWmxgZZiaopHaAQRkvo48VkteO0WUCLMTO/yNzkBMvhWLrG
      JkTaJXQEiIWXmV8METXPcfDwEebn5nE7reialq7xCZFWSiqmQbUPEkDOV1NHrgGMiSfToCKr
      SQKIrCYJILKaJIDIapIAIqsllADLC7OcuXAJTY3S39PF5Ws9SCWd2A6isTg9o7PE1LVT9gnN
      Qbnzi/DkBTBZbOQ4bSxGYuh31AJpBt4PiMfjhsXKRDxN01AURfZpivzTpRFeeqePLzzeyhOH
      6m7/PqEEWF6YIxAIUFJSSlSzgBYCxcStqWoj56wBQ+eQjY6XifsAsDP36eJKhHcujwOwHI6t
      iZnQ3nW43Bw5fIS8vDwqKsro2NeOybhiRSESFo9rfO8fr6PpGg+2VfBen59o7MMjT0IJYLHa
      yMnJwWa14nC6sFmN/bQQIhG6rvPGe8NcHwrwr//Ffj51pIGZYJgbE/O3/0ZmgcSO1T8+x89P
      9fPrD7ewp66YqpJc6srzON05fvtvJAHEjjS/tMq3X7lCR1MpTz3QcPv3D3fUcuXGFIsrEUAS
      QOxAMVXju69dw2ox89Wn92G+YyLhYHMZJkXh8sAUIAkgdhhd13n9wiB9o7N8/df2k+uyrfn/
      eTl29jWWcrpzHF3XJQHEztI9MsPLpwd44bHdNFV57vo3D3fUMOwL4p1ekgQQO8fsQpi/+eVV
      Du0u58nDDRv+XXO1hxKPi3NdE5IAYmeIxuJ851dXyXFY+cqn9mK6xw0qq8XM0T2VnOtOMAF0
      XWd2dg5d15n0jhKYXZBaIJFxuq7zytkBhn1Bvv7cAdxO28c+5sTeahZXIoklwMriPAPDo+hx
      FWdeIQHf+Mc/SIg0uzwwxevnh/jiE23Uleff12NKCly01BQlWgxXSL57CsVsYto/TnltvRTD
      pYkUw92f6WCI773eyYNtVRxvr0RVN27V89F4D7ZVJJYAwZkpgsEgPp+P4NIqij1IUb47I42x
      YGcWbt0ixXAfL6bG+e7r18nPsfPFJ9uw3kdpzp3xjrRWJZYABcVlHC8uA6Cqqub27+U6QBhN
      13V+9m4/E9NL/PmXj+NyWBPehtNukVkgsT1d7PXz5ntD/OYn26kpzUt6O5IAYtuJRFV+erKX
      Rw/Ucry9alPbkgQQ24qu6/zsVB+5Thuf+8SeTXfPlgQQ28p7vX7evjTKV57ai8O2+Qt2SQCx
      bUzOrfDd1zp5ZH8N9fc53/9xJAHEtrAaVfnWy5cpL8rh8yk49blFEkBseZqm85O3e5gOhvid
      5w5gT8Gpzy2SAGLLO3Pdy+lOL197Zh/lhe6Ubjvhxljvnr2AHlfpvPAO3vloSgcjPnTlRoBB
      XzDTw8i40ckFfvRWN08cquNwS3nKt59wY6wSTwDFbKGhroZ51i6SJ3UrqbEUivKtl69gt5p5
      9lgjx9oq132zKR222j4NR1S+/coVakpzee5406bHd7fHJ1wLND4+jqewmMDwKMsuqC5oksZY
      KRaKhtE0naYqD6+cHeRX54d4sL2Kxw7UUlHkTuvKkVtln2qazksnu1gJR/nG5x7A5bSnJZ6s
      ELMF4/3orW6u3ZjiP379UdS4xrtXxnjr0gjB5QgHdpXx6P5a2huKU54IW2mfnrwyxvdf7+QP
      P3uE/bvK0hZPOlttMdFYnPf7/JzYW4XZpGC1WHn6WBNPHG6gcyjAGxeH+KufXqS6NI/HD9Zx
      pLUiJTeEtpJhf5Afv93Ns8d30dFUmtZYO2vP7QDXh6dZWI5wYm/1mt9bLSYOtZRzsLmMYX+Q
      184P8YM3u/jF6X5O7K3msQN1eHIdGRp16iyFIvzNL6/SUFHA8yd2pX2hcEmALUTXdc5e99JS
      U0hRvvOuf6MoCo2VHn7/Nw4zsxDi5OUx3r06zpvvjfBAawWPH6qjpjTP0BXmU0XTdP7fG12s
      RlX+5NmjWC3mtMeUBNhCgssRukZm+NrT+7ift29xvovPfqKV5x9q5tS1cd69Msapa+O01hbx
      5JF6OppK1zSF2sp0XefN94e5MjDFNz53ZMMPgFSTBNhCLvb4sJpNdOxK7LzXZjXz5OF6PnGg
      lq6RGd6+NML/+YfLlHlyeGR/DQ/tq8ZpT/wLI0a6MTHPz9/t5/mHmtlTV2xYXEmALULTdM52
      TXB4dwUuuzWpOW+z2URHUyn7GksYDyzy9qVRfn6qn1fP3uBoWxWfOlJPYZ5zy50eLa5E+NtX
      r9FSW8gzRxsNHZ8kwBYxMhnEP7vEb36yfdPbUhSF2rJ8/uWzHXz6kRZOXR3n1NUxTl4ZpaOp
      lKePNtFQkb8lEkHTdf7va53E4hr/6tkOzGaD7yUZGk1s6Mz1CUo9OezaoJ1fsgrcDp5/qJln
      jjVyocfPqatj/Ofvnaa+PJ+njjZysLkcqyVz1wm/OjdI18g0f/z5oxS4jZ/FSigBtHiMiclp
      aior8I4NY88tpqQw+e9jiptWoyrv9/p5+ljjPTuabYbVYuahfdUcb6+id2yWk1dG+c4vr/KS
      q4cnDtfzYHsVDqsJo+6D6bpOz+gsL58e4DOPtLC7ptCYwB+R0NNdDYeYnpmhJN9O1JTD8pSP
      Yk8ucPMJpeCmckJ2SrzOwQDhqMrh3eXrYqQ6pqLAnroiWuuKmJxd5nTnOK+evcErZwZwO200
      VhakNN5GIh+s2ri3sYRPHrnZx9OI1/OjMRJKAJc7H6fdiq5p2Kw24mYz+gcbNbIQDj5sHLXd
      4+m6zqlrY7TVF+Nx22/vx1vx0vkcyzwuXnh0N08/0Mj33+hicGKeqGrM6xhTNUyKwvG2ShR0
      NC39b/67vYYJF8MtLy2zFCsnHPRjz/ugHkVRMJvNhtYC6bqO2Zz+GyXpjje7EKZ3bI5/+/zB
      9YVaBjXGynOb+b3PHCIaU7HbjJku1XWdSDSG3WY17IPsbq9hwo2xHvigMVZp0YcXa9IYK3ln
      u7zkumzsbSzJ6DgURcFs4JKfiqJgMZsyPhO1PW4T7lBqXONCj49DLeU7rqBtu5AEyKAbE/NM
      za3w8L6aj/9jkRaSABl0vmuCiiI3tWUylZwpkgAZshyO8n6fn0f212T8PDibSQJkSOdgAFXT
      OZSGL3qL+ycJkCEnr4zR0VSKJ9eYsl9xd5IAGRCYX2HIF+TBts11Nhabl1wC6DqR1TBq3Ni7
      vzvFP3eO48lz0FZvXN27uLukJp/Dy3PcGA2gahoHOjZfvptNYmqciz1+DrWUY7Madydb3F1S
      CWC2WNHiMVaWV282xZLGWPetZ2SG6WCIh/dW3XNBN1kkz5h4SSWAxerEaTfjzC3HZDLdLoWQ
      xlj3pus657r9NFYWUFly7y+uyyJ5xsRLKrrJYqWl9cNTH6kFuj9LoSidQ4GUtvcWmyOzQAa6
      1D+JrsOB5tR0OhObJwlgEF3X+efOcQ42l5GXk5o+l2LzJAEMMh5YxBtY4sS+6o//Y2EYSQCD
      nO/24cl1pPxL72JzJAEMoMY1znZ5Od5eZUi7P3H/JAEMcH0owEo4xjEpfdhy1k2DxlWVeFwF
      k1XuVKbAzYtfL801hZQUuDI9HPER644AV65c4uRbr3HuvcuZGM+Os7gSoWt4muPtVWnr+SOS
      t+4IkOe0YGtsJ9eVs+GDdE3lxsAAdnchNVUyp30v57pvNrw9srsi00MRd7EuAWamp5icH6Vx
      z/4NHxRbXWFVVQjPzVJdWZqxplhG1skkE0/TdC50+zjYUobVYkro8bJPjYm37hRodTXysaUN
      cTWG2WIDPtyY3Npfb2RygfHAYtJfepd9mn5rjgCj/VcxOfOJBqdQ1Y0r9ew5+diYIaew5HZj
      LDC2GE7TtC0f72KvnxKPi6aqwoTP/3VdN7wYbjvs01THW5MAVqsDqyuPJ586TLFn404FJrOV
      Xbtbb/8sxXDrhSMxznf7ePbBJrn43cLWpENRWSVuk8rPfvS3vHryYqbGtCN0Dc8Qjanypfct
      bs0RYGK4j+7BcVo7jtDatjtTY9oR3r06RmtdMcUGrXUlkrPmCODMceOw2wjOBhibmMzUmLa9
      ucUwvWOzPNheJReyW9yaI0Bp9S5+vbYl7W25d7qz1yfIddrYn+Bid8J4axKgu/MS/tkge3bv
      wZ3nwZPvztS4ti01rnG+x8eh3eXYrdLwdqtbcwq0u7WNHIeTYHCB6D2+sC02NuwP4ptZ4pEO
      aXi7Haz5iLI53dhNMXw+LyHVRFmRMcvl7CRnrnupLsmlplQa3m4H6+5CWMxWFAUsVtuGD4qr
      Efw+H4GZebkHcIflcJRLfZPS8HYbWXeS2rLvEPvsDkz3WA5IUcw4nQ5GxiYoKTb+G05dw9Oc
      ve7lS59sx+3cOFGNdm0wgBrXONQihW/bxboEuHTmHXLKm6ipqtzwbrDJbIHoCuU1DeiadrM5
      loGFTee7Jzjf48NuNfP5x1uxGLC48v00cTp1dYw99cXkOi33bHp1P6QxljHxFP0jJYfBwATT
      K3GKPQV4CjY6j9WZnp6hpOTmula3XiSj6jp0XWfYN8+3XrmK2aTwhy8cobwovTNWqqres4lT
      79gsf/l35/kPXz1Bffnmr50y0Rjr457jToy3bu929d9gamKA7u6ee2xKuf3mzwRFUagty+PP
      v/wgTruVv/jhOQa8cxkbD8CF7gmqiuXid7tZlwDN9dV4vTPUt+zJxHgS4sl18idfOEpDRQH/
      /ccXPmg8ZfxleTiicr7Hx0P7qjEb3MpQbM66V6u/v5+KilKGh0YyMJzE5Tis/O6nD3GsrZJv
      /uIyb70/YngSXBmYRNN0Du+WwrftZs0JkXewixtjU+Tl51FaVZSpMSXMajHxtWc68OQ6+cnb
      PcwvrfLZx1oNKUPWdJ1T18bpaCqlwO1IezyRWmuOANVN7XS0NuBwOPF4tt9NsOdO7OJrz+zj
      7UujfPuVK0Rj6Z9lmJ4PMTgxz7E2KXzbjtadAoVDoUyMIyUUReGhfTX8wQuH6Rqe5n++dJGl
      UDStMc9c9+KWwrdta10CKDYHe/bsobxk+x0BbmlvKOFPv3SMwPwKf/HDc8wspCepY2qc9/r8
      HGurlIvfbWrdq1aY56avt5epmWAmxpMydWX5/LuvHMdiVvgv3z/DsD/1z6d/fI7pYEga3m5j
      6xLA4cwhL9dFIDB9zwdGwiushFbTNrBUKMp38adfPEZ1aR5/+XfnuXpjKqUzRGevT1BXlkdV
      cW7KtimMtS4BlhfnmZqaITc/f8MHxaMhevsHWd4G1wtup43f/8xhDjaX87//4RLvXh1PSRIs
      haJcHpjk4Q4pfNvO1k2DDowFiISXmJqe3/BBkdAiq1Edr9dLcWHBll8kz6TAV59qJ99t4wdv
      XGcmuMKnH27eVLz3eicwm010NJZsuu7nbqQWyJh4axKgoKiUkuJZTLZaDh06sOGGHLmFOKx+
      zHY3JsWE/sFxZKsv6PbCo60U57v44ZvdLKxE+a2n92JLoF35rXi6rnPmuo+9DSV48tLT8FYW
      yTMm3pqf/ONDTExOY7PM0pfvYX9r4103YjLb2H/g4O2fM1B9kBRFUXh0fy2eXCff/MUlFkMR
      /s3zB8lxWBPazsTMMiOTQT7zSEuaRiqMsq4aNBlGV4PC5isJh31B/vrv3yPfbecPfuMIRR/T
      vuTOeD95u4dL/ZP8p995LG2l2FINaky8rJ28bqgs4N//1glUVeO//uAM44HF+3pcJKZysdfP
      0T2VhnwPQaRXVr+CxQUu/uzLxyktyOG//eAs3SP3nvoF6B2dZX4xzEMy978jZHUCAOS6bPzR
      Z4+wr7GUv/7p+5zu9G44TXprtZeW2kJKPRuvnyC2j6xPAAC7zcLXn9vPYwdr+d7rnbx6bvCu
      SbCwEqF7eJrj7fLpv1NI56YPmE0mvvD4Horznfz4n3qYXwrzxSfasVo+/Iy40OPDYjFJ3f8O
      IglwB0VReOJQPQVuB9959RrBpQi//Wv7cTms6LrOua4JDuwqw2lPbNpUbF1yCvQRiqJwqKWc
      b3zuCMP+IP/jpYvMLYUZmVxgYnqJh6Xj246S3H0AXaWnqwdnQQn11eXb8j7A/fDPLPFXf/8+
      oFNZlMvk3DIv/vajhrVhkfsA6Y+XVPR4dJWFlTDuIvPtxdyMXtRN07S015KUelz82ZeO8r9+
      dokrN6Z47EAtCrohNSy3aoF22j7davGSSgDF4uDQwYP09fRSVV58uxoy0+s9pUNBrpOvPr2X
      b/7iMruqPIbX5uzEfbqV4iV1CqTFYwwPDeHML6GytHDHngLdKRqNYbMZd/Erp0DGxEsqusls
      pak5u5ZQkoXudiaZBRJZTRJAZDVJAJHVJAFEVpMEEFlNEkBkNUkAkdWSTgAtHiW4sJzKsQhh
      uCQTQGd0cIDhcV9qRyOEwZK6ExwKBhidnCcS04m37dryjbG2YzxpjGVMvOTbouhxxryT1NZU
      ZUUtkNHxpBbImHjJ713FTG1N1WbHJERGySyQyGqSACKrSQKIrCYJILKaJIDIapIAIqtJAois
      JgkgslpSCaCpUfp7uugbHGWbLA4jxF0l1xXCYiPHZWd2JYquaWhSC5RyUgtkTLzkOsPFYxSV
      1TDV3QWKiVvlKrKgW+rIInnGxEtq7yoo+LyjVNY2IN1yxHaWZGMsC427PlwhcbusEinER8ks
      kMhqkgAiq0kCiKwmCSCymiSAyGqSACKrSQKIrJZUAui6jt87wtRMUGqBxLaWXAJoKjn5xUz7
      vakejxCGSm6RPMXE1MQoFbUNUgyXJlIMZ0y8pBJAjaywuBLBND9PYX7O7cOIFG6ljhTDGRMv
      +c5wd5DOcKknneGMiSezQCKrSQKIrCYJILKaJIDIapIAIqtJAoisJgkgspokgMhqSdYCxem7
      doHpZTXV4xHCUMndhlNMlJd4WIzdrAOSWqDUk1ogY+IleR9aJ66qxGIxFMUmjbHSQGqBjImX
      3ClQXGVRtWOOLKRkUEJkStK9QesbGm//LI2xxHYls0Aiq0kCiKwmCSCymiSAyGrJJYCu4xsf
      Zja4nOLhCGGspBIgsjJPWHMQ8I1LWxSxrSW3QowWx253oEeMvYkhRKoldQRwuj2E5n1YXXmp
      Ho8Qhtp0Vwhd12//M/K2fTwex2w279h4t2qBFMW4Rah2+j69W7yUnMPcSgAjC7eyId6d/zUq
      5k7fpx+Nt+kEuLNgy8hPK6MLxYyOd+uNL/s0vfFS0hhLiO3K/OKLL76Yig3Fwsv0DQywqios
      zvjwzy7hNKv0DgxidzoZGRrCOzlDWVlJwkurRkOL9A3cIBI3EQx4mZxbxqHE6L0xjMvtZmig
      j8VwDE9BXkqWbdV1naGBHgJzS5i1VQaGRsn35NPf00NUt7Iw7WViao6iosKUfUIHfGMMj3px
      5bjo7+1Bt7gIzfuYC+tY4yF6BgZx5XmwW1Nzzhxemqf/xhBxxcqMb4TZpVVcVugb9lJSlE9/
      z3UcecXYLKn5hNY1lRv9vcwuhCC6wuDoBJ5CD93Xr1NYXIpvdJBRX4CSkqKU7NO7vR/zXVa6
      +ocpKcxnoL+X2cXV1N0JNttdNNRWEVqZZzVmJUeLMRKYp71tF9OBRXa3NOJ0OJJ6g1ocbuqr
      KwmtzBNR7TjjUUamg+xta2B8eJRwVGV5aSlVTwWA+sYmYuEwgfll9u6upvNiJ6UNLYSCUyyu
      6rgVlYXVWMriFZdXk+c0MzYwQl1bB4uzU7jduYTDIfyBOdrbdjE5EUhZPHtOPnVVpayszKHq
      bizRVVSzHZMeA03H7bSxGkvhyYFiprGxkUgoxOxiiF01xfj9c9gdNuKaTlVtPRY1Sqq+Y3i3
      92NIMWMxaZjMVvJyc1gNpzAB1NACw/4gzU0NqGqUiKpi1uKEw2EwmxkfHqGmvj6pbUeX5xmd
      XqS5sf72tk2aymp4FVWN4faUomhRUndXTqe3p5+WtlaIq4RDIexOx814molSj4uxqVms5tSd
      v06MDuIsqqa00Ek4HEaN69jtdgCUO/ZjqoQWZvAHIzTVVaOqEaKqisPhuBnPbMGWoiPNLboW
      o6dvkNb2VvS4yupqGIvDhdV88yNxaKCPmubdWFN0RL3b+9Fpv/kBrGkq+YXlxCPLqUuAmBpH
      j4XxTy1QVpyLw1PMroY6/P556mrKyC8px2VN7smpcQ0tEsIfWKS0KAdXUQktDXV4/UH27G3D
      rq1QWlFD6patj2NSFMZGvdTWVeGbjbL3QBvxxWkqa2rRNI2GllZyrKm8Eagw4/fiLKliecpL
      TX0d414fkeUFyms/3I+pEo/rxEJLBGbDFHns5JWUszDlQ42pTAWmmV5YZX7an7J4uqZhQmd0
      1EtNdQVzK1Cco7MSiuKf9KMoJryjo8RTdEl6t/djeDaAGlMJzATxeUcpraqVi2CR3aQaVGQ1
      SQCR1SQBxJa3urqKrmtEIpGUb1vKOcWWd+6df6S4ooKIo4K8+ByFVU1Mjg1SVtuEujxL3Oyk
      qrwkqW3LEUBseSceOc67F/rY5ZzhncuDnD5zlqWVJd548yS/fPllLDZ70tuWBBBbni0nj5b6
      WpwF5eQ7rbQ21xNTFDx5bmqbdlNWmHxZvkyDiqwmRwCR1f4/5P/YVoj5yVwAAAAASUVORK5C
      YII=
    </thumbnail>
  </thumbnails>
</workbook>
