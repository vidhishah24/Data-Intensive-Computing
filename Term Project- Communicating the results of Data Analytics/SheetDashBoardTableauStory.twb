<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10200.17.0328.0755                               -->
<workbook source-build='10.2.1 (10200.17.0328.0755)' source-platform='win' version='10.2' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <style-theme name='clean' />
  <datasources>
    <datasource caption='Data by country (Worldbankdata)' inline='true' name='excel-direct.42012.939728854166' version='10.2'>
      <connection class='federated' prefer-ind-semantics='true'>
        <named-connections>
          <named-connection caption='Data by country (Worldbankdata)' name='excel-direct.42012.939728854166leaf'>
            <connection class='excel-direct' cleaning='no' compat='no' filename='A:/Semester 2/DIC/Term Project/TermProjectData/Worldbankdata.xlsx' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.42012.939728854166leaf' name='&apos;Data by country$&apos;' table='[&apos;Data by country$&apos;]' type='table'>
          <columns header='yes'>
            <column datatype='string' name='Country Name' ordinal='0' />
            <column datatype='date' name='Date' ordinal='1' />
            <column datatype='integer' name='Stock: Listed domestic companies (count)' ordinal='2' />
            <column datatype='integer' name='Stock: Market cap companies (current US$)' ordinal='3' />
            <column datatype='integer' name='Stock: Traded, total value (current US$)' ordinal='4' />
            <column datatype='integer' name='Stock: Market cap of companies (% GDP)' ordinal='5' />
            <column datatype='integer' name='Stock: Traded, total value (% GDP)' ordinal='6' />
            <column datatype='integer' name='Stock: Traded, turnover ratio (%)' ordinal='7' />
            <column datatype='integer' name='Banks: Comm branches (per 100k adults)' ordinal='8' />
            <column datatype='integer' name='Banks: Automated tellers (per 100k adults)' ordinal='9' />
            <column datatype='integer' name='Finance: Consumer price index (2005 = 100)' ordinal='10' />
            <column datatype='integer' name='Finance: Deposit interest rate (%)' ordinal='11' />
            <column datatype='integer' name='Finance: Lending interest rate (%)' ordinal='12' />
            <column datatype='integer' name='Finance: Real interest rate (%)' ordinal='13' />
            <column datatype='integer' name='Business: Start-up proc cost (% GNI per capita)' ordinal='14' />
            <column datatype='integer' name='Business: Cost to export ($ per container)' ordinal='15' />
            <column datatype='integer' name='Business: Cost to import ($ per container)' ordinal='16' />
            <column datatype='integer' name='Business: Ease of biz index (1=easiest)' ordinal='17' />
            <column datatype='integer' name='Business: Start-up procedures (count)' ordinal='18' />
            <column datatype='integer' name='Business: Legal rights (0=weak, 10=strong)' ordinal='19' />
            <column datatype='integer' name='Business: Time to start a business (days)' ordinal='20' />
            <column datatype='integer' name='Business: Time to prep &amp; pay taxes (hours)' ordinal='21' />
            <column datatype='integer' name='Business: Total tax rate (% of commercial profits)' ordinal='22' />
            <column datatype='integer' name='Business: Firing cost (weeks of wages)' ordinal='23' />
            <column datatype='integer' name='R&amp;D: Scientific &amp; tech articles' ordinal='24' />
            <column datatype='integer' name='Transit: Air transport, passengers (count)' ordinal='25' />
            <column datatype='integer' name='Transit: Railways, (million passenger-km)' ordinal='26' />
            <column datatype='integer' name='Transit: Passenger cars (per 1,000 people)' ordinal='27' />
            <column datatype='integer' name='Business: Mobile phone subscribers' ordinal='28' />
            <column datatype='integer' name='Business: Internet users (per 100 people)' ordinal='29' />
            <column datatype='integer' name='Military: Armed forces personnel' ordinal='30' />
            <column datatype='real' name='Military: Expenditure (% GDP)' ordinal='31' />
            <column datatype='real' name='Military: Expenditure (% central govt exp)' ordinal='32' />
            <column datatype='integer' name='Business: Exports (% GDP)' ordinal='33' />
            <column datatype='integer' name='Business: Imports (% GDP)' ordinal='34' />
            <column datatype='integer' name='Business: Trade (% GDP)' ordinal='35' />
            <column datatype='integer' name='Business: Exports (current US$)' ordinal='36' />
            <column datatype='integer' name='Business: Imports (current US$)' ordinal='37' />
            <column datatype='integer' name='Finance: GDP (current US$)' ordinal='38' />
            <column datatype='integer' name='Finance: GDP per capita (current US$)' ordinal='39' />
            <column datatype='integer' name='Finance: Net income from abroad (current LCU)' ordinal='40' />
            <column datatype='integer' name='Government: Seats women in nat parliament (%)' ordinal='41' />
            <column datatype='integer' name='Health: Mortality, under-5 (per 1,000 live births)' ordinal='42' />
            <column datatype='integer' name='Health: Health expenditure per capita (current US$)' ordinal='43' />
            <column datatype='integer' name='Health: Health expenditure, total (% GDP)' ordinal='44' />
            <column datatype='integer' name='Population: Total (count)' ordinal='45' />
            <column datatype='integer' name='Population: Urban (count)' ordinal='46' />
            <column datatype='integer' name='Population:: Birth rate, crude (per 1,000)' ordinal='47' />
            <column datatype='integer' name='Health: Life expectancy at birth, female (years)' ordinal='48' />
            <column datatype='integer' name='Health: Life expectancy at birth, male (years)' ordinal='49' />
            <column datatype='integer' name='Health: Life expectancy at birth, total (years)' ordinal='50' />
            <column datatype='integer' name='Population: Ages 0-14 (% of total)' ordinal='51' />
            <column datatype='integer' name='Population: Ages 15-64 (% of total)' ordinal='52' />
            <column datatype='integer' name='Population: Ages 65+ (% of total)' ordinal='53' />
            <column datatype='integer' name='Business: International tourism inc (current US$)' ordinal='54' />
            <column datatype='integer' name='Business: International tourism, exp (current US$)' ordinal='55' />
            <column datatype='integer' name='Measures with values' ordinal='56' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Country Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country Name]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Country Name</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>1</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Stock: Listed domestic companies (count)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Stock: Listed domestic companies (count)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Stock: Listed domestic companies (count)</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Stock: Market cap companies (current US$)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Stock: Market cap companies (current US$)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Stock: Market cap companies (current US$)</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Stock: Traded, total value (current US$)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Stock: Traded, total value (current US$)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Stock: Traded, total value (current US$)</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Stock: Market cap of companies (% GDP)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Stock: Market cap of companies (% GDP)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Stock: Market cap of companies (% GDP)</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Stock: Traded, total value (% GDP)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Stock: Traded, total value (% GDP)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Stock: Traded, total value (% GDP)</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Stock: Traded, turnover ratio (%)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Stock: Traded, turnover ratio (%)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Stock: Traded, turnover ratio (%)</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Banks: Comm branches (per 100k adults)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Banks: Comm branches (per 100k adults)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Banks: Comm branches (per 100k adults)</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Banks: Automated tellers (per 100k adults)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Banks: Automated tellers (per 100k adults)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Banks: Automated tellers (per 100k adults)</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Finance: Consumer price index (2005 = 100)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Finance: Consumer price index (2005 = 100)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Finance: Consumer price index (2005 = 100)</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Finance: Deposit interest rate (%)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Finance: Deposit interest rate (%)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Finance: Deposit interest rate (%)</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Finance: Lending interest rate (%)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Finance: Lending interest rate (%)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Finance: Lending interest rate (%)</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Finance: Real interest rate (%)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Finance: Real interest rate (%)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Finance: Real interest rate (%)</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Start-up proc cost (% GNI per capita)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Start-up proc cost (% GNI per capita)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Start-up proc cost (% GNI per capita)</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Cost to export ($ per container)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Cost to export ($ per container)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Cost to export ($ per container)</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Cost to import ($ per container)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Cost to import ($ per container)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Cost to import ($ per container)</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Ease of biz index (1=easiest)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Ease of biz index (1=easiest)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Ease of biz index (1=easiest)</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Start-up procedures (count)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Start-up procedures (count)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Start-up procedures (count)</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Legal rights (0=weak, 10=strong)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Legal rights (0=weak, 10=strong)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Legal rights (0=weak, 10=strong)</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Time to start a business (days)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Time to start a business (days)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Time to start a business (days)</remote-alias>
            <ordinal>20</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Time to prep &amp; pay taxes (hours)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Time to prep &amp; pay taxes (hours)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Time to prep &amp; pay taxes (hours)</remote-alias>
            <ordinal>21</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Total tax rate (% of commercial profits)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Total tax rate (% of commercial profits)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Total tax rate (% of commercial profits)</remote-alias>
            <ordinal>22</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Firing cost (weeks of wages)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Firing cost (weeks of wages)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Firing cost (weeks of wages)</remote-alias>
            <ordinal>23</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>R&amp;D: Scientific &amp; tech articles</remote-name>
            <remote-type>20</remote-type>
            <local-name>[R&amp;D: Scientific &amp; tech articles]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>R&amp;D: Scientific &amp; tech articles</remote-alias>
            <ordinal>24</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Transit: Air transport, passengers (count)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Transit: Air transport, passengers (count)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Transit: Air transport, passengers (count)</remote-alias>
            <ordinal>25</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Transit: Railways, (million passenger-km)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Transit: Railways, (million passenger-km)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Transit: Railways, (million passenger-km)</remote-alias>
            <ordinal>26</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Transit: Passenger cars (per 1,000 people)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Transit: Passenger cars (per 1,000 people)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Transit: Passenger cars (per 1,000 people)</remote-alias>
            <ordinal>27</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Mobile phone subscribers</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Mobile phone subscribers]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Mobile phone subscribers</remote-alias>
            <ordinal>28</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Internet users (per 100 people)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Internet users (per 100 people)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Internet users (per 100 people)</remote-alias>
            <ordinal>29</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Military: Armed forces personnel</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Military: Armed forces personnel]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Military: Armed forces personnel</remote-alias>
            <ordinal>30</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Military: Expenditure (% GDP)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Military: Expenditure (% GDP)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Military: Expenditure (% GDP)</remote-alias>
            <ordinal>31</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Military: Expenditure (% central govt exp)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Military: Expenditure (% central govt exp)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Military: Expenditure (% central govt exp)</remote-alias>
            <ordinal>32</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Exports (% GDP)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Exports (% GDP)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Exports (% GDP)</remote-alias>
            <ordinal>33</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Imports (% GDP)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Imports (% GDP)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Imports (% GDP)</remote-alias>
            <ordinal>34</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Trade (% GDP)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Trade (% GDP)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Trade (% GDP)</remote-alias>
            <ordinal>35</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Exports (current US$)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Exports (current US$)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Exports (current US$)</remote-alias>
            <ordinal>36</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Imports (current US$)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Imports (current US$)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Imports (current US$)</remote-alias>
            <ordinal>37</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Finance: GDP (current US$)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Finance: GDP (current US$)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Finance: GDP (current US$)</remote-alias>
            <ordinal>38</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Finance: GDP per capita (current US$)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Finance: GDP per capita (current US$)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Finance: GDP per capita (current US$)</remote-alias>
            <ordinal>39</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Finance: Net income from abroad (current LCU)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Finance: Net income from abroad (current LCU)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Finance: Net income from abroad (current LCU)</remote-alias>
            <ordinal>40</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Government: Seats women in nat parliament (%)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Government: Seats women in nat parliament (%)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Government: Seats women in nat parliament (%)</remote-alias>
            <ordinal>41</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Health: Mortality, under-5 (per 1,000 live births)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Health: Mortality, under-5 (per 1,000 live births)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Health: Mortality, under-5 (per 1,000 live births)</remote-alias>
            <ordinal>42</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Health: Health expenditure per capita (current US$)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Health: Health expenditure per capita (current US$)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Health: Health expenditure per capita (current US$)</remote-alias>
            <ordinal>43</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Health: Health expenditure, total (% GDP)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Health: Health expenditure, total (% GDP)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Health: Health expenditure, total (% GDP)</remote-alias>
            <ordinal>44</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population: Total (count)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population: Total (count)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Population: Total (count)</remote-alias>
            <ordinal>45</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population: Urban (count)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population: Urban (count)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Population: Urban (count)</remote-alias>
            <ordinal>46</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population:: Birth rate, crude (per 1,000)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population:: Birth rate, crude (per 1,000)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Population:: Birth rate, crude (per 1,000)</remote-alias>
            <ordinal>47</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Health: Life expectancy at birth, female (years)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Health: Life expectancy at birth, female (years)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Health: Life expectancy at birth, female (years)</remote-alias>
            <ordinal>48</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Health: Life expectancy at birth, male (years)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Health: Life expectancy at birth, male (years)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Health: Life expectancy at birth, male (years)</remote-alias>
            <ordinal>49</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Health: Life expectancy at birth, total (years)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Health: Life expectancy at birth, total (years)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Health: Life expectancy at birth, total (years)</remote-alias>
            <ordinal>50</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population: Ages 0-14 (% of total)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population: Ages 0-14 (% of total)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Population: Ages 0-14 (% of total)</remote-alias>
            <ordinal>51</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population: Ages 15-64 (% of total)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population: Ages 15-64 (% of total)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Population: Ages 15-64 (% of total)</remote-alias>
            <ordinal>52</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population: Ages 65+ (% of total)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population: Ages 65+ (% of total)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Population: Ages 65+ (% of total)</remote-alias>
            <ordinal>53</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: International tourism inc (current US$)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: International tourism inc (current US$)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: International tourism inc (current US$)</remote-alias>
            <ordinal>54</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: International tourism, exp (current US$)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: International tourism, exp (current US$)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: International tourism, exp (current US$)</remote-alias>
            <ordinal>55</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Measures with values</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Measures with values]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Measures with values</remote-alias>
            <ordinal>56</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>2</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <layout dim-ordering='alphabetic' dim-percentage='0.111111' measure-ordering='alphabetic' measure-percentage='0.888889' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='Data by country (Worldbankdata) (2)' inline='true' name='excel-direct.42012.950994398147' version='10.2'>
      <connection class='federated' prefer-ind-semantics='true'>
        <named-connections>
          <named-connection caption='Data by country (Worldbankdata) (2)' name='excel-direct.42012.950994398147leaf'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='A:/Semester 2/DIC/Term Project/TermProjectData/Worldbankdata.xlsx' interpretationMode='0' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.42012.950994398147leaf' name='&apos;Data by country$&apos;' table='[&apos;Data by country$&apos;]' type='table'>
          <columns gridOrigin='A1:BE2355:no:A1:BE2355:0' header='yes' outcome='2'>
            <column datatype='string' name='Country Name' ordinal='0' />
            <column datatype='date' name='Date' ordinal='1' />
            <column datatype='integer' name='Stock: Listed domestic companies (count)' ordinal='2' />
            <column datatype='integer' name='Stock: Market cap companies (current US$)' ordinal='3' />
            <column datatype='integer' name='Stock: Traded, total value (current US$)' ordinal='4' />
            <column datatype='integer' name='Stock: Market cap of companies (% GDP)' ordinal='5' />
            <column datatype='integer' name='Stock: Traded, total value (% GDP)' ordinal='6' />
            <column datatype='integer' name='Stock: Traded, turnover ratio (%)' ordinal='7' />
            <column datatype='integer' name='Banks: Comm branches (per 100k adults)' ordinal='8' />
            <column datatype='integer' name='Banks: Automated tellers (per 100k adults)' ordinal='9' />
            <column datatype='integer' name='Finance: Consumer price index (2005 = 100)' ordinal='10' />
            <column datatype='integer' name='Finance: Deposit interest rate (%)' ordinal='11' />
            <column datatype='integer' name='Finance: Lending interest rate (%)' ordinal='12' />
            <column datatype='integer' name='Finance: Real interest rate (%)' ordinal='13' />
            <column datatype='integer' name='Business: Start-up proc cost (% GNI per capita)' ordinal='14' />
            <column datatype='integer' name='Business: Cost to export ($ per container)' ordinal='15' />
            <column datatype='integer' name='Business: Cost to import ($ per container)' ordinal='16' />
            <column datatype='integer' name='Business: Ease of biz index (1=easiest)' ordinal='17' />
            <column datatype='integer' name='Business: Start-up procedures (count)' ordinal='18' />
            <column datatype='integer' name='Business: Legal rights (0=weak, 10=strong)' ordinal='19' />
            <column datatype='integer' name='Business: Time to start a business (days)' ordinal='20' />
            <column datatype='integer' name='Business: Time to prep &amp; pay taxes (hours)' ordinal='21' />
            <column datatype='integer' name='Business: Total tax rate (% of commercial profits)' ordinal='22' />
            <column datatype='integer' name='Business: Firing cost (weeks of wages)' ordinal='23' />
            <column datatype='integer' name='R&amp;D: Scientific &amp; tech articles' ordinal='24' />
            <column datatype='integer' name='Transit: Air transport, passengers (count)' ordinal='25' />
            <column datatype='integer' name='Transit: Railways, (million passenger-km)' ordinal='26' />
            <column datatype='integer' name='Transit: Passenger cars (per 1,000 people)' ordinal='27' />
            <column datatype='integer' name='Business: Mobile phone subscribers' ordinal='28' />
            <column datatype='integer' name='Business: Internet users (per 100 people)' ordinal='29' />
            <column datatype='integer' name='Military: Armed forces personnel' ordinal='30' />
            <column datatype='real' name='Military: Expenditure (% GDP)' ordinal='31' />
            <column datatype='real' name='Military: Expenditure (% central govt exp)' ordinal='32' />
            <column datatype='integer' name='Business: Exports (% GDP)' ordinal='33' />
            <column datatype='integer' name='Business: Imports (% GDP)' ordinal='34' />
            <column datatype='integer' name='Business: Trade (% GDP)' ordinal='35' />
            <column datatype='integer' name='Business: Exports (current US$)' ordinal='36' />
            <column datatype='integer' name='Business: Imports (current US$)' ordinal='37' />
            <column datatype='integer' name='Finance: GDP (current US$)' ordinal='38' />
            <column datatype='integer' name='Finance: GDP per capita (current US$)' ordinal='39' />
            <column datatype='integer' name='Finance: Net income from abroad (current LCU)' ordinal='40' />
            <column datatype='integer' name='Government: Seats women in nat parliament (%)' ordinal='41' />
            <column datatype='integer' name='Health: Mortality, under-5 (per 1,000 live births)' ordinal='42' />
            <column datatype='integer' name='Health: Health expenditure per capita (current US$)' ordinal='43' />
            <column datatype='integer' name='Health: Health expenditure, total (% GDP)' ordinal='44' />
            <column datatype='integer' name='Population: Total (count)' ordinal='45' />
            <column datatype='integer' name='Population: Urban (count)' ordinal='46' />
            <column datatype='integer' name='Population:: Birth rate, crude (per 1,000)' ordinal='47' />
            <column datatype='integer' name='Health: Life expectancy at birth, female (years)' ordinal='48' />
            <column datatype='integer' name='Health: Life expectancy at birth, male (years)' ordinal='49' />
            <column datatype='integer' name='Health: Life expectancy at birth, total (years)' ordinal='50' />
            <column datatype='integer' name='Population: Ages 0-14 (% of total)' ordinal='51' />
            <column datatype='integer' name='Population: Ages 15-64 (% of total)' ordinal='52' />
            <column datatype='integer' name='Population: Ages 65+ (% of total)' ordinal='53' />
            <column datatype='integer' name='Business: International tourism inc (current US$)' ordinal='54' />
            <column datatype='integer' name='Business: International tourism, exp (current US$)' ordinal='55' />
            <column datatype='integer' name='Measures with values' ordinal='56' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Country Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country Name]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Country Name</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>1</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Stock: Listed domestic companies (count)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Stock: Listed domestic companies (count)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Stock: Listed domestic companies (count)</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Stock: Market cap companies (current US$)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Stock: Market cap companies (current US$)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Stock: Market cap companies (current US$)</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Stock: Traded, total value (current US$)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Stock: Traded, total value (current US$)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Stock: Traded, total value (current US$)</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Stock: Market cap of companies (% GDP)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Stock: Market cap of companies (% GDP)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Stock: Market cap of companies (% GDP)</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Stock: Traded, total value (% GDP)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Stock: Traded, total value (% GDP)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Stock: Traded, total value (% GDP)</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Stock: Traded, turnover ratio (%)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Stock: Traded, turnover ratio (%)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Stock: Traded, turnover ratio (%)</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Banks: Comm branches (per 100k adults)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Banks: Comm branches (per 100k adults)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Banks: Comm branches (per 100k adults)</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Banks: Automated tellers (per 100k adults)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Banks: Automated tellers (per 100k adults)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Banks: Automated tellers (per 100k adults)</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Finance: Consumer price index (2005 = 100)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Finance: Consumer price index (2005 = 100)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Finance: Consumer price index (2005 = 100)</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Finance: Deposit interest rate (%)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Finance: Deposit interest rate (%)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Finance: Deposit interest rate (%)</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Finance: Lending interest rate (%)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Finance: Lending interest rate (%)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Finance: Lending interest rate (%)</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Finance: Real interest rate (%)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Finance: Real interest rate (%)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Finance: Real interest rate (%)</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Start-up proc cost (% GNI per capita)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Start-up proc cost (% GNI per capita)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Start-up proc cost (% GNI per capita)</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Cost to export ($ per container)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Cost to export ($ per container)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Cost to export ($ per container)</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Cost to import ($ per container)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Cost to import ($ per container)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Cost to import ($ per container)</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Ease of biz index (1=easiest)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Ease of biz index (1=easiest)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Ease of biz index (1=easiest)</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Start-up procedures (count)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Start-up procedures (count)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Start-up procedures (count)</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Legal rights (0=weak, 10=strong)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Legal rights (0=weak, 10=strong)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Legal rights (0=weak, 10=strong)</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Time to start a business (days)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Time to start a business (days)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Time to start a business (days)</remote-alias>
            <ordinal>20</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Time to prep &amp; pay taxes (hours)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Time to prep &amp; pay taxes (hours)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Time to prep &amp; pay taxes (hours)</remote-alias>
            <ordinal>21</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Total tax rate (% of commercial profits)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Total tax rate (% of commercial profits)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Total tax rate (% of commercial profits)</remote-alias>
            <ordinal>22</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Firing cost (weeks of wages)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Firing cost (weeks of wages)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Firing cost (weeks of wages)</remote-alias>
            <ordinal>23</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>R&amp;D: Scientific &amp; tech articles</remote-name>
            <remote-type>20</remote-type>
            <local-name>[R&amp;D: Scientific &amp; tech articles]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>R&amp;D: Scientific &amp; tech articles</remote-alias>
            <ordinal>24</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Transit: Air transport, passengers (count)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Transit: Air transport, passengers (count)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Transit: Air transport, passengers (count)</remote-alias>
            <ordinal>25</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Transit: Railways, (million passenger-km)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Transit: Railways, (million passenger-km)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Transit: Railways, (million passenger-km)</remote-alias>
            <ordinal>26</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Transit: Passenger cars (per 1,000 people)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Transit: Passenger cars (per 1,000 people)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Transit: Passenger cars (per 1,000 people)</remote-alias>
            <ordinal>27</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Mobile phone subscribers</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Mobile phone subscribers]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Mobile phone subscribers</remote-alias>
            <ordinal>28</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Internet users (per 100 people)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Internet users (per 100 people)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Internet users (per 100 people)</remote-alias>
            <ordinal>29</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Military: Armed forces personnel</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Military: Armed forces personnel]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Military: Armed forces personnel</remote-alias>
            <ordinal>30</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Military: Expenditure (% GDP)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Military: Expenditure (% GDP)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Military: Expenditure (% GDP)</remote-alias>
            <ordinal>31</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Military: Expenditure (% central govt exp)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Military: Expenditure (% central govt exp)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Military: Expenditure (% central govt exp)</remote-alias>
            <ordinal>32</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Exports (% GDP)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Exports (% GDP)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Exports (% GDP)</remote-alias>
            <ordinal>33</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Imports (% GDP)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Imports (% GDP)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Imports (% GDP)</remote-alias>
            <ordinal>34</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Trade (% GDP)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Trade (% GDP)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Trade (% GDP)</remote-alias>
            <ordinal>35</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Exports (current US$)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Exports (current US$)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Exports (current US$)</remote-alias>
            <ordinal>36</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Imports (current US$)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Imports (current US$)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Imports (current US$)</remote-alias>
            <ordinal>37</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Finance: GDP (current US$)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Finance: GDP (current US$)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Finance: GDP (current US$)</remote-alias>
            <ordinal>38</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Finance: GDP per capita (current US$)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Finance: GDP per capita (current US$)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Finance: GDP per capita (current US$)</remote-alias>
            <ordinal>39</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Finance: Net income from abroad (current LCU)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Finance: Net income from abroad (current LCU)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Finance: Net income from abroad (current LCU)</remote-alias>
            <ordinal>40</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Government: Seats women in nat parliament (%)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Government: Seats women in nat parliament (%)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Government: Seats women in nat parliament (%)</remote-alias>
            <ordinal>41</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Health: Mortality, under-5 (per 1,000 live births)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Health: Mortality, under-5 (per 1,000 live births)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Health: Mortality, under-5 (per 1,000 live births)</remote-alias>
            <ordinal>42</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Health: Health expenditure per capita (current US$)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Health: Health expenditure per capita (current US$)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Health: Health expenditure per capita (current US$)</remote-alias>
            <ordinal>43</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Health: Health expenditure, total (% GDP)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Health: Health expenditure, total (% GDP)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Health: Health expenditure, total (% GDP)</remote-alias>
            <ordinal>44</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population: Total (count)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population: Total (count)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Population: Total (count)</remote-alias>
            <ordinal>45</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population: Urban (count)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population: Urban (count)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Population: Urban (count)</remote-alias>
            <ordinal>46</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population:: Birth rate, crude (per 1,000)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population:: Birth rate, crude (per 1,000)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Population:: Birth rate, crude (per 1,000)</remote-alias>
            <ordinal>47</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Health: Life expectancy at birth, female (years)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Health: Life expectancy at birth, female (years)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Health: Life expectancy at birth, female (years)</remote-alias>
            <ordinal>48</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Health: Life expectancy at birth, male (years)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Health: Life expectancy at birth, male (years)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Health: Life expectancy at birth, male (years)</remote-alias>
            <ordinal>49</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Health: Life expectancy at birth, total (years)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Health: Life expectancy at birth, total (years)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Health: Life expectancy at birth, total (years)</remote-alias>
            <ordinal>50</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population: Ages 0-14 (% of total)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population: Ages 0-14 (% of total)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Population: Ages 0-14 (% of total)</remote-alias>
            <ordinal>51</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population: Ages 15-64 (% of total)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population: Ages 15-64 (% of total)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Population: Ages 15-64 (% of total)</remote-alias>
            <ordinal>52</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population: Ages 65+ (% of total)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population: Ages 65+ (% of total)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Population: Ages 65+ (% of total)</remote-alias>
            <ordinal>53</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: International tourism inc (current US$)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: International tourism inc (current US$)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: International tourism inc (current US$)</remote-alias>
            <ordinal>54</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: International tourism, exp (current US$)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: International tourism, exp (current US$)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: International tourism, exp (current US$)</remote-alias>
            <ordinal>55</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Measures with values</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Measures with values]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Measures with values</remote-alias>
            <ordinal>56</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:BE2355:no:A1:BE2355:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.0910152' measure-ordering='alphabetic' measure-percentage='0.908985' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Country Name:nk]' palette='tableau-20' type='palette'>
            <map to='#17becf'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Channel Islands&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;St. Lucia&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Tuvalu&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Korea, Dem. Rep.&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;St. Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Congo, Rep.&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Kyrgyz Republic&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Macao SAR, China&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Timor-Leste&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;West Bank and Gaza&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Iran, Islamic Rep.&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Sint Maarten (Dutch part)&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Lao PDR&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;St. Martin (French part)&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Korea, Rep.&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Guam&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Yemen, Rep.&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Gambia, The&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Slovak Republic&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Virgin Islands (U.S.)&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Macedonia, FYR&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Micronesia, Fed. Sts.&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Syrian Arab Republic&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Egypt, Arab Rep.&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Russian Federation&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;St. Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Bahamas, The&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Northern Mariana Islands&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Brunei Darussalam&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Venezuela, RB&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;American Samoa&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Congo, Dem. Rep.&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Hong Kong SAR, China&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Swaziland&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='GDP'>
      <table>
        <view>
          <datasources>
            <datasource caption='Data by country (Worldbankdata) (2)' name='excel-direct.42012.950994398147' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='excel-direct.42012.950994398147'>
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[Finance: GDP (current US$)]' role='measure' type='quantitative' />
            <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Finance: GDP (current US$)]' derivation='Sum' name='[sum:Finance: GDP (current US$):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[excel-direct.42012.950994398147].[none:Country Name:nk]'>
            <groupfilter function='level-members' level='[none:Country Name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[excel-direct.42012.950994398147].[sum:Finance: GDP (current US$):qk]' included-values='non-null' />
          <slices>
            <column>[excel-direct.42012.950994398147].[none:Country Name:nk]</column>
            <column>[excel-direct.42012.950994398147].[sum:Finance: GDP (current US$):qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='499' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Circle' />
            <encodings>
              <size column='[excel-direct.42012.950994398147].[sum:Finance: GDP (current US$):qk]' />
              <text column='[excel-direct.42012.950994398147].[none:Country Name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='GDPPerCapita'>
      <table>
        <view>
          <datasources>
            <datasource caption='Data by country (Worldbankdata) (2)' name='excel-direct.42012.950994398147' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='excel-direct.42012.950994398147'>
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[Finance: GDP per capita (current US$)]' role='measure' type='quantitative' />
            <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Finance: GDP per capita (current US$)]' derivation='Sum' name='[sum:Finance: GDP per capita (current US$):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[excel-direct.42012.950994398147].[Latitude (generated)]' included-values='non-null' />
          <filter class='quantitative' column='[excel-direct.42012.950994398147].[Longitude (generated)]' included-values='non-null' />
          <slices>
            <column>[excel-direct.42012.950994398147].[Latitude (generated)]</column>
            <column>[excel-direct.42012.950994398147].[Longitude (generated)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[excel-direct.42012.950994398147].[sum:Finance: GDP per capita (current US$):qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
            <encoding attr='color' field='[excel-direct.42012.950994398147].[sum:Finance: GDP per capita (current US$):qk]' include-totals='true' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[excel-direct.42012.950994398147].[none:Country Name:nk]' value='false' />
            <format attr='break-on-special' field='[excel-direct.42012.950994398147].[none:Country Name:nk]' value='false' />
            <format attr='show-null-value-warning' field='[excel-direct.42012.950994398147].[none:Country Name:nk]' value='false' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='line-pattern-only' value='dashed' />
            <format attr='line-visibility' value='on' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[excel-direct.42012.950994398147].[none:Country Name:nk]' />
              <color column='[excel-direct.42012.950994398147].[sum:Finance: GDP per capita (current US$):qk]' />
              <geometry column='[excel-direct.42012.950994398147].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[excel-direct.42012.950994398147].[Latitude (generated)]</rows>
        <cols>[excel-direct.42012.950994398147].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='GDPYear'>
      <table>
        <view>
          <datasources>
            <datasource caption='Data by country (Worldbankdata) (2)' name='excel-direct.42012.950994398147' />
          </datasources>
          <datasource-dependencies datasource='excel-direct.42012.950994398147'>
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Finance: GDP (current US$)]' role='measure' type='quantitative' />
            <column-instance column='[Country Name]' derivation='Attribute' name='[attr:Country Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Finance: GDP (current US$)]' derivation='Sum' name='[sum:Finance: GDP (current US$):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Year-Trunc' name='[tyr:Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[excel-direct.42012.950994398147].[sum:Finance: GDP (current US$):qk]' included-values='non-null' />
          <slices>
            <column>[excel-direct.42012.950994398147].[sum:Finance: GDP (current US$):qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[excel-direct.42012.950994398147].[none:Country Name:nk]' />
              <tooltip column='[excel-direct.42012.950994398147].[attr:Country Name:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[excel-direct.42012.950994398147].[sum:Finance: GDP (current US$):qk]</rows>
        <cols>[excel-direct.42012.950994398147].[tyr:Date:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Population'>
      <table>
        <view>
          <datasources>
            <datasource caption='Data by country (Worldbankdata) (2)' name='excel-direct.42012.950994398147' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='excel-direct.42012.950994398147'>
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[Population: Total (count)]' role='measure' type='quantitative' />
            <column-instance column='[Country Name]' derivation='Attribute' name='[attr:Country Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Population: Total (count)]' derivation='Sum' name='[sum:Population: Total (count):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[excel-direct.42012.950994398147].[none:Country Name:nk]' />
              <size column='[excel-direct.42012.950994398147].[sum:Population: Total (count):qk]' />
              <lod column='[excel-direct.42012.950994398147].[none:Country Name:nk]' />
              <tooltip column='[excel-direct.42012.950994398147].[attr:Country Name:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[excel-direct.42012.950994398147].[Latitude (generated)]</rows>
        <cols>[excel-direct.42012.950994398147].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='PopulationAge'>
      <table>
        <view>
          <datasources>
            <datasource caption='Data by country (Worldbankdata) (2)' name='excel-direct.42012.950994398147' />
          </datasources>
          <datasource-dependencies datasource='excel-direct.42012.950994398147'>
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[Population: Ages 0-14 (% of total)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Population: Ages 15-64 (% of total)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Population: Ages 65+ (% of total)]' role='measure' type='quantitative' />
            <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Population: Ages 0-14 (% of total)]' derivation='Sum' name='[sum:Population: Ages 0-14 (% of total):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Population: Ages 15-64 (% of total)]' derivation='Sum' name='[sum:Population: Ages 15-64 (% of total):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Population: Ages 65+ (% of total)]' derivation='Sum' name='[sum:Population: Ages 65+ (% of total):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[excel-direct.42012.950994398147].[none:Country Name:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Country Name:nk]' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Aruba&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[excel-direct.42012.950994398147].[sum:Population: Ages 0-14 (% of total):qk]' included-values='non-null' />
          <slices>
            <column>[excel-direct.42012.950994398147].[sum:Population: Ages 0-14 (% of total):qk]</column>
            <column>[excel-direct.42012.950994398147].[none:Country Name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[excel-direct.42012.950994398147].[none:Country Name:nk]' />
            </encodings>
          </pane>
          <pane id='1' x-axis-name='[excel-direct.42012.950994398147].[sum:Population: Ages 0-14 (% of total):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[excel-direct.42012.950994398147].[none:Country Name:nk]' />
            </encodings>
          </pane>
          <pane id='2' x-axis-name='[excel-direct.42012.950994398147].[sum:Population: Ages 15-64 (% of total):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[excel-direct.42012.950994398147].[none:Country Name:nk]' />
            </encodings>
          </pane>
          <pane id='3' x-axis-name='[excel-direct.42012.950994398147].[sum:Population: Ages 65+ (% of total):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[excel-direct.42012.950994398147].[none:Country Name:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[excel-direct.42012.950994398147].[none:Country Name:nk]</rows>
        <cols>([excel-direct.42012.950994398147].[sum:Population: Ages 0-14 (% of total):qk] + ([excel-direct.42012.950994398147].[sum:Population: Ages 15-64 (% of total):qk] + [excel-direct.42012.950994398147].[sum:Population: Ages 65+ (% of total):qk]))</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Story 2' type='storyboard'>
      <layout-options>
        <title>
          <formatted-text>
            <run>World GDP/Population Show</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size maxheight='964' maxwidth='1016' minheight='964' minwidth='1016' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='1' param='vert' removable='false' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='5083' id='3' type='title' w='100000' x='0' y='0' />
            <zone h='11307' id='4' is-fixed='true' paired-zone-id='5' removable='false' type='flipboard-nav' w='100000' x='0' y='5083' />
            <zone h='83195' id='5' paired-zone-id='4' removable='false' type='flipboard' w='100000' x='0' y='16390'>
              <flipboard active-id='4' nav-type='caption' show-nav-arrows='true'>
                <story-points>
                  <story-point caption='Population' captured-sheet='Population' id='1' />
                  <story-point caption='GDP' captured-sheet='WorldGDPDashboard' id='2' />
                  <story-point caption='PopulationAge' captured-sheet='PopulationAge' id='3' />
                  <story-point caption='GDP Year' captured-sheet='GDPYear' id='4' />
                </story-points>
              </flipboard>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='WorldData' type='storyboard'>
      <layout-options>
        <title>
          <formatted-text>
            <run>World GDP/Population Show</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size maxheight='965' maxwidth='1016' minheight='965' minwidth='1016' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='1' param='vert' removable='false' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='5079' id='3' type='title' w='100000' x='0' y='0' />
            <zone h='11296' id='4' is-fixed='true' paired-zone-id='5' removable='false' type='flipboard-nav' w='100000' x='0' y='5079' />
            <zone h='83210' id='5' paired-zone-id='4' removable='false' type='flipboard' w='100000' x='0' y='16375'>
              <flipboard active-id='3' nav-type='caption' show-nav-arrows='true'>
                <story-points>
                  <story-point caption='World Population' captured-sheet='Population' id='3'>
                    <capturedDeltas>
                      <worksheet name='Population'>
                        <filter class='quantitative' column='[excel-direct.42012.950994398147].[Latitude (generated)]' included-values='non-null' />
                        <filter class='quantitative' column='[excel-direct.42012.950994398147].[Longitude (generated)]' included-values='non-null' />
                        <style delta-type='added'>
                          <style-rule element='table'>
                            <format attr='break-on-special' field='[excel-direct.42012.950994398147].[none:Country Name:nk]' value='false' />
                            <format attr='omit-on-special' field='[excel-direct.42012.950994398147].[none:Country Name:nk]' value='false' />
                            <format attr='show-null-value-warning' field='[excel-direct.42012.950994398147].[none:Country Name:nk]' value='false' />
                          </style-rule>
                        </style>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='GDP and GDPper capita' captured-sheet='WorldGDPDashboard' id='4'>
                    <capturedDeltas>
                      <worksheet name='GDPPerCapita'>
                        <selection-collection>
                          <tuple-selection>
                            <tuple-reference>
                              <tuple-descriptor>
                                <pane-descriptor>
                                  <x-fields>
                                    <field>[excel-direct.42012.950994398147].[Longitude (generated)]</field>
                                  </x-fields>
                                  <y-fields>
                                    <field>[excel-direct.42012.950994398147].[Latitude (generated)]</field>
                                  </y-fields>
                                </pane-descriptor>
                                <columns>
                                  <field>[excel-direct.42012.950994398147].[none:Country Name:nk]</field>
                                  <field>[excel-direct.42012.950994398147].[sum:Finance: GDP per capita (current US$):qk]</field>
                                  <field>[excel-direct.42012.950994398147].[Geometry (generated)]</field>
                                  <field>[excel-direct.42012.950994398147].[Latitude (generated)]</field>
                                  <field>[excel-direct.42012.950994398147].[Longitude (generated)]</field>
                                </columns>
                              </tuple-descriptor>
                              <tuple>
                                <value>&quot;China&quot;</value>
                                <value>23937</value>
                                <value>&quot;MULTIPOLYGON (((110.6906 20.1494,110.784 20.0176,110.9323 20.0176,111.0367 19.6386,110.9763 19.6386,110.8609 19.5232,110.806 19.5287,110.762 19.4243,110.6741 19.3859,110.5698 19.1332,110.5698 19.0508,110.5148 18.9903,110.5203 18.7871,110.4654 18.7706,110.4105 18.6607,110.2621 18.6662,110.1083 18.5399,110.0149 18.4135,109.7677 18.3971,109.7183 18.2982,109.7458 18.2542,109.57 18.2103,109.4546 18.2817,109.3118 18.3092,109.18 18.2872,109.1031 18.3641,108.9877 18.3586,108.8284 18.463,108.6856 18.5069,108.6911 18.7376,108.6196 18.8255,108.6581 18.9409,108.6141 19.1002,108.6746 19.1716,108.6306 19.2156,108.6856 19.3749,108.8723 19.4628,109.0042 19.5836,109.18 19.655,109.2074 19.721,109.158 19.7924,109.2624 19.9022,109.3173 19.9187,109.4052 19.8638,109.5205 19.8528,109.5151 19.9132,109.581 19.9846,109.7128 20.0121,109.8666 19.9407,109.938 19.9956,110.0095 19.9297,110.1193 20.0011,110.1578 20.067,110.2567 20.0341,110.3775 20.078,110.5753 20.0231,110.5698 20.0945,110.6906 20.1494)),((110.4215 21.0833,110.5533 21.0503,110.5039 20.9734,110.3555 20.9954,110.3116 21.0778,110.4215 21.0833)),((121.9574 30.1803,122.1003 30.1583,122.2266 30.1033,122.331 30.0209,122.32 29.9495,122.1662 29.9935,122.0289 29.9935,121.9739 30.0594,121.9574 30.1803)),((119.7711 25.6428,119.848 25.5494,119.837 25.4725,119.7052 25.434,119.7272 25.5219,119.6832 25.5988,119.7711 25.6428)),((121.4795 39.6508,121.5345 39.5739,121.4301 39.5079,121.3422 39.5244,121.3202 39.5903,121.4795 39.6508)),((114.227 22.5477,114.218 22.556,114.2088 22.5574,114.1865 22.5547,114.1778 22.5557,114.176 22.5602,114.1601 22.5614,114.1525 22.5551,114.1486 22.5422,114.1294 22.5422,114.1161 22.535,114.1125 22.5297,114.1072 22.5345,114.0969 22.5339,114.0914 22.5375,114.0784 22.5299,114.0849 22.5218,114.0787 22.5155,114.0727 22.5181,114.0603 22.5135,114.0557 22.5028,114.0392 22.5038,114.0265 22.5219,114.0151 22.523,114.0013 22.5269,113.9042 22.5335,113.7779 22.6819,113.7614 22.7533,113.668 22.7423,113.6131 22.8027,113.5856 22.9236,113.4922 22.9455,113.5252 22.8357,113.6131 22.7588,113.5691 22.7423,113.6021 22.6324,113.5527 22.572,113.5691 22.4896,113.5307 22.4017,113.6021 22.3687,113.5856 22.2424,113.5501 22.2222,113.5374 22.2222,113.5292 22.2165,113.5226 22.2274,113.5142 22.2362,113.528 22.1981,113.5168 22.1777,113.4593 22.1655,113.3384 22.193,113.2231 22.0336,113.1132 22.0721,113.1187 22.1875,113.0857 22.2039,113.0033 22.116,113.0308 21.9458,112.9099 21.8524,112.8385 21.9732,112.7451 21.9238,112.6408 21.781,112.5584 21.759,112.4155 21.8414,112.3991 21.737,112.2343 21.704,112.1738 21.8084,112.0145 21.7864,111.8937 21.6766,111.8277 21.6986,111.8442 21.7645,111.7728 21.7864,111.7618 21.6271,111.652 21.5283,111.597 21.5502,111.4817 21.5063,111.4322 21.5502,111.2729 21.4184,111.229 21.4843,111.0752 21.4623,110.8939 21.3854,110.7511 21.3854,110.6302 21.2261,110.4874 21.2206,110.3665 21.0998,110.2072 21.0394,110.1688 20.924,110.2017 20.8471,110.3226 20.8526,110.394 20.7922,110.3281 20.6823,110.405 20.5944,110.4709 20.5834,110.5368 20.479,110.4434 20.3307,110.3061 20.2593,110.1962 20.2758,110.1248 20.2428,110.0644 20.2923,109.938 20.2923,110.0149 20.4516,109.8337 20.5065,109.8337 20.5724,109.7403 20.6658,109.7787 20.7043,109.7623 20.8086,109.7018 20.8306,109.6689 20.9405,109.7128 21.0613,109.6744 21.1108,109.7732 21.2316,109.7677 21.336,109.9161 21.3635,109.9106 21.4733,109.8062 21.5063,109.7458 21.5832,109.7787 21.4898,109.6579 21.5173,109.6744 21.5997,109.5865 21.5832,109.5425 21.5008,109.4381 21.4568,109.158 21.4074,109.0481 21.4623,109.169 21.5283,109.1525 21.5832,108.9602 21.5997,108.7899 21.6436,108.746 21.6052,108.6856 21.704,108.6141 21.715,108.5592 21.7919,108.6141 21.8469,108.5482 21.8908,108.4878 21.8359,108.5757 21.6931,108.4768 21.5612,108.3944 21.5557,108.3669 21.6546,108.3175 21.6766,108.323 21.5887,108.1692 21.6052,108.1362 21.5447,107.9989 21.5447,107.9604 21.5447,107.878 21.6491,107.8231 21.6601,107.6693 21.6052,107.499 21.6162,107.488 21.6601,107.3672 21.6107,107.3067 21.7425,107.2353 21.704,107.087 21.8139,107.0266 21.8249,107.0595 21.9238,106.9991 21.9567,106.8068 21.9787,106.708 22.0282,106.6805 22.182,106.6915 22.2808,106.6585 22.3358,106.5761 22.3413,106.5651 22.4127,106.5926 22.5445,106.7189 22.6104,106.8288 22.8027,106.6585 22.8686,106.6036 22.9291,106.3234 22.8631,106.2191 22.9895,106.0103 22.995,105.9993 22.94,105.884 22.9181,105.7247 23.0664,105.5763 23.0939,105.5324 23.2037,105.439 23.3081,105.4115 23.2916,105.3291 23.3905,105.2193 23.2751,105.0819 23.2642,104.9556 23.1763,104.8183 23.1268,104.8457 22.9675,104.7359 22.8247,104.604 22.8302,104.3678 22.6928,104.2744 22.7423,104.2799 22.8357,104.0986 22.7917,104.0382 22.7148,104.0162 22.5226,103.9668 22.5061,103.824 22.6159,103.6482 22.7972,103.5218 22.594,103.4339 22.7148,103.4449 22.7533,103.3405 22.8192,103.2856 22.6874,103.2032 22.6544,103.1867 22.5665,103.0329 22.4456,102.934 22.4896,102.8846 22.594,102.7033 22.7038,102.577 22.7093,102.5165 22.7807,102.3298 22.5555,102.2529 22.4566,102.2693 22.4182,102.1485 22.4017,102.0331 22.4731,101.8738 22.3852,101.8024 22.4896,101.6871 22.4731,101.6266 22.2808,101.5497 22.2479,101.6047 22.16,101.5772 22.116,101.6211 21.9677,101.7145 21.9293,101.7804 21.8304,101.753 21.726,101.8244 21.6052,101.764 21.5777,101.7804 21.5118,101.742 21.314,101.8464 21.2426,101.731 21.1382,101.6761 21.1987,101.5992 21.1822,101.5607 21.2481,101.3959 21.2261,101.286 21.1767,101.2311 21.314,101.2696 21.3744,101.1982 21.4129,101.2146 21.5612,101.1762 21.5612,101.1487 21.5612,101.1597 21.6711,101.0883 21.77,101.0114 21.7095,100.885 21.6876,100.7257 21.5118,100.5829 21.4514,100.484 21.4568,100.4291 21.5447,100.2533 21.4678,100.127 21.5173,100.105 21.5942,100.1709 21.6656,100.127 21.704,99.9951 21.704,99.9402 21.8249,99.9951 21.9732,99.9622 22.0556,99.8688 22.0282,99.4787 22.138,99.3579 22.0941,99.2151 22.1215,99.1766 22.1875,99.237 22.2534,99.2535 22.3907,99.3634 22.4841,99.3854 22.5775,99.3139 22.7368,99.3908 22.8192,99.5611 22.9346,99.5172 23.0829,99.3249 23.1103,99.1766 23.0939,99.0503 23.1213,99.0338 23.1598,98.891 23.2092,98.9459 23.3081,98.9239 23.418,98.8031 23.5388,98.891 23.6157,98.8525 23.6322,98.8086 23.7695,98.6987 23.786,98.6822 23.9124,98.7756 24.0277,98.9019 24.1101,98.7152 24.1321,98.6108 24.0882,98.5504 24.1321,98.1164 24.0991,97.7923 23.9563,97.7099 23.8684,97.6385 23.8629,97.5396 23.9288,97.7428 24.1101,97.7428 24.2255,97.7813 24.2584,97.6824 24.3024,97.7264 24.3793,97.6934 24.4507,97.5396 24.4342,97.578 24.5606,97.589 24.7638,97.6604 24.7858,97.7428 24.9122,97.7319 25.0824,97.8143 25.1648,97.8527 25.2747,97.9241 25.2143,98.0615 25.3077,98.1603 25.456,98.1274 25.5219,98.2427 25.6153,98.3142 25.5494,98.402 25.5933,98.479 25.7801,98.5394 25.846,98.6438 25.7911,98.7097 25.857,98.6822 25.9394,98.6163 25.9779,98.7426 26.1921,98.6767 26.2415,98.7371 26.3514,98.7536 26.5601,98.7866 26.6206,98.7481 26.714,98.7646 26.7964,98.7042 27.2139,98.7371 27.3512,98.6877 27.4885,98.7042 27.5654,98.5888 27.5709,98.5394 27.6204,98.4405 27.6313,98.4295 27.5544,98.3196 27.5215,98.3032 27.6313,98.2263 27.7192,98.2263 27.8126,98.1768 27.8401,98.1988 27.9335,98.1439 27.95,98.1603 28.1038,98.1327 28.1545,98.0314 28.1923,98.0261 28.2459,97.9121 28.3675,97.7965 28.332,97.7379 28.4227,97.721 28.4982,97.6658 28.5352,97.5639 28.5435,97.5066 28.4938,97.5216 28.4476,97.4815 28.3788,97.5027 28.3373,97.4627 28.2741,97.3473 28.2081,97.1462 28.3532,97.0782 28.3713,96.9769 28.3297,96.8893 28.3856,96.8614 28.4854,96.767 28.5148,96.7451 28.5715,96.6136 28.6138,96.495 28.6092,96.5358 28.681,96.6212 28.7354,96.5177 28.8864,96.5215 28.9303,96.5079 28.9469,96.4406 28.9529,96.4346 29.0066,96.3681 29.0383,96.3681 29.1085,96.2616 29.0889,96.2133 29.0277,96.1831 29.1108,96.3017 29.1773,96.2624 29.243,96.1831 29.2717,96.1392 29.3427,96.0539 29.3827,95.9655 29.3759,95.8484 29.3163,95.8386 29.3533,95.757 29.3223,95.7087 29.2037,95.6097 29.2347,95.5002 29.1818,95.5093 29.1267,95.2993 29.1365,95.2728 29.1055,95.1361 29.0881,95.0968 29.1418,94.9941 29.144,94.7516 29.2294,94.6935 29.3178,94.5409 29.2196,94.4571 29.2128,94.3793 29.1538,94.2931 29.1523,94.2758 29.1131,94.3302 29.039,94.2607 28.9318,94.1783 28.9363,94.136 28.8902,93.9751 28.8215,93.8966 28.7573,93.7901 28.7369,93.707 28.6644,93.6231 28.6885,93.4486 28.6689,93.3308 28.6062,93.185 28.4944,93.1473 28.366,92.932 28.2489,92.9214 28.2006,92.7907 28.1877,92.6774 28.1507,92.6585 28.0744,92.7318 28.0548,92.7326 27.9861,92.6464 27.9128,92.478 27.8342,92.3194 27.7972,92.2937 27.8705,92.2129 27.8727,91.9236 27.7179,91.8503 27.7625,91.6433 27.761,91.5708 27.8478,91.6259 27.8894,91.4904 27.9677,91.3203 28.0637,91.2491 28.0637,91.1992 27.9882,91.1187 27.9939,91.0208 28.0221,90.9201 28.0488,90.8377 28.0433,90.7799 28.0419,90.6878 28.079,90.5835 28.0231,90.5042 28.0654,90.4846 28.1356,90.5473 28.1575,90.5737 28.2451,90.3479 28.3041,90.2686 28.2791,90.2119 28.36,90.1809 28.3207,90.0593 28.3456,89.9823 28.3154,89.8659 28.3124,89.7655 28.1824,89.5963 28.1636,89.4589 28.0049,89.3893 27.8901,89.3655 27.8676,89.2979 27.8524,89.2254 27.7836,89.2284 27.7345,89.128 27.6152,89.0531 27.608,88.978 27.5313,88.9515 27.4108,89.0043 27.3261,88.9232 27.325,88.8879 27.3403,88.8379 27.3792,88.7828 27.4543,88.7741 27.544,88.8485 27.668,88.8568 27.8153,88.8817 27.8916,88.8364 28.0155,88.7548 28.0805,88.6672 28.0767,88.6332 28.1228,88.5652 28.0903,88.5448 28.0344,88.4093 27.9821,88.251 27.9422,88.135 27.95,88.135 27.8785,87.9843 27.8869,87.8314 27.9514,87.7245 27.8048,87.6135 27.8123,87.5855 27.8531,87.4518 27.8229,87.4246 27.8607,87.3604 27.8282,87.2652 27.8501,87.2267 27.8206,87.1096 27.8478,87.0379 27.9506,86.9336 27.9619,86.8724 28.0231,86.7901 28.0193,86.7486 28.0986,86.5778 28.1135,86.5355 28.051,86.5144 27.9573,86.4419 27.906,86.2908 27.9777,86.2266 27.9815,86.1904 28.1707,86.0831 28.0903,86.0808 28.0155,86.1246 27.9271,86.065 27.8999,85.9471 27.9422,85.9773 27.9898,85.901 28.0533,85.8973 28.1107,85.8164 28.2028,85.7507 28.2361,85.7122 28.3856,85.5913 28.3078,85.4365 28.3343,85.3768 28.2776,85.2552 28.2935,85.2038 28.3403,85.1192 28.329,85.1087 28.3479,85.1004 28.4589,85.1479 28.4876,85.1978 28.6274,85.1147 28.687,85.0581 28.6825,84.9818 28.5911,84.8579 28.5715,84.6962 28.6364,84.6252 28.7369,84.4923 28.7354,84.4371 28.7694,84.4092 28.8509,84.2256 28.8932,84.2491 29.0368,84.1894 29.0473,84.2 29.1251,84.1214 29.2739,83.9628 29.3306,83.814 29.3027,83.8019 29.2551,83.7127 29.2445,83.6334 29.1584,83.5179 29.2181,83.4166 29.357,83.4136 29.422,83.2814 29.499,83.261 29.5776,83.15 29.6244,83.0699 29.6093,83.0088 29.6743,82.9566 29.6622,82.9143 29.7075,82.8275 29.6902,82.7515 29.7628,82.7021 29.8397,82.6401 29.8337,82.5623 29.9553,82.4974 29.9477,82.3969 30.0233,82.3637 30.0097,82.2466 30.0746,82.1665 30.0761,82.2058 30.1539,82.0993 30.2401,82.1061 30.3488,81.9951 30.3209,81.6181 30.444,81.5645 30.4297,81.5517 30.3722,81.4081 30.4206,81.4225 30.3043,81.3953 30.2068,81.2629 30.1418,81.2519 30.0539,81.245 30.0112,81.1332 30.0157,81.0916 30.0535,81.0833 30.1494,81.035 30.1978,81.0312 30.2476,80.927 30.2673,80.9073 30.3035,80.8016 30.3232,80.7343 30.401,80.6067 30.4712,80.5485 30.4485,80.4103 30.5248,80.2086 30.5883,80.1928 30.6661,80.2486 30.7197,80.1792 30.8058,80.1082 30.7817,80.0538 30.8391,79.9337 30.8791,79.8763 30.966,79.8559 30.9758,79.7524 31.006,79.6005 30.9388,79.5069 31.0324,79.4208 31.0559,79.4125 31.0725,79.4132 31.1072,79.3112 31.1495,79.3007 31.219,79.2266 31.2606,79.2501 31.2938,79.142 31.432,79.0748 31.4592,79.0106 31.3829,78.9449 31.3663,78.8837 31.2862,78.7689 31.3255,78.753 31.3852,78.7968 31.4441,78.7251 31.4849,78.7311 31.5325,78.8467 31.608,78.7598 31.6753,78.7024 31.8067,78.7681 31.9457,78.6835 32.1126,78.5967 32.1579,78.4886 32.2758,78.472 32.4412,78.4124 32.5175,78.4161 32.5673,78.5166 32.6142,78.611 32.5998,78.7228 32.6746,78.7817 32.6164,78.7576 32.5673,78.8135 32.4336,78.9683 32.3354,78.991 32.3717,79.1043 32.374,79.1315 32.4812,79.2485 32.5167,79.2757 32.5568,79.4049 32.5198,79.4525 32.6036,79.5386 32.6716,79.5575 32.7592,79.4804 32.8007,79.4714 32.8785,79.3656 32.9382,79.3286 33.0342,79.3649 33.0931,79.3747 33.1195,79.4102 33.1701,79.2168 33.2381,79.1519 33.1822,79.1451 33.186,79.0718 33.2245,79.0204 33.325,78.9351 33.3869,78.8361 33.4269,78.7326 33.569,78.7175 33.6233,78.7764 33.745,78.7425 34.0003,78.6563 34.032,78.6571 34.0743,78.7425 34.0924,78.8618 34.1657,78.926 34.1544,78.9849 34.3001,79.0574 34.2994,79.0068 34.4067,78.932 34.3802,78.7387 34.4595,78.71 34.526,78.6375 34.5434,78.5634 34.5094,78.5521 34.5713,78.4592 34.5691,78.29 34.6151,78.2711 34.7012,78.2084 34.7209,78.1857 34.7942,78.2371 34.8697,78.1774 34.9301,78.1465 35.0706,78.003 35.2406,78.0226 35.3584,78.0906 35.4226,78.1072 35.4392,78.0762 35.4959,78.0264 35.4694,77.9244 35.4974,77.9108 35.4619,77.8126 35.5223,77.6872 35.4536,77.5037 35.4891,77.4425 35.4619,77.3397 35.5178,77.3027 35.5457,77.194 35.5216,77.0618 35.6001,76.9182 35.6115,76.8533 35.6689,76.777 35.6583,76.6788 35.755,76.6153 35.7618,76.561 35.8222,76.5987 35.9,76.2988 35.8426,76.2732 35.8418,76.1651 35.823,76.1448 35.8373,76.1591 35.9174,76.1009 36.0163,76.0035 36.0171,75.9423 36.0707,75.9325 36.1357,76.0126 36.1727,75.9846 36.3502,76.0352 36.4091,75.9257 36.573,75.9423 36.5957,75.8041 36.7105,75.6893 36.7581,75.6485 36.7672,75.6213 36.7687,75.5699 36.7672,75.4687 36.7166,75.4211 36.7732,75.4204 36.8895,75.375 36.9469,75.2338 36.959,75.0291 37.0164,74.9173 36.9787,74.9135 36.9333,74.8984 36.9349,74.841 37.0429,74.8214 37.0542,74.739 37.0217,74.6975 37.0837,74.5804 37.0308,74.4958 37.0648,74.4558 37.1426,74.4951 37.1733,74.5011 37.2393,74.6582 37.2347,74.7496 37.2846,74.8093 37.2151,74.8932 37.2325,74.915 37.237,74.9105 37.2748,75.128 37.3246,75.094 37.3715,75.1537 37.4092,75.1323 37.4369,75.0554 37.5248,75.0313 37.5006,74.9324 37.5679,74.8969 37.6615,75.011 37.7763,74.9128 37.8564,74.9165 38.0248,74.8206 38.0853,74.804 38.1986,74.6982 38.228,74.7058 38.2824,74.6658 38.3806,74.6952 38.4252,74.5064 38.4713,74.2843 38.5982,74.1211 38.642,74.0721 38.5301,73.9238 38.5356,73.8039 38.6118,73.8054 38.6639,73.7442 38.7319,73.7669 38.7787,73.6981 38.852,73.757 38.9426,73.8341 38.9207,73.8537 38.9524,73.8129 39.0423,73.751 39.0257,73.6143 39.247,73.5614 39.25,73.5259 39.3913,73.5924 39.4117,73.5984 39.4578,73.6601 39.464,73.8213 39.4593,73.8636 39.4789,73.9414 39.6028,73.9149 39.7146,73.8304 39.7716,73.9127 39.8634,73.9104 39.9095,73.9814 40.0001,73.9504 40.0273,74.0282 40.084,74.0758 40.0742,74.2631 40.1248,74.3402 40.084,74.5237 40.2041,74.5857 40.2743,74.6801 40.2645,74.6945 40.3423,74.8017 40.3506,74.8629 40.3174,74.9082 40.3461,74.7896 40.4465,74.8251 40.5227,74.8347 40.5239,74.9877 40.4507,75.2202 40.4418,75.4022 40.5546,75.4604 40.6089,75.5933 40.6588,75.6409 40.507,75.7201 40.4857,75.715 40.4375,75.6432 40.3831,75.6998 40.2773,75.8245 40.3374,75.8959 40.3045,75.9673 40.3759,76.0881 40.3812,76.187 40.3814,76.2781 40.4331,76.3351 40.3382,76.4454 40.3929,76.5375 40.4647,76.5338 40.5123,76.6485 40.6286,76.6728 40.6943,76.641 40.7623,76.7022 40.7887,76.7299 40.875,76.7551 40.9534,76.8533 40.9768,76.8797 41.0274,76.9968 41.072,77.0844 41.0629,77.1849 41.0108,77.2755 41.0017,77.3548 41.041,77.478 40.9957,77.6872 41.0032,77.8776 41.0735,77.9833 41.078,78.0596 41.0327,78.1903 41.0788,78.2195 41.1449,78.2745 41.2109,78.3843 41.2713,78.3897 41.4081,78.5279 41.4398,78.5551 41.4746,78.645 41.4686,78.713 41.5532,78.815 41.5584,78.9366 41.64,79.1254 41.7231,79.2176 41.7269,79.3226 41.8107,79.4102 41.8409,79.6043 41.8561,79.6398 41.8938,79.7735 41.8938,79.88 42.0336,80.0251 42.0487,80.1391 42.0305,80.2262 42.0626,80.1481 42.1176,80.1316 42.168,80.1736 42.2129,80.1784 42.2209,80.2713 42.2262,80.2842 42.3191,80.2267 42.3591,80.2048 42.4279,80.2191 42.4853,80.2576 42.5018,80.1618 42.6318,80.223 42.7126,80.2622 42.8297,80.3272 42.8237,80.4004 42.8259,80.5886 42.8901,80.3808 43.0223,80.4114 43.0566,80.5927 43.1335,80.7245 43.1335,80.8014 43.1775,80.7789 43.3116,80.6837 43.3283,80.7532 43.4657,80.5228 43.823,80.5092 43.9069,80.4526 43.9847,80.445 44.0746,80.3944 44.1116,80.4058 44.2914,80.3491 44.4787,80.4111 44.6094,80.337 44.6894,80.2381 44.7212,80.1467 44.8277,79.9933 44.7952,79.914 44.9009,80.0923 45.0482,80.2411 45.0278,80.3189 45.0709,80.402 45.049,80.4934 45.1215,80.6059 45.1102,80.73 45.1716,80.8545 45.1283,80.9519 45.1668,81.075 45.1744,81.1128 45.2197,81.4527 45.2688,81.6264 45.3541,81.7692 45.3768,81.9225 45.2295,82.0457 45.2537,82.0993 45.2046,82.2405 45.2356,82.3066 45.2265,82.4717 45.1766,82.582 45.2182,82.5865 45.3428,82.5412 45.4214,82.4165 45.4737,82.27 45.5505,82.2572 45.6185,82.3471 45.8028,82.3335 45.9388,82.4543 45.9766,82.5125 46.1563,82.6582 46.3911,82.7627 46.5791,82.7784 46.6851,82.8902 46.8762,82.9309 47.0114,82.98 47.0311,82.9933 47.0558,83.0307 47.2123,83.1749 47.2237,83.2444 47.1784,83.3434 47.1761,83.5556 47.0681,84.0383 46.9653,84.2151 46.9993,84.4205 47.0107,84.5074 46.9782,84.7045 46.9963,84.7841 46.9074,84.806 46.825,84.9599 46.869,84.9825 46.9193,85.0701 46.9329,85.2197 47.0515,85.5294 47.0598,85.5762 47.1904,85.6903 47.2184,85.7069 47.3755,85.6034 47.5198,85.6216 47.6074,85.5415 47.9398,85.5808 48.1392,85.7356 48.3711,85.8406 48.4255,86.0498 48.4474,86.2145 48.4353,86.318 48.501,86.4479 48.4987,86.5884 48.5433,86.6337 48.6249,86.7629 48.7148,86.7516 48.7941,86.8105 48.85,86.7387 48.9059,86.7229 48.9905,86.8294 49.0501,86.8551 49.1076,86.9857 49.103,87.1346 49.1506,87.2214 49.1144,87.3126 49.0997,87.4382 49.0847,87.701 49.1707,87.8329 49.1762,87.8548 49.0444,87.9153 48.9949,87.767 48.9345,87.7505 48.885,87.9247 48.7624,88.0002 48.7624,88.0735 48.6913,88.0145 48.6551,88.004 48.566,88.3499 48.4708,88.4172 48.3907,88.4935 48.4156,88.6015 48.3439,88.5841 48.2344,88.7941 48.2162,88.9452 48.0878,89.023 48.0946,89.0705 48.047,89.0713 47.9466,89.1929 47.9503,89.3183 48.0281,89.5661 48.0485,89.6174 47.9458,89.7255 47.8922,89.7965 47.8181,89.9302 47.8166,89.9641 47.8846,90.0752 47.8529,90.0797 47.766,90.1432 47.723,90.3237 47.6671,90.3267 47.6225,90.4566 47.4873,90.4914 47.38,90.4755 47.3241,90.5178 47.2441,90.7346 47.0016,90.8812 46.9767,90.9146 46.9514,90.9658 46.8619,90.9537 46.8271,91.063 46.7097,91.03 46.6053,91.0794 46.5614,90.9733 46.361,90.8962 46.3053,91.0118 46.1239,91.0217 46.0226,90.8479 45.8874,90.7127 45.725,90.6689 45.4863,90.7671 45.432,90.8328 45.299,90.8963 45.2476,90.8645 45.2038,90.931 45.1925,91.1221 45.2144,91.2415 45.1321,91.3857 45.1117,91.4371 45.1547,91.5587 45.0686,91.6909 45.0618,91.8004 45.0815,92.0996 45.0754,92.2348 45.0135,92.3065 45.0256,92.4803 45.0006,92.7756 45.0497,92.9297 45.0157,93.1737 45.0127,93.5083 44.9651,93.6481 44.9206,93.8157 44.8224,94.1972 44.6622,94.306 44.5897,94.3339 44.5232,94.4465 44.5029,94.5756 44.4485,94.6957 44.348,94.9307 44.2891,94.9903 44.2543,95.1898 44.2649,95.4081 44.2944,95.415 44.2505,95.3721 44.2256,95.3227 44.027,95.5236 44.0005,95.6218 43.8517,95.7336 43.5972,95.8569 43.4113,95.8779 43.2761,95.9089 43.2354,96.3591 42.8992,96.3855 42.724,96.6936 42.7325,96.9353 42.7105,97.1496 42.7765,97.3803 42.749,97.7538 42.7105,98.0175 42.6831,98.2482 42.6391,98.5119 42.6336,99.292 42.5842,99.4952 42.5677,99.9951 42.6501,100.2808 42.6281,100.3247 42.6831,100.9125 42.6446,101.8189 42.4743,102.0606 42.2161,102.4122 42.1392,102.7418 42.1337,102.978 42.0239,103.3241 41.9085,103.8624 41.8096,104.0272 41.8096,104.5436 41.8865,104.5326 41.6613,104.9446 41.6448,105.0325 41.5679,105.2742 41.7437,105.3072 41.7327,105.8016 41.958,106.0103 42.0184,106.686 42.2601,107.2683 42.359,107.2957 42.4084,107.4551 42.4633,107.5539 42.4249,107.911 42.4139,108.0319 42.4414,108.2571 42.4524,108.5263 42.4579,108.7844 42.4084,108.8119 42.3864,108.9657 42.4579,109.2898 42.4304,109.548 42.4743,109.8337 42.6227,110.1523 42.6391,110.416 42.771,110.4544 42.8589,110.6192 42.9303,110.7016 43.0566,110.817 43.128,111.0477 43.3423,111.3718 43.4412,111.4377 43.4961,111.5696 43.5071,111.7124 43.6169,111.7618 43.6939,111.9706 43.7378,112.009 43.8037,111.8497 43.996,111.6684 44.0344,111.5091 44.1883,111.3938 44.3201,111.3883 44.3915,111.5146 44.5893,111.5641 44.7376,111.7399 44.9628,111.8662 45.0672,112.0859 45.0782,112.4155 45.0617,112.5968 44.9408,112.8275 44.8584,112.8989 44.8639,113.1187 44.798,113.4977 44.7925,113.5746 44.7541,114.0471 44.9518,114.3767 45.1661,114.4865 45.2869,114.5469 45.3968,114.7502 45.4517,115.0633 45.3693,115.338 45.3858,115.5797 45.4297,115.7225 45.4407,115.7665 45.5012,115.9368 45.611,116.0906 45.6824,116.1675 45.6769,116.2719 45.7593,116.2609 45.9516,116.3652 46.067,116.6069 46.2977,116.6893 46.3087,116.7663 46.3142,116.8596 46.3801,116.9365 46.3526,117.365 46.3471,117.4364 46.5778,117.6012 46.5833,117.7001 46.5064,117.8539 46.5339,117.8814 46.5778,118.0407 46.6328,118.2714 46.7866,118.5626 46.7701,118.6724 46.8031,118.7988 46.7811,118.9361 46.8196,119.0954 46.7811,119.1284 46.7207,119.2163 46.6822,119.3261 46.6932,119.436 46.6493,119.4525 46.5504,119.4031 46.457,119.5129 46.4185,119.5953 46.5504,119.7766 46.6218,119.837 46.7042,119.9194 46.7426,119.8041 46.9239,119.87 47.1601,119.8151 47.27,119.7546 47.314,119.5569 47.3469,119.48 47.3304,119.3207 47.4348,119.3371 47.5337,119.1888 47.5172,119.1229 47.704,118.7768 47.8084,118.4802 48.0006,118.0737 48.0391,117.8375 48.0226,117.7605 47.9896,117.5573 47.7864,117.4694 47.7479,117.376 47.6381,117.1068 47.8084,116.8816 47.9017,116.6619 47.8633,116.6124 47.8358,116.4476 47.8413,116.2554 47.8743,116.14 47.8358,115.9368 47.6765,115.5522 47.9457,115.5742 48.0665,115.5193 48.1819,115.8104 48.2588,115.8324 48.3357,115.8214 48.5335,116.1125 48.7917,116.0576 48.885,116.4202 49.4344,116.6839 49.8189,116.7663 49.8244,117.0135 49.6926,117.2881 49.6321,117.5738 49.6376,117.8759 49.5388,118.1616 49.6596,118.2385 49.731,118.3813 49.775,118.3868 49.8244,118.4857 49.8354,118.5626 49.9233,118.9306 49.9837,119.0844 49.9837,119.2657 50.0771,119.3097 50.154,119.3426 50.3463,119.1559 50.3573,119.2547 50.4836,119.2767 50.6045,119.4305 50.6924,119.5074 50.7912,119.4909 50.8407,119.6173 51.0055,119.6887 51.0165,119.7491 51.0989,119.7766 51.2252,119.87 51.2966,119.9029 51.39,119.9853 51.4504,120.0897 51.6757,120.1721 51.6812,120.4742 51.8844,120.6445 51.9284,120.683 52.0327,120.7764 52.1591,120.7544 52.2525,120.6226 52.3129,120.6775 52.4282,120.683 52.5106,120.4523 52.6425,120.26 52.615,120.1886 52.5766,120.0623 52.5821,120.0238 52.6315,120.0238 52.7578,120.282 52.8622,120.5292 53.071,120.6281 53.1039,120.683 53.1753,120.8753 53.2852,121.1225 53.2742,121.4081 53.3237,121.8146 53.417,122.0234 53.4225,122.1387 53.4665,122.3145 53.4994,122.4409 53.4445,122.6441 53.461,122.8309 53.4555,123.0396 53.5104,123.111 53.4994,123.2758 53.5599,123.4406 53.5324,123.5835 53.5489,123.6769 53.4885,123.8581 53.483,124.1163 53.3456,124.2482 53.3676,124.3745 53.2468,124.5283 53.1973,124.7041 53.1863,124.8305 53.1314,124.9843 53.1918,125.1985 53.1918,125.4842 53.0929,125.5776 53.082,125.7369 52.9776,125.6545 52.9062,125.6709 52.8567,125.7753 52.8952,125.9676 52.7633,126.05 52.7963,126.05 52.67,125.9731 52.659,126.006 52.5821,126.072 52.5985,126.1928 52.5326,126.3411 52.3953,126.3411 52.2525,126.2972 52.2085,126.4675 52.1701,126.5554 52.1096,126.5059 52.0272,126.4455 52.0217,126.462 51.9448,126.6707 51.7251,126.7366 51.6317,126.6927 51.5768,126.83 51.5273,126.7861 51.4504,126.885 51.401,126.9784 51.3076,126.896 51.1868,126.9234 51.0604,127.1102 50.9341,127.3574 50.5825,127.286 50.4781,127.3574 50.4232,127.3299 50.3573,127.3958 50.2804,127.5716 50.2419,127.5881 50.1595,127.5002 50.0606,127.4947 49.9782,127.5387 49.9233,127.5167 49.8354,127.665 49.764,127.698 49.6651,127.8024 49.5937,127.9452 49.6157,128.066 49.5442,128.2583 49.5003,128.3846 49.5882,128.533 49.5992,128.7088 49.5662,128.7747 49.4728,128.879 49.4783,128.9944 49.4509,129.0493 49.374,129.1317 49.352,129.2032 49.4014,129.3405 49.352,129.3844 49.4289,129.5218 49.4124,129.5492 49.2916,129.6701 49.2916,129.736 49.2092,129.8459 49.1652,129.9063 49.0553,130.2579 48.8631,130.4446 48.9015,130.5161 48.8521,130.6259 48.8796,130.6369 48.8136,130.527 48.6378,130.5875 48.5939,130.6204 48.484,130.7578 48.495,130.7303 48.4401,130.8237 48.3028,130.7523 48.1874,130.6534 48.0995,130.6809 48.0446,130.8621 47.9347,130.95 47.8193,130.9555 47.7205,131.0324 47.6875,131.1588 47.693,131.2522 47.7314,131.4994 47.726,131.5818 47.66,131.6971 47.7095,131.8015 47.671,131.9663 47.6655,131.9993 47.704,132.2465 47.704,132.3179 47.7534,132.5046 47.7095,132.598 47.7424,132.5925 47.7919,132.6914 47.9512,132.7848 47.9292,132.8782 48.0006,133.01 48.0171,133.1584 48.105,133.3451 48.105,133.466 48.0665,133.5539 48.116,133.8011 48.1984,133.8725 48.1874,133.8945 48.2588,134.0098 48.2808,134.0483 48.3357,134.3889 48.3852,134.5756 48.3632,134.713 48.2753,134.669 48.1654,134.5482 48.0226,134.5866 47.9072,134.658 47.8908,134.6745 47.8248,134.7734 47.7534,134.7514 47.6765,134.669 47.5831,134.4932 47.4458,134.3339 47.4348,134.1856 47.3304,134.1472 47.248,134.2241 47.1821,134.2131 47.1052,134.1362 47.0887,134.0648 46.9734,134.0208 46.8196,134.0483 46.7756,133.9988 46.6383,133.9109 46.5833,133.8505 46.4625,133.9439 46.3911,133.878 46.3581,133.9109 46.2647,133.7022 46.1604,133.7352 46.045,133.6637 45.9406,133.466 45.8308,133.477 45.655,133.3177 45.4957,133.2133 45.5121,133.1364 45.4188,133.0869 45.2814,133.1309 45.1331,132.9496 45.0177,132.8617 45.0562,132.8374 45.0616,132.8039 45.1764,132.7312 45.2439,132.57 45.3063,132.331 45.3427,132.1023 45.3063,132.0063 45.2469,131.9993 45.2485,131.9114 45.3309,131.829 45.3089,131.763 45.21,131.6806 45.2155,131.6861 45.1166,131.4719 44.9573,131.3456 44.9793,131.2906 44.9298,131.1478 44.9353,130.9555 44.8529,131.1038 44.6936,131.2906 44.0784,131.2027 43.7817,131.2302 43.6334,131.1972 43.5236,131.2851 43.4741,131.3071 43.3972,131.1917 43.2104,131.2027 43.1335,131.0984 43.0182,131.1368 42.9577,131.0214 42.9193,131.016 42.8534,130.8237 42.8699,130.7688 42.8314,130.6864 42.8424,130.5435 42.8094,130.4062 42.7215,130.5325 42.6996,130.6204 42.6227,130.56 42.5348,130.6149 42.4304,130.56 42.4524,130.4996 42.6172,130.3787 42.6007,130.2524 42.7051,130.2249 42.7875,130.2579 42.9028,130.1425 42.8973,130.1096 42.9468,129.9502 42.9797,129.8514 42.9632,129.7635 42.7105,129.7415 42.4633,129.6261 42.4633,129.5492 42.359,129.4449 42.4414,129.313 42.4249,129.2361 42.3755,129.2526 42.3205,129.1812 42.2326,129.2141 42.2107,129.0109 42.0953,128.9175 42.0129,128.7417 42.0404,128.5714 41.9964,128.4396 42.0294,128.2363 42.0294,128.066 41.9635,128.1045 41.7987,128.1539 41.7272,128.2748 41.6503,128.3132 41.5844,128.2034 41.4086,128.11 41.3647,127.9287 41.4526,127.8628 41.4031,127.5552 41.4306,127.5442 41.4745,127.3519 41.4636,127.264 41.513,127.1157 41.546,127.1212 41.6229,127.0553 41.6613,127.0443 41.7437,126.9289 41.8096,126.7971 41.6943,126.6213 41.6723,126.5609 41.6119,126.5883 41.5624,126.5004 41.4306,126.5279 41.3647,126.407 41.3207,126.2862 41.1614,126.1598 41.0845,126.0335 40.9252,125.9346 40.8758,125.8687 40.9032,125.7039 40.8648,125.4128 40.656,125.3249 40.6396,125.182 40.6011,125.0117 40.5297,125.0227 40.4583,124.8964 40.4803,124.7371 40.3649,124.7206 40.3209,124.5228 40.2276,124.3361 40.0628,124.3525 39.9913,124.2262 39.9199,124.2042 39.8595,123.9955 39.8156,123.8581 39.854,123.7867 39.8265,123.6109 39.843,123.4352 39.7332,123.4022 39.7826,123.3033 39.7771,123.2758 39.6947,123.133 39.6617,122.9902 39.6672,122.9353 39.6178,122.7924 39.5848,122.4848 39.4145,122.3914 39.42,122.298 39.3706,122.2376 39.2772,122.1113 39.2058,122.0948 39.1234,121.9629 39.03,121.897 39.074,121.7926 39.019,121.7212 39.0355,121.5839 38.8817,121.496 38.8213,121.3367 38.8213,121.2049 38.7224,121.1389 38.7224,121.095 38.9256,121.2268 38.9311,121.3422 38.9751,121.3752 39.0575,121.4576 39.0135,121.6608 39.0795,121.6278 39.2772,121.7542 39.3212,121.7542 39.3761,121.5235 39.3596,121.4466 39.4805,121.5509 39.5903,121.5509 39.6727,121.4576 39.7387,121.54 39.8595,121.6114 39.8595,121.6993 39.9254,121.7762 39.9144,122.0344 40.1891,122.1058 40.2331,122.287 40.4857,122.1442 40.6011,122.1168 40.678,122.0344 40.7384,121.8586 40.8153,121.8036 40.9142,121.7652 40.8483,121.5564 40.8428,121.4905 40.9032,121.1774 40.9252,121.062 40.8208,120.9741 40.8318,120.9192 40.7659,120.9357 40.689,120.8368 40.678,120.7929 40.5956,120.6226 40.4803,120.5566 40.3539,120.4962 40.3209,120.4468 40.1946,119.9414 40.0518,119.848 39.9859,119.5239 39.8815,119.5294 39.8101,119.4635 39.8101,119.3591 39.7441,119.2437 39.475,119.2987 39.4365,119.0844 39.2497,119.0075 39.2003,118.7933 39.1289,118.5681 39.1564,118.3319 39.0025,118.1835 39.0849,118.0847 39.2003,118.0077 39.2058,117.9144 39.1948,117.7496 39.0849,117.7825 38.9861,117.7166 38.9696,117.5738 38.7718,117.5573 38.618,117.7001 38.3763,117.8155 38.2609,117.8649 38.2719,118.0901 38.1401,118.3868 38.1456,118.5681 38.1071,118.5736 38.1401,118.8372 38.2115,118.8482 38.0961,118.9251 38.0687,119.002 37.9588,119.0295 37.8599,119.002 37.805,119.0789 37.7006,118.9746 37.6072,118.9526 37.5029,118.9965 37.2941,119.1229 37.2117,119.2822 37.1568,119.7381 37.1403,119.881 37.2337,119.9414 37.4095,120.1447 37.4754,120.2985 37.5908,120.2875 37.6787,120.4468 37.7501,120.5731 37.7556,120.7434 37.8325,120.9357 37.8215,120.9357 37.7775,121.0456 37.7061,121.1389 37.7116,121.1444 37.6017,121.2433 37.5743,121.3642 37.5853,121.4685 37.4699,121.5729 37.426,121.6663 37.4589,121.941 37.4699,122.1168 37.5523,122.1717 37.4315,122.2431 37.4644,122.3255 37.4095,122.5672 37.3985,122.6057 37.3765,122.5507 37.2776,122.6002 37.2117,122.4903 37.1568,122.4573 37.0744,122.5452 36.9755,122.342 36.8327,122.1827 36.8766,122.1662 36.9535,122.0453 36.9371,122.0014 36.9975,121.919 36.9316,121.6663 36.8217,121.5894 36.8547,121.3587 36.7173,121.1444 36.6844,121.0181 36.58,120.9192 36.569,120.9632 36.4756,120.8808 36.3767,120.8368 36.4646,120.7105 36.4427,120.6775 36.2504,120.6885 36.1295,120.5457 36.1131,120.4248 36.0581,120.304 36.0856,120.3699 36.2119,120.293 36.2614,120.2655 36.179,120.2216 36.2284,120.1117 36.19,120.0952 36.1076,120.1886 36.0581,120.1886 35.9043,120.0677 35.8823,120.0128 35.723,119.9524 35.767,119.9194 35.6516,119.8645 35.6077,119.7436 35.6296,119.6448 35.5582,119.5624 35.3769,119.4085 35.2671,119.3701 35.1078,119.2822 35.0858,119.2218 35.0583,119.1778 34.8551,119.2273 34.7782,119.4525 34.7397,119.4745 34.6628,119.5569 34.6024,119.7931 34.498,119.7931 34.4705,119.9469 34.4541,120.271 34.3112,120.3314 34.1135,120.3918 33.9981,120.4083 33.8333,120.5182 33.7344,120.5292 33.6081,120.6116 33.4817,120.5951 33.3664,120.7654 33.1357,120.7929 33.0423,120.8862 33.0203,120.9082 32.883,120.8808 32.7896,120.9302 32.6962,120.9027 32.6138,120.9961 32.5424,121.0785 32.5259,121.3642 32.3941,121.4026 32.2567,121.3642 32.2403,121.4246 32.1139,121.529 32.1084,121.7267 32.0315,121.8311 31.9107,121.9025 31.7678,121.8696 31.6854,121.6333 31.7349,121.474 31.8283,121.3037 31.8832,121.084 31.7953,120.9357 31.8228,120.9082 31.9161,120.8093 32.015,120.5347 32.0919,120.4358 32.059,120.4523 32.0205,120.6116 31.9876,120.7214 31.9931,120.8148 31.8667,120.8038 31.7898,121.0016 31.7568,121.2213 31.6305,121.3312 31.4987,121.7048 31.2954,121.8146 31.1361,121.9135 30.9383,121.8531 30.8614,121.518 30.8285,121.3312 30.7021,121.2708 30.7021,121.1389 30.6032,121.0291 30.5813,120.9357 30.4824,120.9137 30.3725,120.7599 30.3505,120.6555 30.4055,120.6116 30.3615,120.6665 30.2132,120.6665 30.1308,120.8478 30.1308,121.084 30.2791,121.1994 30.3231,121.3477 30.3066,121.5015 30.1857,121.6278 30.0155,121.7926 29.9715,121.941 29.8891,121.9904 29.8177,121.8696 29.7573,121.8586 29.6968,121.7102 29.5705,121.5235 29.5101,121.518 29.4606,121.7212 29.543,121.7707 29.4716,121.8421 29.5375,121.7926 29.6089,121.9245 29.6474,121.9959 29.587,121.919 29.5265,121.9794 29.4387,121.919 29.4222,121.908 29.3013,121.9629 29.2629,121.9355 29.1969,121.8421 29.164,121.6224 29.1969,121.5949 29.2739,121.4521 29.1585,121.4576 29.1091,121.5784 29.12,121.6333 29.0926,121.6773 28.8564,121.6333 28.7245,121.507 28.6586,121.5894 28.4773,121.5949 28.3675,121.6553 28.3235,121.6169 28.2576,121.5784 28.307,121.463 28.3345,121.3806 28.2356,121.3587 28.1422,121.2708 28.1972,121.2213 28.3565,121.1334 28.34,121.1005 28.1862,121.0181 28.1477,120.9577 27.9774,120.8643 27.9335,120.8478 27.8676,120.6775 27.7028,120.6116 27.5984,120.6281 27.494,120.672 27.4775,120.65 27.3677,120.5292 27.3457,120.5621 27.2963,120.4797 27.1644,120.4248 27.1974,120.3699 27.0985,120.282 27.104,120.2271 26.9172,120.1227 26.9337,120.0348 26.8238,120.1172 26.7964,120.0952 26.6151,119.9524 26.6096,119.8865 26.5162,119.8425 26.5876,119.9414 26.6096,120.0348 26.714,120.0458 26.7909,119.9359 26.7964,119.87 26.6755,119.7766 26.8128,119.6777 26.7634,119.5788 26.7909,119.6008 26.5876,119.6667 26.6206,119.7876 26.5766,119.8315 26.4503,119.6173 26.4668,119.6557 26.3624,119.7162 26.3129,119.6448 26.269,119.6503 26.2031,119.5129 26.0767,119.7217 26.0053,119.6887 25.9174,119.5843 25.835,119.6338 25.7636,119.5843 25.6922,119.469 25.6757,119.5184 25.5549,119.6393 25.467,119.6557 25.3571,119.6063 25.3461,119.5733 25.456,119.5184 25.423,119.4525 25.5109,119.3646 25.5274,119.3371 25.5878,119.1339 25.412,119.2108 25.2692,119.2877 25.3296,119.3481 25.2747,119.2822 25.1703,119.1778 25.1813,118.9965 25.2967,118.9032 25.2637,118.9801 25.1978,118.9306 25.1154,118.8537 25.0879,118.9032 25.0275,118.9087 24.9176,118.7823 24.8572,118.623 24.8352,118.6505 24.7913,118.7713 24.7693,118.7329 24.6979,118.6395 24.6485,118.6505 24.5551,118.4967 24.6265,118.2989 24.5935,118.1616 24.6814,118.1011 24.5551,118.189 24.5276,118.1286 24.4232,118.0572 24.4947,117.9803 24.4562,117.8869 24.4892,117.9034 24.3958,118.0627 24.4068,118.0517 24.3573,118.1286 24.3079,118.0352 24.2145,117.9363 24.22,117.9528 24.1651,117.9034 24.0332,117.799 24.0058,117.7111 24.0332,117.7001 23.9508,117.6012 23.8629,117.5024 23.9179,117.4364 23.7531,117.387 23.786,117.2716 23.7366,117.2167 23.6212,117.1783 23.6157,117.0849 23.5718,117.0574 23.6487,116.9091 23.6377,116.8706 23.4509,116.7553 23.3411,116.7333 23.2477,116.6454 23.1653,116.6015 23.1982,116.5355 23.1158,116.5575 23.0224,116.4971 22.94,116.2664 22.951,116.0961 22.8247,116.0686 22.8522,115.9038 22.7917,115.6456 22.8796,115.5687 22.8302,115.4698 22.7038,115.3819 22.6928,115.3105 22.7917,115.2171 22.8357,115.0468 22.7917,115.0249 22.7038,114.8875 22.594,114.7502 22.594,114.7557 22.7588,114.8216 22.7917,114.7777 22.8357,114.5195 22.7093,114.5909 22.6544,114.5469 22.572,114.6239 22.5116,114.514 22.4511,114.3931 22.6159,114.227 22.5477)),((121.3202 31.8502,121.4411 31.7513,121.5839 31.6635,121.875 31.5591,121.8201 31.4602,121.5949 31.5206,121.3806 31.6195,121.1499 31.7843,121.2268 31.8392,121.3202 31.8502)))&quot;</value>
                                <value>35.175300000000007</value>
                                <value>99.387700000000009</value>
                              </tuple>
                            </tuple-reference>
                          </tuple-selection>
                        </selection-collection>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='Age Breakup' captured-sheet='PopulationAge' id='5' />
                  <story-point caption='GDP Growth' captured-sheet='GDPYear' id='6' />
                </story-points>
              </flipboard>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='WorldGDPDashboard'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='12' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
              <zone fixed-size='863' h='100000' id='3' is-fixed='true' type='layout-basic' w='100000' x='0' y='0'>
                <zone h='100000' id='9' name='GDP' w='50000' x='0' y='0' />
                <zone h='100000' id='10' name='GDPPerCapita' w='50000' x='50000' y='0' />
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='63'>
    <window class='worksheet' name='Population'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[excel-direct.42012.950994398147].[none:Country Name:nk]' type='color' />
            <card pane-specification-id='0' param='[excel-direct.42012.950994398147].[sum:Population: Total (count):qk]' type='size' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[excel-direct.42012.950994398147].[none:Country Name:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
    </window>
    <window class='worksheet' name='GDPPerCapita'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[excel-direct.42012.950994398147].[sum:Finance: GDP per capita (current US$):qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <tuple-selection>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[excel-direct.42012.950994398147].[Longitude (generated)]</field>
                  </x-fields>
                  <y-fields>
                    <field>[excel-direct.42012.950994398147].[Latitude (generated)]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[excel-direct.42012.950994398147].[none:Country Name:nk]</field>
                  <field>[excel-direct.42012.950994398147].[sum:Finance: GDP per capita (current US$):qk]</field>
                  <field>[excel-direct.42012.950994398147].[Geometry (generated)]</field>
                  <field>[excel-direct.42012.950994398147].[Latitude (generated)]</field>
                  <field>[excel-direct.42012.950994398147].[Longitude (generated)]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Greenland&quot;</value>
                <value>264396</value>
                <value>&quot;MULTIPOLYGON(((-48.3167 61.1744,-48.4645 61.1661,-48.4803 61.3473,-48.7685 61.4421,-49.0102 61.4459,-49.0102 61.5872,-49.1161 61.669,-49.1607 61.8065,-48.9386 61.9404,-48.815 61.9636,-48.9562 61.9739,-49.2156 61.8372,-49.2193 61.7219,-49.3271 61.6996,-49.5967 61.9925,-49.5902 62.249,-49.8105 62.2444,-49.9128 62.3355,-50.2056 62.4061,-50.3181 62.487,-50.1879 62.6497,-50.2707 62.6859,-50.2725 62.8347,-50.3506 62.8198,-50.4696 62.9648,-50.6211 63.0224,-50.5607 63.2139,-50.7894 63.1907,-50.9018 63.1163,-51.0245 63.1386,-51.1863 63.4696,-51.5098 63.6508,-51.5618 63.7401,-51.4438 63.7837,-51.256 63.7568,-51.2393 63.8154,-51.4466 63.7968,-51.468 63.8525,-51.3434 64.0366,-51.2384 64.0784,-50.8665 64.0942,-50.6945 64.1835,-50.3683 64.1742,-50.4594 64.3238,-50.6044 64.2299,-50.8117 64.1686,-51.4531 64.071,-51.5711 64.0803,-51.5916 64.2151,-51.243 64.1714,-51.058 64.243,-50.9204 64.3852,-50.7085 64.3936,-50.6295 64.612,-50.5495 64.6947,-50.2893 64.6362,-50.2363 64.5181,-49.83 64.3508,-49.8152 64.4094,-50.0494 64.4856,-50.1712 64.6055,-50.1796 64.8137,-50.3088 64.7254,-50.7169 64.7589,-51.0366 64.6036,-51.3239 64.6399,-51.666 64.3629,-51.8017 64.216,-52.0015 64.1881,-52.0508 64.3703,-52.1168 64.3619,-52.1679 64.6836,-52.0034 64.7217,-51.8779 64.8314,-52.0071 64.8741,-52.1326 64.8146,-52.2153 64.8779,-52.1465 64.9903,-52.1921 65.3101,-52.5016 65.18,-52.576 65.3092,-52.4868 65.378,-52.6243 65.4951,-52.801 65.5397,-52.8679 65.6912,-53.2249 65.6671,-53.1933 65.84,-53.2444 65.9208,-53.4247 65.919,-53.4703 66.038,-53.0064 66.1616,-52.7545 66.2536,-52.7024 66.3234,-52.3687 66.433,-52.0871 66.4879,-51.9197 66.6264,-51.9913 66.6506,-52.1484 66.5074,-52.4152 66.4488,-52.7201 66.3419,-52.8038 66.2657,-53.3364 66.0984,-53.553 66.091,-53.6962 66.3345,-53.5948 66.5195,-53.4349 66.565,-53.4665 66.6496,-53.1161 66.7565,-53.0854 66.8439,-52.5844 66.8774,-52.3743 66.8476,-52.3752 66.9108,-52.8038 66.8895,-53.0733 66.9294,-53.6683 66.9201,-53.8216 67.0763,-53.9285 67.0726,-53.8254 67.3608,-53.7259 67.4453,-53.21 67.5643,-52.9925 67.7298,-52.8261 67.7159,-52.5398 67.7716,-51.7282 67.6313,-51.3434 67.6833,-51.0162 67.6006,-50.979 67.7698,-51.1937 67.7484,-51.1789 67.9036,-51.0078 67.8702,-51.0283 67.9594,-51.2179 67.9529,-51.4503 67.8516,-51.4001 67.7465,-51.6102 67.7456,-51.6845 67.6898,-51.995 67.7614,-52.2674 67.7661,-52.3083 67.8562,-52.6067 67.7865,-53.0064 67.7558,-53.2434 67.6164,-53.6627 67.4807,-53.7733 67.5894,-53.58 67.7056,-53.5065 67.8358,-53.3113 67.9073,-53.3113 68.1825,-53.1514 68.202,-52.9599 68.1416,-52.7861 68.2002,-52.5816 68.1927,-52.2088 68.0793,-51.8649 68.0356,-51.1751 68.0589,-51.2681 68.2745,-52.0685 68.2318,-52.4886 68.1686,-52.4728 68.2411,-52.6783 68.2773,-52.8251 68.2197,-52.9488 68.3099,-53.2165 68.3154,-53.3699 68.2755,-53.4201 68.3331,-53.2583 68.3647,-53.1365 68.3154,-52.8103 68.3954,-52.8028 68.4307,-52.4747 68.4688,-52.4022 68.6138,-51.9969 68.638,-51.9346 68.5255,-51.678 68.5125,-51.1352 68.5673,-50.9883 68.731,-50.8024 68.7709,-50.7977 68.836,-51.1631 68.7217,-51.2263 68.8416,-51.1454 68.9271,-51.0794 69.1362,-50.7736 69.1353,-50.7698 69.0721,-50.556 69.0266,-50.6183 69.2125,-51.0264 69.1734,-51.0998 69.2394,-50.8451 69.4635,-50.847 69.7042,-50.6369 69.7832,-50.3869 69.7581,-50.2428 69.9887,-50.2521 70.0519,-50.86 69.997,-51.006 69.9617,-51.0794 70.0733,-51.2755 70.0649,-51.4577 69.9664,-51.5897 70.011,-51.9774 70.0101,-52.404 70.0928,-52.6838 70.2211,-53.0296 70.3196,-53.8625 70.3902,-54.0568 70.4209,-54.1814 70.5102,-54.5105 70.6366,-54.5867 70.7193,-54.2827 70.8048,-54.0252 70.8337,-53.7947 70.79,-53.3355 70.7556,-53.117 70.7788,-52.6597 70.7416,-52.1921 70.6115,-51.8296 70.486,-51.071 70.3642,-50.9762 70.4786,-51.2951 70.5501,-51.2263 70.618,-50.9297 70.5232,-50.8898 70.6859,-51.0673 70.6598,-51.2923 70.7546,-51.2895 70.8104,-51.0617 70.7909,-50.7922 70.711,-50.7708 70.7928,-51.612 70.9322,-51.612 71.0224,-51.7729 71.1293,-52.035 71.0902,-52.0685 71.199,-52.4877 71.1451,-52.5137 71.2148,-52.3064 71.2399,-52.2897 71.3561,-51.9681 71.4286,-51.6074 71.4555,-51.415 71.437,-51.3908 71.4918,-51.5851 71.5141,-51.9774 71.4713,-52.4375 71.3775,-52.9302 71.4063,-52.9571 71.4444,-52.695 71.5243,-52.3678 71.5708,-52.0527 71.5755,-51.7236 71.635,-51.6539 71.7214,-51.7933 71.7391,-51.8714 71.674,-52.1373 71.6191,-52.5844 71.635,-52.6996 71.6814,-53.1923 71.7028,-53.2202 71.8199,-53.3987 71.8543,-53.8207 71.634,-54.0531 71.6851,-54.0503 71.6182,-53.8811 71.5782,-53.9034 71.4462,-54.3403 71.3793,-54.8228 71.3589,-54.9845 71.4388,-55.1621 71.3905,-55.5237 71.4732,-55.7421 71.7549,-55.4159 71.8097,-55.3387 71.8711,-55.0003 71.8924,-54.6332 71.9928,-54.6545 72.0217,-54.9678 71.9324,-55.2504 71.9268,-55.4326 72.0663,-54.9306 72.268,-54.9762 72.4251,-55.2002 72.3554,-55.2987 72.4167,-55.4977 72.3907,-55.4549 72.5273,-54.8144 72.4762,-54.6666 72.9001,-54.8126 73.0182,-55.0152 72.9959,-55.0087 73.0516,-55.6603 73.0544,-55.6399 73.1176,-55.4549 73.1083,-55.3127 73.1966,-55.4744 73.4634,-55.6111 73.5833,-55.7738 73.5954,-55.8676 73.8631,-56.0963 73.971,-56.2776 74.2201,-56.5602 74.155,-56.8725 74.1337,-56.9078 74.1904,-56.6875 74.1969,-56.5118 74.2991,-56.6522 74.4441,-56.2599 74.4795,-56.4551 74.5696,-56.47 74.6496,-56.7275 74.6514,-56.9552 74.7593,-57.0445 74.9201,-57.2983 74.908,-57.6032 75.0112,-57.803 75.0167,-57.9861 75.1274,-57.9462 75.1943,-58.2083 75.2036,-58.3273 75.3793,-58.6396 75.3412,-58.6647 75.3728,-58.2065 75.4378,-58.1247 75.5187,-58.3329 75.5652,-58.5197 75.6991,-58.687 75.7353,-59.0096 75.6991,-59.2718 75.8803,-59.6231 75.8069,-59.6445 75.9538,-59.9438 75.9268,-60.0963 76.0281,-60.4179 76.0607,-60.7154 75.9919,-60.8567 76.1471,-61.3494 76.1778,-61.42 76.1583,-62.0828 76.2168,-62.2166 76.2866,-62.3366 76.2391,-62.5206 76.2615,-62.8023 76.2187,-62.7921 76.2958,-63.3954 76.3804,-63.7309 76.1564,-64.0563 76.1387,-64.1585 76.2094,-64.1957 76.3395,-64.3482 76.3247,-64.4039 76.2326,-64.6642 76.2605,-64.7051 76.1295,-64.8492 76.1824,-65.116 76.1136,-65.3028 76.1731,-65.3177 76.03,-65.6338 76.0263,-65.7518 76.1322,-65.7165 76.2735,-66.0512 76.2559,-66.3328 76.1973,-66.4434 76.0839,-66.8748 76.268,-67.1006 76.2512,-67.0467 76.069,-67.7393 76.0421,-68.5257 76.0904,-68.7321 76.1899,-68.9096 76.1992,-68.9644 76.2652,-69.3093 76.3014,-69.5594 76.3656,-69.5464 76.4399,-69.049 76.479,-68.7162 76.5859,-67.9791 76.5859,-68.0497 76.7104,-68.4969 76.6621,-69.2573 76.677,-69.8838 76.7467,-69.9052 76.9382,-70.2705 76.8118,-70.5903 76.7932,-70.7502 76.8331,-70.8134 76.928,-71.0755 76.9373,-71.3767 77.0023,-71.3618 77.0646,-71.1703 77.1362,-70.924 77.1418,-70.8701 77.2013,-70.1906 77.244,-69.446 77.2282,-68.9933 77.2533,-69.0165 77.2933,-68.3537 77.3742,-67.2735 77.389,-66.7177 77.3584,-66.5633 77.2933,-66.4202 77.442,-66.0391 77.4541,-66.2538 77.6251,-66.5485 77.6558,-66.6238 77.7079,-67.0886 77.666,-67.1843 77.5768,-67.5403 77.5229,-68.337 77.5062,-68.3937 77.5907,-68.6028 77.5052,-69.116 77.4615,-69.8801 77.5471,-69.8801 77.627,-69.4534 77.6921,-69.4776 77.7348,-69.7081 77.7032,-70.3328 77.6688,-70.3151 77.8575,-70.6265 77.786,-71.0597 77.7646,-71.3841 77.7915,-71.5896 77.918,-71.8963 77.8956,-72.3481 78.0072,-72.3128 78.0685,-72.5926 78.0732,-72.7701 78.2126,-72.7962 78.3344,-72.5294 78.4041,-72.3825 78.5305,-71.7058 78.5547,-71.4009 78.6309,-71.0439 78.6291,-70.9956 78.6988,-70.3133 78.7769,-70.1906 78.8196,-69.5129 78.8382,-69.4004 78.974,-68.7664 79.0753,-68.2068 79.0967,-67.9401 79.0716,-67.6398 79.1524,-67.3126 79.1645,-67.0309 79.118,-66.9036 79.1496,-66.3077 79.119,-66.1776 79.1329,-65.6319 79.303,-65.274 79.3625,-65.0732 79.462,-64.8529 79.4973,-64.7423 79.6544,-65.0835 79.7316,-64.9998 79.8626,-64.7572 79.8282,-64.0972 79.8822,-64.0925 79.9258,-64.6001 79.9965,-65.0584 79.9918,-65.0723 80.0169,-64.3119 80.0829,-64.1818 80.1694,-64.2366 80.227,-64.4318 80.1062,-64.9199 80.069,-65.275 80.1173,-65.5194 80.0439,-66.0307 80.0114,-66.1683 80.0653,-66.4332 80.0857,-67.0105 80.0541,-67.1276 80.1471,-67.4176 80.2075,-67.4511 80.3534,-67.3247 80.3609,-66.7074 80.5003,-66.7074 80.5598,-66.1971 80.6016,-66.1878 80.6481,-65.8355 80.676,-65.7053 80.7309,-65.1681 80.8034,-65.208 80.8777,-64.9524 80.9056,-64.8808 80.9911,-64.3063 81.0348,-64.0804 81.1176,-63.8824 81.1008,-63.6231 80.9242,-63.5878 80.9595,-63.7886 81.1399,-63.4706 81.204,-62.8106 81.1836,-62.133 81.0729,-61.8151 80.9921,-61.8123 81.0841,-61.4879 81.1148,-61.7574 81.2765,-61.7026 81.3927,-61.3512 81.4754,-61.3317 81.5387,-61.5566 81.5749,-61.8969 81.6772,-61.8374 81.7841,-61.3847 81.851,-60.6652 81.9114,-60.1995 81.8677,-59.8053 81.8594,-59.5116 81.8212,-59.4623 81.6892,-59.2745 81.6465,-58.5848 81.5721,-58.3942 81.5749,-57.975 81.4559,-57.948 81.5219,-58.6508 81.6707,-58.952 81.7088,-59.242 81.8529,-59.4939 81.8993,-60.074 81.9625,-60.0768 82.0285,-59.3591 82.1029,-58.5374 82.1475,-57.9034 82.1671,-57.2722 82.2089,-57.0724 82.1401,-56.8428 82.2293,-56.6643 82.2423,-56.299 82.2089,-55.9504 82.287,-55.2458 82.3297,-55.1165 82.3149,-54.8851 82.2832,-54.5858 82.1661,-54.4538 82.0536,-54.5086 81.9923,-54.411 81.877,-54.4631 81.7803,-54.8172 81.6614,-54.8051 81.6047,-54.5941 81.6084,-54.3431 81.6744,-53.9616 81.7605,-53.8508 81.8179,-53.8308 81.881,-53.8901 81.9609,-53.5892 81.9795,-53.5422 81.9525,-53.1106 81.9641,-53.0475 81.9815,-52.7937 81.9718,-52.48 81.9248,-52.0001 81.91,-51.3604 81.8114,-51.1072 81.7476,-50.8154 81.7193,-50.7407 81.662,-50.5739 81.6175,-50.4508 81.6568,-50.494 81.7096,-51.0003 81.7721,-51.2232 81.8507,-51.5079 81.8778,-51.5723 81.9512,-51.1324 81.908,-50.8579 81.9074,-50.5539 81.8848,-50.4721 81.8623,-50.0707 81.9074,-50.1706 81.9699,-50.3252 81.9789,-50.6982 82.0362,-50.8612 82.0807,-51.2451 82.1548,-51.4261 82.2147,-51.428 82.2784,-51.5633 82.3899,-51.7533 82.4343,-51.6773 82.5168,-51.2567 82.5232,-50.3851 82.5155,-50.0199 82.4929,-49.5419 82.4053,-49.5406 82.3796,-49.2977 82.3248,-48.5705 82.2636,-48.1653 82.1805,-47.2892 82.12,-46.8698 82.0491,-46.7397 81.9763,-46.1432 81.8732,-45.8276 81.7863,-45.5802 81.7837,-45.3077 81.756,-45.2993 81.7972,-45.1679 81.8017,-45.1132 81.8668,-45.2948 81.984,-45.5744 81.9821,-45.5016 82.0717,-45.5448 82.1464,-45.653 82.1915,-45.4791 82.2881,-45.1505 82.3177,-44.8838 82.3094,-44.7556 82.3396,-44.6996 82.4118,-45.0777 82.4511,-45.4481 82.5245,-45.4307 82.5567,-45.8591 82.6192,-45.8939 82.6488,-46.225 82.692,-46.3558 82.7893,-46.0002 82.7931,-45.4262 82.7667,-44.9998 82.7609,-44.7879 82.7764,-43.6245 82.788,-43.2064 82.7674,-43.1078 82.6946,-42.8579 82.6405,-42.9468 82.5632,-42.7265 82.4788,-42.6782 82.6211,-42.8283 82.7526,-42.4907 82.7358,-42.1925 82.6746,-41.9999 82.6521,-41.6256 82.5709,-41.2771 82.5651,-41.1714 82.511,-41.1695 82.4369,-41.0323 82.3744,-40.879 82.3635,-40.8455 82.4066,-40.9576 82.4582,-40.9814 82.681,-41.1772 82.7223,-41.6958 82.7287,-42.0424 82.7886,-42.2363 82.7925,-42.8772 82.8518,-43.8377 82.8627,-44.3517 82.8479,-45.0236 82.8421,-45.5911 82.8569,-45.863 83.0141,-46.0749 83.0386,-46.0801 83.1661,-45.7702 83.1043,-45.6266 83.0978,-45.5847 83.1713,-45.2375 83.1655,-44.6597 83.123,-44.6339 83.2209,-44.3099 83.2041,-44.2699 83.275,-44 83.2853,-43.6174 83.2782,-43.5446 83.237,-43.073 83.235,-42.8025 83.1938,-42.9648 83.1339,-42.9719 83.0953,-42.7535 83.1397,-42.3967 83.1152,-42.3335 83.0901,-41.8884 83.036,-41.7454 82.9845,-41.0999 82.96,-40.5614 82.9645,-40.1292 82.9014,-40.0744 82.8331,-39.7736 82.7976,-39.6737 82.7468,-39.6705 82.826,-39.8219 82.8292,-39.9037 82.9078,-40.2509 82.9741,-40.1549 83.0205,-39.8592 83.016,-39.9011 83.0766,-39.5681 83.1101,-39.7156 83.2048,-39.8142 83.2164,-39.9018 83.3317,-39.8895 83.4438,-39.2209 83.407,-39.0469 83.3497,-38.951 83.4135,-38.8614 83.5301,-38.4975 83.4779,-38.2044 83.4669,-37.9177 83.4276,-37.805 83.3909,-37.7019 83.4773,-37.8005 83.552,-37.5473 83.5713,-36.9997 83.5642,-36.7182 83.5713,-36.5256 83.5488,-36.094 83.6112,-35.9362 83.619,-35.7159 83.5558,-35.6946 83.61,-35.533 83.5835,-35.406 83.5307,-35.3403 83.5874,-34.7793 83.6267,-33.9367 83.6331,-33.4909 83.6203,-33.4181 83.6009,-33.1199 83.619,-32.6361 83.5784,-32.1484 83.5874,-31.7368 83.608,-31.2305 83.5887,-30.5702 83.5359,-30.5773 83.5082,-30.3782 83.4843,-30.1831 83.5256,-30.0008 83.4837,-30.0001 83.445,-29.8378 83.418,-29.5589 83.4199,-29.5679 83.4644,-29.1408 83.4798,-28.4792 83.4715,-27.9439 83.4444,-27.8898 83.4322,-26.8005 83.342,-26.8359 83.2737,-26.9486 83.2357,-27.2772 83.2015,-27.4904 83.1996,-28.0637 83.1507,-28.9224 83.1416,-29.8288 83.1719,-30.6501 83.1893,-31.7413 83.1816,-32.2064 83.15,-32.2863 83.1275,-32.5208 83.1281,-33.0941 83.0701,-33.5424 83.0637,-33.9528 83.1191,-33.8877 83.0514,-34.4153 83.0122,-35.0614 82.9922,-35.35 82.9484,-35.9272 82.9503,-36.4103 82.9316,-36.6828 82.884,-36.6815 82.8311,-36.7781 82.797,-36.7885 82.7036,-36.6532 82.7532,-36.6731 82.7886,-36.5739 82.8653,-36.1514 82.9258,-35.5748 82.9303,-35.2843 82.9175,-35.1735 82.8402,-34.9802 82.8382,-34.9087 82.9574,-34.4791 82.978,-34.0005 82.9787,-33.4413 82.9967,-33.0612 82.9935,-32.7443 83.0238,-32.2844 83.083,-31.845 83.0843,-31.6337 83.1249,-30.833 83.141,-30.0516 83.1217,-29.575 83.0978,-29.526 83.0598,-29.2651 83.0869,-28.6551 83.074,-27.8144 83.065,-27.7416 83.0843,-27.1528 83.1262,-26.2491 83.1687,-25.9128 83.1642,-25.9225 83.0779,-25.7531 83.0276,-25.7724 82.9638,-26.1054 82.8898,-26.157 82.8157,-25.7737 82.8485,-25.6654 82.8962,-25.4864 82.8698,-25.3659 82.8962,-25.1185 82.8872,-24.8969 82.9168,-24.8776 82.8576,-24.6972 82.8357,-24.6199 82.7745,-24.5014 82.8382,-24.1278 82.8588,-23.568 82.7609,-23.3219 82.7996,-22.7673 82.7371,-22.5798 82.6978,-22.3917 82.6907,-21.9041 82.625,-21.9369 82.5612,-22.1399 82.5471,-22.44 82.4801,-22.8182 82.464,-22.9097 82.3821,-23.1641 82.3306,-23.6736 82.2875,-24.4763 82.2829,-25.1514 82.2482,-25.4941 82.1895,-26.2123 82.1509,-26.9119 82.1464,-27.3989 82.1509,-27.9999 82.1696,-28.7742 82.1805,-29.3192 82.1812,-29.8159 82.1715,-30.0942 82.149,-30.6346 82.1309,-31.1242 82.1335,-31.3671 82.1148,-31.4669 82.1586,-31.7684 82.1638,-31.8708 82.187,-32.2219 82.1825,-32.7089 82.1915,-32.7031 82.1754,-32.0003 82.1638,-31.5436 82.1303,-31.5004 82.0755,-31.7536 82.0465,-32.1381 82.0233,-33.2558 81.9177,-33.6017 81.8984,-33.7969 81.8571,-34.1692 81.834,-34.2278 81.7792,-34.1338 81.7502,-34.1763 81.6607,-33.6326 81.6665,-33.3943 81.7431,-32.7933 81.8236,-31.7478 81.8797,-31.1435 81.9274,-30.9638 81.9248,-30.9052 81.8546,-30.6855 81.9125,-30.6887 81.9344,-30.2443 81.977,-29.8333 81.9866,-29.6291 82.0047,-29.3315 81.9956,-28.916 82.0182,-28.2125 82.0188,-27.9999 82.0111,-27.2971 82.0111,-26.8907 81.9944,-26.1563 81.986,-26.1801 81.9164,-26.0436 81.8166,-26.2549 81.7405,-26.6736 81.6916,-27.4376 81.5879,-27.893 81.5351,-28.4225 81.4951,-28.4212 81.4623,-28.0714 81.4442,-27.8814 81.4024,-27.6115 81.4159,-27.2398 81.5022,-26.785 81.5402,-25.8027 81.6355,-25.5881 81.6826,-25.1469 81.7103,-24.8428 81.7025,-24.7604 81.8307,-24.837 81.8481,-24.7604 82.0002,-24.2579 82.0414,-23.9152 82.0556,-22.9367 82.071,-22.6494 81.9834,-22.5141 81.8803,-22.4523 81.6884,-22.5566 81.5144,-22.9006 81.3263,-23.2929 81.2877,-23.3612 81.1982,-23.6311 81.0571,-23.8521 80.9869,-24.0904 80.9385,-24.1452 80.9025,-24.2006 80.7498,-24.3874 80.695,-24.4022 80.659,-24.5774 80.6332,-24.5736 80.5572,-23.9506 80.7021,-23.6627 80.8928,-23.3728 80.925,-23.0559 81.0004,-22.9998 81.0442,-22.7312 81.1337,-22.4117 81.2104,-22.0928 81.2465,-22.1025 81.2877,-21.783 81.3276,-21.7514 81.4178,-21.4757 81.4732,-21.0718 81.5898,-20.6595 81.6278,-20.5475 81.5718,-20.512 81.4977,-20.3606 81.4197,-20.2395 81.4784,-20.0804 81.5125,-19.6952 81.5595,-19.4652 81.5318,-19.2539 81.5492,-19.0388 81.4835,-18.9106 81.4777,-18.8861 81.5222,-18.6845 81.4893,-18.6465 81.4552,-18.3978 81.4346,-18.1859 81.5576,-17.9398 81.5467,-17.9141 81.6156,-17.972 81.727,-17.7266 81.7186,-17.6751 81.8546,-17.4071 81.8294,-17.3884 81.861,-17 81.8501,-17.0141 81.8803,-16.7417 81.9286,-16.5027 81.9067,-16.006 81.9241,-15.7406 81.9016,-15.2452 81.9286,-14.9405 81.928,-14.6056 81.9035,-14.4007 81.861,-14.2352 81.8604,-13.9446 81.8185,-13.7147 81.8211,-12.9751 81.7599,-12.7374 81.7141,-12.4849 81.6285,-12.282 81.6227,-12.2376 81.5621,-12.3277 81.5293,-12.6846 81.4565,-12.9751 81.4243,-13.6573 81.2806,-13.6928 81.2374,-14.0954 81.1324,-14.431 81.1254,-14.6552 81.1382,-14.9708 81.1331,-15.0707 81.1047,-14.9534 80.9959,-14.6906 80.9585,-14.6809 80.9134,-14.9553 80.8761,-15.6762 80.8567,-15.9532 80.822,-15.9931 80.7382,-16.6753 80.7086,-17.1842 80.7472,-17.6667 80.7434,-17.887 80.8078,-18.0049 80.791,-18.0281 80.7182,-18.2426 80.6989,-18.5125 80.6358,-18.8095 80.6171,-19.261 80.639,-19.8401 80.6912,-20.065 80.695,-20.3432 80.65,-20.5404 80.5946,-21.0995 80.5739,-21.1092 80.5546,-20.8348 80.5604,-20.8438 80.4941,-20.6866 80.545,-20.3349 80.583,-20.1822 80.6384,-19.9909 80.6616,-19.5625 80.6384,-19.491 80.6004,-19.0311 80.5933,-18.595 80.5437,-17.8696 80.5701,-17.7253 80.6087,-17.2995 80.6313,-17.0998 80.5772,-16.7243 80.5733,-16.3146 80.5443,-16.2972 80.4599,-16.4073 80.4451,-16.5916 80.3749,-16.6843 80.4123,-16.6817 80.3176,-17.2042 80.2422,-17.9553 80.2403,-18.4603 80.2164,-18.7805 80.2486,-19.08 80.2473,-19.3158 80.2738,-19.6946 80.2937,-19.9774 80.268,-20.1429 80.1765,-20.3452 80.134,-20.4985 79.9774,-20.4457 79.8634,-20.3271 79.7674,-20.2453 79.7642,-20.2299 79.886,-19.9973 80.0045,-19.6501 80.038,-19.2958 80.0998,-18.8803 80.0857,-18.4152 80.1314,-17.9205 80.1411,-17.5224 80.0876,-17.7479 79.9381,-17.8812 79.895,-18.001 79.8099,-18.2149 79.7507,-18.6136 79.7436,-18.9125 79.7797,-19.3435 79.7745,-19.5516 79.7075,-19.6289 79.5445,-19.7132 79.5445,-19.8215 79.4357,-19.6134 79.3287,-19.2533 79.3184,-19.1805 79.2688,-19.2488 79.2025,-19.3106 79.2753,-19.5928 79.2025,-19.5677 79.1406,-19.8047 79.1084,-19.9342 79.1387,-20.094 79.0737,-19.9548 79.0002,-19.9116 78.9229,-20.1365 78.863,-20.4482 78.8637,-20.5404 78.8888,-20.7394 78.8823,-20.7362 78.8314,-20.8863 78.8089,-21.0164 78.8463,-21.0795 78.8037,-21.1433 78.6614,-21.3295 78.6672,-21.3462 78.6086,-21.1923 78.6453,-20.9423 78.6479,-20.9449 78.5937,-21.1433 78.5486,-21.1717 78.4565,-21.3971 78.3084,-21.3701 78.1956,-21.3984 78.1016,-21.7418 78.0127,-21.6245 77.9515,-21.6915 77.8839,-21.877 77.8523,-21.9885 77.6797,-21.4661 77.6835,-21.4287 77.8001,-21.0486 77.9876,-20.8831 78.0185,-20.6441 77.9824,-20.6589 77.9328,-20.1642 77.8452,-19.9104 77.8136,-19.3602 77.7827,-19.1689 77.7331,-18.986 77.6262,-19.3003 77.5779,-19.4704 77.5895,-19.777 77.67,-20.0469 77.7215,-20.3336 77.7267,-20.5107 77.6912,-20.6698 77.746,-20.8238 77.6829,-20.7935 77.6397,-20.3155 77.5972,-20.3239 77.5463,-20.4309 77.5669,-20.398 77.478,-20.1841 77.4626,-20.1841 77.3827,-19.8472 77.4052,-19.4272 77.3138,-19.33 77.2693,-19.015 77.2358,-19.0916 77.3312,-19.0433 77.3653,-18.4236 77.3344,-18.2516 77.2725,-18.1621 77.0857,-18.2078 76.8828,-18.2864 76.8184,-18.3959 76.8049,-18.4101 76.752,-18.6001 76.7746,-18.8172 76.7611,-18.9132 76.8068,-19.377 76.8184,-19.6012 76.8809,-20.0463 76.9305,-20.1764 76.9066,-20.5764 76.9537,-20.6924 76.9298,-20.7033 76.8673,-20.9681 76.8358,-20.981 76.7842,-21.0963 76.7669,-21.296 76.7817,-21.3746 76.7057,-21.667 76.629,-21.7514 76.6419,-22.0355 76.7868,-22.1682 76.8841,-22.2687 76.8783,-22.3183 76.7572,-22.547 76.7424,-22.4697 76.6664,-22.3028 76.5981,-22.1701 76.638,-22.0703 76.6013,-21.877 76.6032,-21.8803 76.5614,-21.7476 76.5375,-21.707 76.437,-21.6245 76.3604,-21.7669 76.2071,-21.5047 76.229,-21.0602 76.3037,-20.8476 76.2882,-20.4933 76.2096,-20.2292 76.2419,-19.96 76.247,-19.7854 76.1633,-19.8009 76.0492,-19.9509 76.0679,-20.101 76.0531,-20.2569 75.9204,-19.9638 75.941,-19.7397 75.8876,-19.5226 75.7574,-19.5722 75.6647,-19.3725 75.541,-19.3351 75.4527,-19.3622 75.3033,-19.4536 75.1854,-19.6037 75.1287,-19.884 75.1422,-19.9825 75.1667,-20.0437 75.2923,-20.1365 75.3316,-20.3336 75.3316,-20.6467 75.2898,-21.2116 75.4173,-21.2348 75.465,-21.687 75.5983,-21.783 75.5706,-21.4119 75.4701,-21.323 75.3574,-21.077 75.3252,-20.8921 75.255,-20.5687 75.1906,-20.724 75.112,-21.0216 75.1332,-21.305 75.0888,-21.5202 75.0147,-21.515 74.9748,-21.1549 75.0836,-20.9436 75.0553,-20.6705 75.0591,-20.7188 74.9767,-20.666 74.9393,-20.7362 74.8685,-20.6125 74.7557,-20.6228 74.6739,-20.2601 74.663,-20.1165 74.6733,-20.0128 74.6217,-19.8949 74.625,-19.73 74.5805,-19.6308 74.6314,-19.3776 74.6829,-19.281 74.6469,-19.3158 74.6024,-19.2539 74.5148,-18.9995 74.4968,-19.1792 74.3473,-19.3693 74.2726,-19.52 74.2397,-19.8698 74.252,-20.2286 74.2964,-20.2537 74.3892,-20.3516 74.4427,-20.6402 74.4671,-20.7549 74.4497,-21.2831 74.4768,-21.7823 74.4497,-21.8397 74.3673,-22.0535 74.3274,-22.0812 74.2236,-22.2075 74.1998,-22.2088 74.0967,-22.48 74.0813,-22.4639 74.0433,-22.2629 73.9969,-22.0825 73.9911,-21.9911 73.908,-21.8674 73.8777,-21.8191 73.8243,-21.8435 73.651,-21.7701 73.6381,-21.7611 73.8468,-21.8964 73.8983,-21.9099 74.0278,-21.6876 74.0626,-21.5053 74.0304,-21.1304 73.9202,-20.6628 73.8571,-20.284 73.8526,-20.3078 73.7637,-20.4914 73.7457,-20.552 73.7019,-20.4714 73.6181,-20.5004 73.4455,-21.3076 73.4429,-21.5672 73.4777,-21.5665 73.3817,-21.9331 73.3327,-22.1437 73.2484,-22.4098 73.249,-22.5998 73.2902,-23.0752 73.3431,-23.5274 73.4461,-23.6788 73.5015,-23.9777 73.5756,-24.0943 73.6761,-24.0015 73.7643,-24.142 73.8081,-24.5014 73.707,-24.4911 73.6278,-24.4112 73.5614,-24.4724 73.5363,-24.6547 73.5743,-24.7623 73.5692,-25.011 73.6297,-25.0032 73.6922,-25.4554 73.812,-25.5437 73.8835,-25.641 73.8584,-25.6023 73.8004,-25.2351 73.7154,-25.1224 73.7038,-25.0986 73.6143,-24.8795 73.5692,-25.1172 73.4745,-25.4058 73.4435,-25.4368 73.3572,-25.7453 73.2554,-26.1698 73.2361,-26.2987 73.2999,-26.4951 73.3469,-26.5583 73.3192,-26.7773 73.3276,-26.986 73.3798,-27.196 73.4906,-27.3287 73.4957,-27.3764 73.4423,-27.0897 73.3501,-26.8153 73.2967,-26.5022 73.2889,-26.5325 73.2277,-26.7502 73.1337,-27.0601 73.1814,-27.2701 73.1865,-27.4047 73.1562,-27.4234 73.0107,-27.3487 72.9784,-27.3409 73.0551,-27.2649 73.1227,-27.1071 73.1453,-26.91 73.1054,-26.6794 73.0957,-26.4224 73.1872,-26.1125 73.1955,-25.9025 73.1807,-25.7653 73.1285,-25.5875 73.1021,-25.1179 73.0725,-25.0019 72.9958,-25.1649 72.9263,-25.44 72.8928,-25.6996 72.9037,-25.9399 72.8103,-26.3399 72.744,-26.3908 72.6396,-26.3038 72.6345,-26.2188 72.7234,-26.0449 72.7163,-25.8278 72.7504,-25.5753 72.8348,-25.3401 72.7929,-25.2654 72.8013,-25.0329 72.7214,-24.7378 72.686,-24.7514 72.6377,-24.6773 72.4876,-24.7823 72.4921,-25.3131 72.3961,-25.3543 72.3285,-25.5141 72.2318,-25.4458 72.1172,-25.3466 72.2943,-25.1398 72.3755,-24.9646 72.3871,-24.8274 72.4354,-24.7823 72.4064,-24.58 72.4148,-24.4286 72.3459,-24.118 72.2857,-24.1133 72.2745,-23.9097 72.2699,-23.7043 72.1704,-23.1447 72.0709,-22.784 71.8655,-22.7859 71.7939,-23.0025 71.74,-22.9997 71.6312,-22.8928 71.6898,-22.4503 71.7911,-22.4206 71.7493,-22.6762 71.6563,-22.6464 71.5829,-22.4345 71.6164,-22.23 71.7577,-22.1854 71.594,-22.5284 71.5578,-22.4847 71.252,-22.3564 71.2603,-22.3062 71.4295,-22.0971 71.503,-21.7977 71.4871,-21.8173 71.2752,-21.6825 71.014,-21.6202 70.7426,-21.7262 70.4293,-21.9902 70.4079,-22.0524 70.5083,-22.4233 70.4646,-22.4838 70.8671,-22.6083 70.8225,-22.6483 70.684,-22.586 70.5734,-22.6213 70.4525,-22.718 70.4321,-23.2758 70.4451,-23.4598 70.4758,-23.9729 70.6208,-24.2165 70.8364,-24.2137 70.9889,-24.3169 71.0884,-24.6971 71.2696,-24.7101 71.357,-24.8672 71.3003,-25.121 71.2947,-25.6192 71.5327,-26.243 71.5652,-26.4716 71.6359,-26.4791 71.5745,-26.7403 71.5411,-27.0136 71.5959,-27.2999 71.7567,-27.6418 71.8576,-27.6141 71.8949,-27.7803 71.9452,-28.1049 71.9697,-28.255 71.9987,-28.4998 71.9774,-28.4631 71.9246,-28.0386 71.9001,-27.9999 71.866,-27.7352 71.8131,-27.4533 71.7316,-27.4449 71.7288,-27.2116 71.503,-27.0099 71.5308,-26.7282 71.4937,-26.4493 71.5076,-25.8981 71.4937,-25.4463 71.3486,-25.4389 71.2706,-25.6062 71.1702,-26.2551 71.0502,-26.5079 70.9675,-26.8072 70.9378,-27.1595 70.9545,-27.5249 70.9406,-27.7861 71.0196,-28.0798 70.9945,-28.0603 70.8931,-27.919 70.8829,-28.1737 70.6301,-28.4377 70.5325,-28.7947 70.5232,-29.2027 70.4748,-29.147 70.3847,-28.87 70.4609,-28.3949 70.499,-28.2564 70.3679,-27.5899 70.4293,-26.8398 70.4776,-26.5228 70.4711,-26.3359 70.3689,-26.7347 70.2945,-26.9346 70.3242,-27.2999 70.2499,-27.47 70.1783,-27.6029 70.0612,-27.5416 69.9822,-27.3371 69.9673,-27.1967 70.1709,-26.9076 70.2536,-26.2997 70.2071,-25.3032 70.4181,-25.3357 70.2787,-25.055 70.3689,-24.4833 70.2294,-24.3327 70.2257,-23.5453 70.1225,-22.7673 70.0909,-22.3053 70.1253,-22.3332 69.9933,-22.5795 69.9403,-22.7682 69.9441,-23.0155 69.7581,-23.5835 69.7302,-23.655 69.5666,-23.8028 69.5155,-23.9702 69.5843,-24.144 69.4133,-24.3504 69.4374,-24.4656 69.3547,-24.5688 69.3807,-24.6218 69.2627,-24.7584 69.2394,-25.0382 69.2868,-25.068 69.153,-25.2613 69.1409,-25.4882 68.9606,-25.7261 68.9596,-25.7549 68.8713,-26.0868 68.7765,-26.2867 68.7877,-26.3871 68.6677,-26.5237 68.6891,-27.0331 68.5999,-27.2246 68.612,-27.2367 68.5543,-27.6429 68.5506,-27.6253 68.4818,-27.8093 68.4855,-27.9962 68.5934,-28.025 68.4595,-28.2602 68.5069,-28.2527 68.4409,-28.4572 68.4632,-28.6143 68.3824,-28.8235 68.3898,-28.8755 68.3294,-29.2065 68.2643,-29.2901 68.3275,-29.4333 68.215,-29.7735 68.3033,-29.8646 68.4149,-30.0161 68.4298,-30.1351 68.2197,-30.0831 68.1351,-30.4121 68.1193,-30.44 68.2476,-30.5581 68.2123,-30.4976 68.1053,-31.1223 68.0663,-31.3268 68.11,-31.6317 68.0812,-31.7451 68.1565,-31.7033 68.2383,-32.0965 68.308,-32.143 68.3759,-32.4228 68.4558,-32.5083 68.6389,-32.7361 68.5404,-32.5446 68.4047,-32.288 68.3638,-32.2871 68.2281,-32.0984 67.9882,-32.183 67.8525,-32.3503 67.9018,-32.5669 67.8823,-32.5966 67.82,-32.895 67.7001,-33.1702 67.6963,-33.251 67.543,-33.3598 67.5606,-33.3449 67.3691,-33.45 67.3384,-33.6164 67.0865,-33.7112 67.1107,-33.8125 67.0057,-33.9966 66.9796,-34.0756 66.829,-34.0152 66.7333,-34.4093 66.5846,-34.4641 66.6719,-34.703 66.368,-34.849 66.3029,-35.2283 66.2397,-35.4755 66.2917,-35.6047 66.2574,-35.575 66.13,-35.8604 66.143,-35.9078 66.0119,-36.1021 65.9134,-36.3298 65.9562,-36.4228 66.0584,-36.5148 65.9701,-36.803 65.9301,-37.2464 65.7721,-37.7632 65.9562,-37.7734 66.0408,-37.5373 66.1095,-37.5457 66.1551,-37.2901 66.2852,-37.475 66.3457,-37.6405 66.3094,-38.1267 66.3698,-38.1304 66.3159,-37.7939 66.2908,-37.9426 66.117,-37.9435 65.9422,-38.255 65.8799,-38.3609 65.9934,-38.4288 65.9041,-38.0969 65.8028,-38.0607 65.7507,-38.2317 65.615,-38.4316 65.576,-38.4595 65.6568,-38.5896 65.5732,-38.7644 65.6057,-38.8936 65.509,-39.0479 65.6429,-39.2106 65.6754,-39.2171 65.5481,-39.3825 65.5258,-39.4132 65.6448,-39.5638 65.6643,-39.6112 65.5267,-39.8036 65.4384,-39.852 65.1567,-39.997 65.0703,-40.2796 64.9978,-40.5557 65.113,-41.092 65.0731,-41.1729 64.9532,-40.9386 64.8081,-40.5863 64.6622,-40.5584 64.4865,-40.3744 64.3926,-40.4534 64.3248,-40.6356 64.388,-41.1115 64.2941,-41.3393 64.3406,-41.5308 64.3025,-41.3997 64.163,-40.973 64.1398,-40.7704 64.1602,-40.6579 63.9929,-40.5798 63.7336,-40.7527 63.6601,-40.775 63.4863,-41.0576 63.4844,-41.0214 63.3933,-41.304 63.3571,-41.5605 63.4212,-41.6925 63.5318,-41.911 63.4519,-41.488 63.2028,-41.435 63.1005,-41.7595 62.8997,-41.7818 62.8198,-42.0039 62.8374,-42.0513 62.7733,-42.2521 62.8133,-42.4306 62.7928,-42.7039 62.6664,-42.822 62.7017,-43.1157 62.7045,-42.6137 62.6246,-42.3906 62.5604,-42.2521 62.4182,-42.267 62.342,-42.5849 62.4163,-42.6147 62.3178,-42.4288 62.3327,-42.2679 62.2295,-42.3209 62.012,-42.2605 61.8781,-42.3646 61.6829,-42.3172 61.6327,-42.5106 61.5184,-42.4501 61.4087,-42.6955 61.2646,-42.9502 61.0694,-42.8294 60.9867,-42.835 60.7227,-42.8842 60.5414,-43.0878 60.4745,-43.2263 60.5274,-43.3899 60.4661,-43.3621 60.3452,-43.1231 60.296,-43.1334 60.2077,-43.2579 60.2365,-43.2923 60.0719,-43.6493 60.1361,-44.1355 60.1658,-44.194 60.2504,-44.3139 60.1249,-44.4627 60.137,-44.5305 59.992,-44.8057 59.9753,-44.8624 60.0487,-45.1524 60.0924,-45.1691 60.1565,-44.9637 60.2913,-44.9172 60.467,-45.2091 60.3945,-45.2575 60.5284,-45.3913 60.5312,-45.4489 60.613,-45.5391 60.4503,-45.7724 60.5432,-45.725 60.7357,-46.2168 60.7319,-46.2075 60.8119,-45.8998 60.9188,-45.488 60.9829,-45.2509 61.0954,-45.2807 61.1568,-45.6553 60.9857,-46.0216 60.8956,-46.0662 60.9839,-45.7789 61.0508,-45.7836 61.325,-45.924 61.219,-45.9128 61.0815,-46.0773 61.0294,-46.2038 61.087,-46.3637 61.0647,-46.4185 60.9876,-46.6286 60.9458,-47.0571 60.9225,-47.4708 60.9309,-47.521 60.8323,-47.8064 60.8147,-47.785 60.9597,-47.8947 61.0936,-48.0927 61.0712,-48.3167 61.1744)),((-25.6992 71.0447,-25.675 70.9777,-25.411 70.934,-25.2911 70.7128,-25.3199 70.6496,-25.8897 70.5566,-26.1426 70.5427,-26.2978 70.5864,-26.625 70.5195,-26.8323 70.5288,-27.3278 70.473,-27.5574 70.4748,-27.9171 70.4302,-28.0566 70.5938,-27.9311 70.6459,-27.682 70.6552,-27.0796 70.895,-26.4847 70.909,-25.7298 71.0921,-25.6992 71.0447)),((-37.6414 65.8957,-37.3663 65.7991,-37.37 65.6215,-37.6582 65.563,-37.9361 65.615,-37.9296 65.7851,-37.6414 65.8957)),((-40.7397 64.9271,-40.485 64.8221,-40.498 64.6706,-40.3437 64.625,-40.2192 64.4298,-40.5148 64.4754,-40.5622 64.6687,-40.7564 64.7737,-40.8671 64.8918,-40.7397 64.9271)),((-44.0853 60.1556,-43.1641 60.0469,-43.2347 59.9836,-43.5099 60.0534,-43.5768 59.9065,-43.8138 59.9483,-44.1252 60.0822,-44.0853 60.1556)),((-51.098 69.9301,-50.8042 69.8966,-50.8219 69.7609,-50.9874 69.7377,-50.9623 69.562,-51.243 69.5257,-51.3294 69.6875,-51.23 69.9273,-51.098 69.9301)),((-54.3627 70.3308,-53.5298 70.2471,-53.3085 70.2081,-53.0064 70.09,-52.7396 69.9282,-52.51 69.866,-51.9978 69.8046,-51.9179 69.5973,-52.0917 69.5062,-52.6476 69.3891,-53.0138 69.3491,-53.5539 69.2571,-53.8505 69.2729,-54.1842 69.3454,-53.9648 69.4793,-54.0215 69.5527,-54.7298 69.5787,-54.9706 69.6903,-54.8451 69.9468,-54.7252 69.9645,-54.8312 70.1011,-54.8237 70.2201,-54.3627 70.3308)),((-52.9627 71.3849,-52.5779 71.344,-52.6522 71.1609,-52.9729 71.1525,-53.1338 71.2148,-53.1812 71.3319,-52.9627 71.3849)))&quot;</value>
                <value>71.0</value>
                <value>-39.0</value>
              </tuple>
            </tuple-reference>
          </tuple-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[excel-direct.42012.950994398147].[none:Country Name:nk]</field>
            <field>[excel-direct.42012.950994398147].[sum:Finance: GDP per capita (current US$):qk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
    </window>
    <window class='worksheet' name='PopulationAge'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='1' param='[excel-direct.42012.950994398147].[none:Country Name:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[excel-direct.42012.950994398147].[none:Country Name:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
    </window>
    <window class='dashboard' name='Story 2'>
      <viewpoints />
      <active id='4' />
    </window>
    <window class='worksheet' name='GDP'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[excel-direct.42012.950994398147].[none:Country Name:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[excel-direct.42012.950994398147].[none:Country Name:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
    </window>
    <window class='worksheet' name='GDPYear'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[excel-direct.42012.950994398147].[none:Country Name:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[excel-direct.42012.950994398147].[none:Country Name:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
    </window>
    <window class='dashboard' name='WorldGDPDashboard'>
      <viewpoints>
        <viewpoint name='GDP'>
          <geo-search-visibility value='1' />
        </viewpoint>
        <viewpoint name='GDPPerCapita'>
          <zoom type='entire-view' />
          <geo-search-visibility value='1' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='dashboard' maximized='true' name='WorldData'>
      <viewpoints />
      <active id='4' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='GDP' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='GDPPerCapita' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='GDPYear' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='Population' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='PopulationAge' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='Story 2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='WorldData' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='WorldGDPDashboard' width='192'>
      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
      V/twz9rGuX6M8wYzITKaEWaoOfixWAySJMHj8WjhUJ/PB4ZhQJIkEokExsbGwLLspKu26myj
      jwYZP2MVLbJ639QHUPEyDvzwy0stH6rQoCkCP77twpxsfxtrzBafzEZgKzNDfY3FYimZmqo/
      oCbKqcJtJrz6e+SyCJbrGoGlxHS3V+Ghdbm1m5krHr9uMZbOQNO8UkbvsFoJmdkIqxdomqZB
      07SWzx8OhxEOh8FxXMo+AaNymSmd3h8wKp7Zq/47GJ/XdCXYjL+6uj2nwk5zwcZldbivSH2W
      QsUshcBM6MxGW30ERhAEcBwHiqIQjUY1RVCrRFg5rMYojno8k2NrPDdTflDK82Z600GR+I8/
      uwgXFWj57u72yqIy1YqJTPa0mVBZjeRq5qgoitp7+ni//lzjaG0W6jRTTCv73pjKYXa9SY1m
      L+PA8/euLLhWnd3tlXjmrhUlv1o7kxjt7clygvTohU4Ngxqvbbym/nrGMKvZtSc7ZryXGVl5
      jQE3jS2bV+GqJTPbPytbNi6rs4V/BlHTEtSYvhWZRl49+n0FZslpemE3pliYOd768zP5BVb3
      1F8r67CJl3HgmbtW4C+vbp+zxm1OB4nv3tRR8glqs4G6ImtGptFZ7wybCZxxcUu9j/EHSM/h
      Ma70Gs0f9TM5fc+cTiYJPHJlG7Y+cMmsbw7prAvg1QfX4t5Lm2b1vqWI3ka3EnYrP0B9NW5M
      t7rGZLF943tmQm/2PPrzzD6rzVbKud9ybZnDixKee/8L/GxHT14aVVsR8jP45vpWfG11bjk+
      Nulkmww3NDSUZuurxaYApIzuk424RrPIykzSC6nVOoTxd6tj6nWMs436PVJCq1NVAJUIJ+LF
      nSfx7DvHMBS1LkaVKw3lbmy+tAl3rFwA9xQ2stikk60CqDk7VpETo/BlwiiE2WJ1/Wzum8tn
      p60AKrKs4O0jZ/E/n/bhnc+H0koHZkPIz+DKJSHccEEt1rZUluQurJlktjrFFxN5UwA9sqzg
      88Eo9vSO4dCZCE6OxHE2wiPKJyDJCiiS0BpCNFZ40Rry4eKFZWiuKo1N53OFrQDpzEiRG5Ik
      sKjGr5UHt7EpVGyv0qaksRXApqSxFcCmpLEVwKaksRXApqSxFcCmpLEVwKaksRXApqSxFcCm
      pLEVwKaksRXApqSxFcCmpLEVwKaksRXApqSxFcCmpLEVwKaksRXApqSxFcCmpLEVwKaksRXA
      pqSxFcCmpLEVwKaksRXApqSxFcCmpLEVwKaksRXApqSxFcCmpLEVwKaksRXApqSxFcCmpLEV
      wKak+X8uuCPZByP+GwAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
